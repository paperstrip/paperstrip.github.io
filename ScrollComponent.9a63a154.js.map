{"mappings":"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","sources":["<anon>","src/js/_barba/components/ScrollComponent.js","node_modules/gsap/ScrollToPlugin.js","node_modules/lenis/dist/lenis.mjs","node_modules/lenis/src/maths.js","node_modules/lenis/src/animate.js","node_modules/lenis/src/dimensions.js","node_modules/lenis/src/debounce.js","node_modules/lenis/src/emitter.js","node_modules/lenis/src/virtual-scroll.js","node_modules/lenis/src/index.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequiree21d\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1DUT6\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $13258fb0643c830f$export$2e2bcd8739ae039; });\n\nvar $hEfjX = parcelRequire(\"hEfjX\");\n\nvar $dMg7v = parcelRequire(\"dMg7v\");\n\nvar $bwnsE = parcelRequire(\"bwnsE\");\n(0, $hEfjX.gsap).registerPlugin((0, $dMg7v.ScrollToPlugin));\nclass $13258fb0643c830f$export$2e2bcd8739ae039 {\n    constructor(options = {}){\n        // options\n        this.opts = {\n            target: \"\",\n            duration: 400,\n            smooth: false,\n            offset: false\n        };\n        this.opts = Object.assign(this.opts, options);\n        this.y = 0;\n        this.limit = 0;\n        this.scroll = this.opts.target ? document.querySelectorAll(this.opts.target)[0] : document;\n        // smoothScroll\n        this.smoothScroll = false;\n    // init\n    }\n    _touchDetector() {\n        return new Promise((resolve, reject)=>{\n            const smoothScroll = new (0, $bwnsE.default)({\n                syncTouch: false\n            });\n            this.smooth = smoothScroll;\n            //get scroll value\n            this.smooth.on(\"scroll\", ({ scroll: scroll, limit: limit, velocity: velocity, direction: direction, progress: progress })=>{\n                this.y = scroll;\n                this.limit = limit;\n                window.appEvent.trigger(\"app:scroll\", [\n                    this.y,\n                    this.limit\n                ]);\n            });\n            this._scrollEvent();\n            resolve(true);\n            const modal = document.querySelector(\".cky-modal\");\n            modal.addEventListener(\"mouseenter\", ()=>{\n                this.smooth.stop();\n            });\n            modal.addEventListener(\"mouseleave\", ()=>{\n                this.smooth.start();\n            });\n            modal.addEventListener(\"wheel\", function(e) {\n                $(\".cky-preference-body-wrapper\").scrollTop($(\".cky-preference-body-wrapper\").scrollTop() + e.deltaY);\n            });\n        });\n    }\n    _clickEvents() {\n        $(\"body\").on(\"click\", \"[data-scrollto]\", (e)=>{\n            e.preventDefault();\n            e.stopPropagation();\n            let $target = $(e.currentTarget);\n            let data = $target.data(\"scrollto\");\n            if (data === \"\") data = $target.attr(\"href\");\n            console.log(\"DATA\", data);\n            this.smooth.scrollTo(document.querySelector(data));\n        //this.scrollTo(data);\n        });\n    }\n    _scrollEvent() {\n        this.scroll.addEventListener(\"scroll\", (event)=>{\n            this.y = this.scroll.scrollTop;\n            this.limit = this.scroll.scrollHeight - window.innerHeight;\n            window.appEvent.trigger(\"app:scroll\", [\n                this.y,\n                this.limit\n            ]);\n        });\n    }\n    _scrollToPosition(pos, time) {\n        console.log(\"_scrollToPosition\", pos, time);\n        if (this.opts.smooth) {\n            if (time === 0) this.smooth.scrollTo(pos, {\n                offset: 0,\n                immediate: true\n            });\n            else this.smooth.scrollTo(pos, {\n                offset: 0,\n                dration: time\n            });\n        } else if (time == 0) (0, $hEfjX.gsap).set(this.scroll, {\n            scrollTo: pos\n        });\n        else (0, $hEfjX.gsap).to(this.scroll, {\n            duration: time / 1000,\n            ease: \"power3.out\",\n            scrollTo: pos\n        });\n    }\n    scrollTo(target, time = false, offset = false) {\n        // check duration\n        if (time === false) time = this.opts.duration;\n        // check target\n        if (typeof target === \"string\") target = $(target).offset().top + $(this.scroll).scrollTop();\n        // check offset\n        if (offset === false) offset = this.opts.offset;\n        let newOffset = 0;\n        if (offset) {\n            if (typeof offset === \"string\") $(offset).each(function() {\n                newOffset += $(this).outerHeight(true);\n                console.log(\"newOffset\", newOffset);\n            });\n            else if (typeof offset == \"number\") newOffset = this.opts.offset;\n            else if (typeof offset === \"function\") newOffset = this.opts.offset();\n        }\n        if (newOffset > 0) target -= newOffset;\n        this._scrollToPosition(target, time);\n    }\n    updateView() {\n        this.opts.smooth == true && Window.isTouchDevice;\n    }\n    initView() {\n        this.scrollTo(0, 0);\n        if (window.location.hash) {\n            if ($(window.location.hash).length > 0) this.scrollTo(window.location.hash, 0);\n        }\n    }\n    init() {\n        return new Promise((resolve, reject)=>{\n            // touch detector\n            this._touchDetector();\n            // click events\n            this._clickEvents();\n            resolve(true);\n        });\n    }\n}\n\n});\nparcelRegister(\"dMg7v\", function(module, exports) {\n\n$parcel$export(module.exports, \"ScrollToPlugin\", function () { return $a07c432b41b8c31b$export$6953cc323644330b; });\n/*!\n * ScrollToPlugin 3.12.5\n * https://gsap.com\n *\n * @license Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/ /* eslint-disable */ var $a07c432b41b8c31b$var$gsap, $a07c432b41b8c31b$var$_coreInitted, $a07c432b41b8c31b$var$_window, $a07c432b41b8c31b$var$_docEl, $a07c432b41b8c31b$var$_body, $a07c432b41b8c31b$var$_toArray, $a07c432b41b8c31b$var$_config, $a07c432b41b8c31b$var$ScrollTrigger, $a07c432b41b8c31b$var$_windowExists = function _windowExists() {\n    return typeof window !== \"undefined\";\n}, $a07c432b41b8c31b$var$_getGSAP = function _getGSAP() {\n    return $a07c432b41b8c31b$var$gsap || $a07c432b41b8c31b$var$_windowExists() && ($a07c432b41b8c31b$var$gsap = window.gsap) && $a07c432b41b8c31b$var$gsap.registerPlugin && $a07c432b41b8c31b$var$gsap;\n}, $a07c432b41b8c31b$var$_isString = function _isString(value) {\n    return typeof value === \"string\";\n}, $a07c432b41b8c31b$var$_isFunction = function _isFunction(value) {\n    return typeof value === \"function\";\n}, $a07c432b41b8c31b$var$_max = function _max(element, axis) {\n    var dim = axis === \"x\" ? \"Width\" : \"Height\", scroll = \"scroll\" + dim, client = \"client\" + dim;\n    return element === $a07c432b41b8c31b$var$_window || element === $a07c432b41b8c31b$var$_docEl || element === $a07c432b41b8c31b$var$_body ? Math.max($a07c432b41b8c31b$var$_docEl[scroll], $a07c432b41b8c31b$var$_body[scroll]) - ($a07c432b41b8c31b$var$_window[\"inner\" + dim] || $a07c432b41b8c31b$var$_docEl[client] || $a07c432b41b8c31b$var$_body[client]) : element[scroll] - element[\"offset\" + dim];\n}, $a07c432b41b8c31b$var$_buildGetter = function _buildGetter(e, axis) {\n    //pass in an element and an axis (\"x\" or \"y\") and it'll return a getter function for the scroll position of that element (like scrollTop or scrollLeft, although if the element is the window, it'll use the pageXOffset/pageYOffset or the documentElement's scrollTop/scrollLeft or document.body's. Basically this streamlines things and makes a very fast getter across browsers.\n    var p = \"scroll\" + (axis === \"x\" ? \"Left\" : \"Top\");\n    if (e === $a07c432b41b8c31b$var$_window) {\n        if (e.pageXOffset != null) p = \"page\" + axis.toUpperCase() + \"Offset\";\n        else e = $a07c432b41b8c31b$var$_docEl[p] != null ? $a07c432b41b8c31b$var$_docEl : $a07c432b41b8c31b$var$_body;\n    }\n    return function() {\n        return e[p];\n    };\n}, $a07c432b41b8c31b$var$_clean = function _clean(value, index, target, targets) {\n    $a07c432b41b8c31b$var$_isFunction(value) && (value = value(index, target, targets));\n    if (typeof value !== \"object\") return $a07c432b41b8c31b$var$_isString(value) && value !== \"max\" && value.charAt(1) !== \"=\" ? {\n        x: value,\n        y: value\n    } : {\n        y: value\n    }; //if we don't receive an object as the parameter, assume the user intends \"y\".\n    else if (value.nodeType) return {\n        y: value,\n        x: value\n    };\n    else {\n        var result = {}, p;\n        for(p in value)result[p] = p !== \"onAutoKill\" && $a07c432b41b8c31b$var$_isFunction(value[p]) ? value[p](index, target, targets) : value[p];\n        return result;\n    }\n}, $a07c432b41b8c31b$var$_getOffset = function _getOffset(element, container) {\n    element = $a07c432b41b8c31b$var$_toArray(element)[0];\n    if (!element || !element.getBoundingClientRect) return console.warn(\"scrollTo target doesn't exist. Using 0\") || {\n        x: 0,\n        y: 0\n    };\n    var rect = element.getBoundingClientRect(), isRoot = !container || container === $a07c432b41b8c31b$var$_window || container === $a07c432b41b8c31b$var$_body, cRect = isRoot ? {\n        top: $a07c432b41b8c31b$var$_docEl.clientTop - ($a07c432b41b8c31b$var$_window.pageYOffset || $a07c432b41b8c31b$var$_docEl.scrollTop || $a07c432b41b8c31b$var$_body.scrollTop || 0),\n        left: $a07c432b41b8c31b$var$_docEl.clientLeft - ($a07c432b41b8c31b$var$_window.pageXOffset || $a07c432b41b8c31b$var$_docEl.scrollLeft || $a07c432b41b8c31b$var$_body.scrollLeft || 0)\n    } : container.getBoundingClientRect(), offsets = {\n        x: rect.left - cRect.left,\n        y: rect.top - cRect.top\n    };\n    if (!isRoot && container) {\n        //only add the current scroll position if it's not the window/body.\n        offsets.x += $a07c432b41b8c31b$var$_buildGetter(container, \"x\")();\n        offsets.y += $a07c432b41b8c31b$var$_buildGetter(container, \"y\")();\n    }\n    return offsets;\n}, $a07c432b41b8c31b$var$_parseVal = function _parseVal(value, target, axis, currentVal, offset) {\n    return !isNaN(value) && typeof value !== \"object\" ? parseFloat(value) - offset : $a07c432b41b8c31b$var$_isString(value) && value.charAt(1) === \"=\" ? parseFloat(value.substr(2)) * (value.charAt(0) === \"-\" ? -1 : 1) + currentVal - offset : value === \"max\" ? $a07c432b41b8c31b$var$_max(target, axis) - offset : Math.min($a07c432b41b8c31b$var$_max(target, axis), $a07c432b41b8c31b$var$_getOffset(value, target)[axis] - offset);\n}, $a07c432b41b8c31b$var$_initCore = function _initCore() {\n    $a07c432b41b8c31b$var$gsap = $a07c432b41b8c31b$var$_getGSAP();\n    if ($a07c432b41b8c31b$var$_windowExists() && $a07c432b41b8c31b$var$gsap && typeof document !== \"undefined\" && document.body) {\n        $a07c432b41b8c31b$var$_window = window;\n        $a07c432b41b8c31b$var$_body = document.body;\n        $a07c432b41b8c31b$var$_docEl = document.documentElement;\n        $a07c432b41b8c31b$var$_toArray = $a07c432b41b8c31b$var$gsap.utils.toArray;\n        $a07c432b41b8c31b$var$gsap.config({\n            autoKillThreshold: 7\n        });\n        $a07c432b41b8c31b$var$_config = $a07c432b41b8c31b$var$gsap.config();\n        $a07c432b41b8c31b$var$_coreInitted = 1;\n    }\n};\nvar $a07c432b41b8c31b$export$6953cc323644330b = {\n    version: \"3.12.5\",\n    name: \"scrollTo\",\n    rawVars: 1,\n    register: function register(core) {\n        $a07c432b41b8c31b$var$gsap = core;\n        $a07c432b41b8c31b$var$_initCore();\n    },\n    init: function init(target, value, tween, index, targets) {\n        $a07c432b41b8c31b$var$_coreInitted || $a07c432b41b8c31b$var$_initCore();\n        var data = this, snapType = $a07c432b41b8c31b$var$gsap.getProperty(target, \"scrollSnapType\");\n        data.isWin = target === $a07c432b41b8c31b$var$_window;\n        data.target = target;\n        data.tween = tween;\n        value = $a07c432b41b8c31b$var$_clean(value, index, target, targets);\n        data.vars = value;\n        data.autoKill = !!value.autoKill;\n        data.getX = $a07c432b41b8c31b$var$_buildGetter(target, \"x\");\n        data.getY = $a07c432b41b8c31b$var$_buildGetter(target, \"y\");\n        data.x = data.xPrev = data.getX();\n        data.y = data.yPrev = data.getY();\n        $a07c432b41b8c31b$var$ScrollTrigger || ($a07c432b41b8c31b$var$ScrollTrigger = $a07c432b41b8c31b$var$gsap.core.globals().ScrollTrigger);\n        $a07c432b41b8c31b$var$gsap.getProperty(target, \"scrollBehavior\") === \"smooth\" && $a07c432b41b8c31b$var$gsap.set(target, {\n            scrollBehavior: \"auto\"\n        });\n        if (snapType && snapType !== \"none\") {\n            // disable scroll snapping to avoid strange behavior\n            data.snap = 1;\n            data.snapInline = target.style.scrollSnapType;\n            target.style.scrollSnapType = \"none\";\n        }\n        if (value.x != null) {\n            data.add(data, \"x\", data.x, $a07c432b41b8c31b$var$_parseVal(value.x, target, \"x\", data.x, value.offsetX || 0), index, targets);\n            data._props.push(\"scrollTo_x\");\n        } else data.skipX = 1;\n        if (value.y != null) {\n            data.add(data, \"y\", data.y, $a07c432b41b8c31b$var$_parseVal(value.y, target, \"y\", data.y, value.offsetY || 0), index, targets);\n            data._props.push(\"scrollTo_y\");\n        } else data.skipY = 1;\n    },\n    render: function render(ratio, data) {\n        var pt = data._pt, target = data.target, tween = data.tween, autoKill = data.autoKill, xPrev = data.xPrev, yPrev = data.yPrev, isWin = data.isWin, snap = data.snap, snapInline = data.snapInline, x, y, yDif, xDif, threshold;\n        while(pt){\n            pt.r(ratio, pt.d);\n            pt = pt._next;\n        }\n        x = isWin || !data.skipX ? data.getX() : xPrev;\n        y = isWin || !data.skipY ? data.getY() : yPrev;\n        yDif = y - yPrev;\n        xDif = x - xPrev;\n        threshold = $a07c432b41b8c31b$var$_config.autoKillThreshold;\n        if (data.x < 0) //can't scroll to a position less than 0! Might happen if someone uses a Back.easeOut or Elastic.easeOut when scrolling back to the top of the page (for example)\n        data.x = 0;\n        if (data.y < 0) data.y = 0;\n        if (autoKill) {\n            //note: iOS has a bug that throws off the scroll by several pixels, so we need to check if it's within 7 pixels of the previous one that we set instead of just looking for an exact match.\n            if (!data.skipX && (xDif > threshold || xDif < -threshold) && x < $a07c432b41b8c31b$var$_max(target, \"x\")) data.skipX = 1; //if the user scrolls separately, we should stop tweening!\n            if (!data.skipY && (yDif > threshold || yDif < -threshold) && y < $a07c432b41b8c31b$var$_max(target, \"y\")) data.skipY = 1; //if the user scrolls separately, we should stop tweening!\n            if (data.skipX && data.skipY) {\n                tween.kill();\n                data.vars.onAutoKill && data.vars.onAutoKill.apply(tween, data.vars.onAutoKillParams || []);\n            }\n        }\n        if (isWin) $a07c432b41b8c31b$var$_window.scrollTo(!data.skipX ? data.x : x, !data.skipY ? data.y : y);\n        else {\n            data.skipY || (target.scrollTop = data.y);\n            data.skipX || (target.scrollLeft = data.x);\n        }\n        if (snap && (ratio === 1 || ratio === 0)) {\n            y = target.scrollTop;\n            x = target.scrollLeft;\n            snapInline ? target.style.scrollSnapType = snapInline : target.style.removeProperty(\"scroll-snap-type\");\n            target.scrollTop = y + 1; // bug in Safari causes the element to totally reset its scroll position when scroll-snap-type changes, so we need to set it to a slightly different value and then back again to work around this bug.\n            target.scrollLeft = x + 1;\n            target.scrollTop = y;\n            target.scrollLeft = x;\n        }\n        data.xPrev = data.x;\n        data.yPrev = data.y;\n        $a07c432b41b8c31b$var$ScrollTrigger && $a07c432b41b8c31b$var$ScrollTrigger.update();\n    },\n    kill: function kill(property) {\n        var both = property === \"scrollTo\", i = this._props.indexOf(property);\n        if (both || property === \"scrollTo_x\") this.skipX = 1;\n        if (both || property === \"scrollTo_y\") this.skipY = 1;\n        i > -1 && this._props.splice(i, 1);\n        return !this._props.length;\n    }\n};\n$a07c432b41b8c31b$export$6953cc323644330b.max = $a07c432b41b8c31b$var$_max;\n$a07c432b41b8c31b$export$6953cc323644330b.getOffset = $a07c432b41b8c31b$var$_getOffset;\n$a07c432b41b8c31b$export$6953cc323644330b.buildGetter = $a07c432b41b8c31b$var$_buildGetter;\n$a07c432b41b8c31b$var$_getGSAP() && $a07c432b41b8c31b$var$gsap.registerPlugin($a07c432b41b8c31b$export$6953cc323644330b);\n\n});\n\nparcelRegister(\"bwnsE\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $f60fb54e410f74a1$export$2e2bcd8739ae039; });\nfunction $f60fb54e410f74a1$var$clamp(t, e, i) {\n    return Math.max(t, Math.min(e, i));\n}\nclass $f60fb54e410f74a1$var$Animate {\n    advance(t) {\n        if (!this.isRunning) return;\n        let e = !1;\n        if (this.lerp) this.value = function damp(t, e, i, s) {\n            return function lerp(t, e, i) {\n                return (1 - i) * t + i * e;\n            }(t, e, 1 - Math.exp(-i * s));\n        }(this.value, this.to, 60 * this.lerp, t), Math.round(this.value) === this.to && (this.value = this.to, e = !0);\n        else {\n            this.currentTime += t;\n            const i = $f60fb54e410f74a1$var$clamp(0, this.currentTime / this.duration, 1);\n            e = i >= 1;\n            const s = e ? 1 : this.easing(i);\n            this.value = this.from + (this.to - this.from) * s;\n        }\n        e && this.stop(), this.onUpdate?.(this.value, e);\n    }\n    stop() {\n        this.isRunning = !1;\n    }\n    fromTo(t, e, { lerp: i = .1, duration: s = 1, easing: o = (t)=>t, onStart: n, onUpdate: r }) {\n        this.from = this.value = t, this.to = e, this.lerp = i, this.duration = s, this.easing = o, this.currentTime = 0, this.isRunning = !0, n?.(), this.onUpdate = r;\n    }\n}\nclass $f60fb54e410f74a1$var$Dimensions {\n    constructor({ wrapper: t, content: e, autoResize: i = !0, debounce: s = 250 } = {}){\n        this.wrapper = t, this.content = e, i && (this.debouncedResize = function debounce(t, e) {\n            let i;\n            return function() {\n                let s = arguments, o = this;\n                clearTimeout(i), i = setTimeout(function() {\n                    t.apply(o, s);\n                }, e);\n            };\n        }(this.resize, s), this.wrapper === window ? window.addEventListener(\"resize\", this.debouncedResize, !1) : (this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize), this.wrapperResizeObserver.observe(this.wrapper)), this.contentResizeObserver = new ResizeObserver(this.debouncedResize), this.contentResizeObserver.observe(this.content)), this.resize();\n    }\n    destroy() {\n        this.wrapperResizeObserver?.disconnect(), this.contentResizeObserver?.disconnect(), window.removeEventListener(\"resize\", this.debouncedResize, !1);\n    }\n    resize = ()=>{\n        this.onWrapperResize(), this.onContentResize();\n    };\n    onWrapperResize = ()=>{\n        this.wrapper === window ? (this.width = window.innerWidth, this.height = window.innerHeight) : (this.width = this.wrapper.clientWidth, this.height = this.wrapper.clientHeight);\n    };\n    onContentResize = ()=>{\n        this.wrapper === window ? (this.scrollHeight = this.content.scrollHeight, this.scrollWidth = this.content.scrollWidth) : (this.scrollHeight = this.wrapper.scrollHeight, this.scrollWidth = this.wrapper.scrollWidth);\n    };\n    get limit() {\n        return {\n            x: this.scrollWidth - this.width,\n            y: this.scrollHeight - this.height\n        };\n    }\n}\nclass $f60fb54e410f74a1$var$Emitter {\n    constructor(){\n        this.events = {};\n    }\n    emit(t, ...e) {\n        let i = this.events[t] || [];\n        for(let t = 0, s = i.length; t < s; t++)i[t](...e);\n    }\n    on(t, e) {\n        return this.events[t]?.push(e) || (this.events[t] = [\n            e\n        ]), ()=>{\n            this.events[t] = this.events[t]?.filter((t)=>e !== t);\n        };\n    }\n    off(t, e) {\n        this.events[t] = this.events[t]?.filter((t)=>e !== t);\n    }\n    destroy() {\n        this.events = {};\n    }\n}\nconst $f60fb54e410f74a1$var$t = 100 / 6;\nclass $f60fb54e410f74a1$var$VirtualScroll {\n    constructor(t, { wheelMultiplier: e = 1, touchMultiplier: i = 1 }){\n        this.element = t, this.wheelMultiplier = e, this.touchMultiplier = i, this.touchStart = {\n            x: null,\n            y: null\n        }, this.emitter = new $f60fb54e410f74a1$var$Emitter, window.addEventListener(\"resize\", this.onWindowResize, !1), this.onWindowResize(), this.element.addEventListener(\"wheel\", this.onWheel, {\n            passive: !1\n        }), this.element.addEventListener(\"touchstart\", this.onTouchStart, {\n            passive: !1\n        }), this.element.addEventListener(\"touchmove\", this.onTouchMove, {\n            passive: !1\n        }), this.element.addEventListener(\"touchend\", this.onTouchEnd, {\n            passive: !1\n        });\n    }\n    on(t, e) {\n        return this.emitter.on(t, e);\n    }\n    destroy() {\n        this.emitter.destroy(), window.removeEventListener(\"resize\", this.onWindowResize, !1), this.element.removeEventListener(\"wheel\", this.onWheel, {\n            passive: !1\n        }), this.element.removeEventListener(\"touchstart\", this.onTouchStart, {\n            passive: !1\n        }), this.element.removeEventListener(\"touchmove\", this.onTouchMove, {\n            passive: !1\n        }), this.element.removeEventListener(\"touchend\", this.onTouchEnd, {\n            passive: !1\n        });\n    }\n    onTouchStart = (t)=>{\n        const { clientX: e, clientY: i } = t.targetTouches ? t.targetTouches[0] : t;\n        this.touchStart.x = e, this.touchStart.y = i, this.lastDelta = {\n            x: 0,\n            y: 0\n        }, this.emitter.emit(\"scroll\", {\n            deltaX: 0,\n            deltaY: 0,\n            event: t\n        });\n    };\n    onTouchMove = (t)=>{\n        const { clientX: e, clientY: i } = t.targetTouches ? t.targetTouches[0] : t, s = -(e - this.touchStart.x) * this.touchMultiplier, o = -(i - this.touchStart.y) * this.touchMultiplier;\n        this.touchStart.x = e, this.touchStart.y = i, this.lastDelta = {\n            x: s,\n            y: o\n        }, this.emitter.emit(\"scroll\", {\n            deltaX: s,\n            deltaY: o,\n            event: t\n        });\n    };\n    onTouchEnd = (t)=>{\n        this.emitter.emit(\"scroll\", {\n            deltaX: this.lastDelta.x,\n            deltaY: this.lastDelta.y,\n            event: t\n        });\n    };\n    onWheel = (e)=>{\n        let { deltaX: i, deltaY: s, deltaMode: o } = e;\n        i *= 1 === o ? $f60fb54e410f74a1$var$t : 2 === o ? this.windowWidth : 1, s *= 1 === o ? $f60fb54e410f74a1$var$t : 2 === o ? this.windowHeight : 1, i *= this.wheelMultiplier, s *= this.wheelMultiplier, this.emitter.emit(\"scroll\", {\n            deltaX: i,\n            deltaY: s,\n            event: e\n        });\n    };\n    onWindowResize = ()=>{\n        this.windowWidth = window.innerWidth, this.windowHeight = window.innerHeight;\n    };\n}\nclass $f60fb54e410f74a1$export$2e2bcd8739ae039 {\n    constructor({ wrapper: t = window, content: e = document.documentElement, wheelEventsTarget: i = t, eventsTarget: s = i, smoothWheel: o = !0, syncTouch: n = !1, syncTouchLerp: r = .075, touchInertiaMultiplier: l = 35, duration: h, easing: a = (t)=>Math.min(1, 1.001 - Math.pow(2, -10 * t)), lerp: c = !h && .1, infinite: u = !1, orientation: d = \"vertical\", gestureOrientation: p = \"vertical\", touchMultiplier: m = 1, wheelMultiplier: v = 1, autoResize: g = !0, prevent: S = !1, __experimental__naiveDimensions: w = !1 } = {}){\n        this.__isScrolling = !1, this.__isStopped = !1, this.__isLocked = !1, this.onVirtualScroll = ({ deltaX: t, deltaY: e, event: i })=>{\n            if (i.ctrlKey) return;\n            const s = i.type.includes(\"touch\"), o = i.type.includes(\"wheel\");\n            this.isTouching = \"touchstart\" === i.type || \"touchmove\" === i.type;\n            if (this.options.syncTouch && s && \"touchstart\" === i.type && !this.isStopped && !this.isLocked) return void this.reset();\n            const n = 0 === t && 0 === e, r = \"vertical\" === this.options.gestureOrientation && 0 === e || \"horizontal\" === this.options.gestureOrientation && 0 === t;\n            if (n || r) return;\n            let l = i.composedPath();\n            l = l.slice(0, l.indexOf(this.rootElement));\n            const h = this.options.prevent;\n            if (l.find((t)=>{\n                var e, i, n, r, l;\n                return (\"function\" == typeof h ? null == h ? void 0 : h(t) : h) || (null === (e = t.hasAttribute) || void 0 === e ? void 0 : e.call(t, \"data-lenis-prevent\")) || s && (null === (i = t.hasAttribute) || void 0 === i ? void 0 : i.call(t, \"data-lenis-prevent-touch\")) || o && (null === (n = t.hasAttribute) || void 0 === n ? void 0 : n.call(t, \"data-lenis-prevent-wheel\")) || (null === (r = t.classList) || void 0 === r ? void 0 : r.contains(\"lenis\")) && !(null === (l = t.classList) || void 0 === l ? void 0 : l.contains(\"lenis-stopped\"));\n            })) return;\n            if (this.isStopped || this.isLocked) return void i.preventDefault();\n            if (!(this.options.syncTouch && s || this.options.smoothWheel && o)) return this.isScrolling = \"native\", void this.animate.stop();\n            i.preventDefault();\n            let a = e;\n            \"both\" === this.options.gestureOrientation ? a = Math.abs(e) > Math.abs(t) ? e : t : \"horizontal\" === this.options.gestureOrientation && (a = t);\n            const c = s && this.options.syncTouch, u = s && \"touchend\" === i.type && Math.abs(a) > 5;\n            u && (a = this.velocity * this.options.touchInertiaMultiplier), this.scrollTo(this.targetScroll + a, Object.assign({\n                programmatic: !1\n            }, c ? {\n                lerp: u ? this.options.syncTouchLerp : 1\n            } : {\n                lerp: this.options.lerp,\n                duration: this.options.duration,\n                easing: this.options.easing\n            }));\n        }, this.onNativeScroll = ()=>{\n            if (clearTimeout(this.__resetVelocityTimeout), delete this.__resetVelocityTimeout, this.__preventNextNativeScrollEvent) delete this.__preventNextNativeScrollEvent;\n            else if (!1 === this.isScrolling || \"native\" === this.isScrolling) {\n                const t = this.animatedScroll;\n                this.animatedScroll = this.targetScroll = this.actualScroll, this.lastVelocity = this.velocity, this.velocity = this.animatedScroll - t, this.direction = Math.sign(this.animatedScroll - t), this.isScrolling = !!this.hasScrolled && \"native\", this.emit(), 0 !== this.velocity && (this.__resetVelocityTimeout = setTimeout(()=>{\n                    this.lastVelocity = this.velocity, this.velocity = 0, this.isScrolling = !1, this.emit();\n                }, 400));\n            }\n        }, window.lenisVersion = \"1.1.1\", t !== document.documentElement && t !== document.body || (t = window), this.options = {\n            wrapper: t,\n            content: e,\n            wheelEventsTarget: i,\n            eventsTarget: s,\n            smoothWheel: o,\n            syncTouch: n,\n            syncTouchLerp: r,\n            touchInertiaMultiplier: l,\n            duration: h,\n            easing: a,\n            lerp: c,\n            infinite: u,\n            gestureOrientation: p,\n            orientation: d,\n            touchMultiplier: m,\n            wheelMultiplier: v,\n            autoResize: g,\n            prevent: S,\n            __experimental__naiveDimensions: w\n        }, this.animate = new $f60fb54e410f74a1$var$Animate, this.emitter = new $f60fb54e410f74a1$var$Emitter, this.dimensions = new $f60fb54e410f74a1$var$Dimensions({\n            wrapper: t,\n            content: e,\n            autoResize: g\n        }), this.updateClassName(), this.userData = {}, this.time = 0, this.velocity = this.lastVelocity = 0, this.isLocked = !1, this.isStopped = !1, this.isScrolling = !1, this.targetScroll = this.animatedScroll = this.actualScroll, this.options.wrapper.addEventListener(\"scroll\", this.onNativeScroll, !1), this.virtualScroll = new $f60fb54e410f74a1$var$VirtualScroll(s, {\n            touchMultiplier: m,\n            wheelMultiplier: v\n        }), this.virtualScroll.on(\"scroll\", this.onVirtualScroll);\n    }\n    destroy() {\n        this.emitter.destroy(), this.options.wrapper.removeEventListener(\"scroll\", this.onNativeScroll, !1), this.virtualScroll.destroy(), this.dimensions.destroy(), this.cleanUpClassName();\n    }\n    on(t, e) {\n        return this.emitter.on(t, e);\n    }\n    off(t, e) {\n        return this.emitter.off(t, e);\n    }\n    setScroll(t) {\n        this.isHorizontal ? this.rootElement.scrollLeft = t : this.rootElement.scrollTop = t;\n    }\n    resize() {\n        this.dimensions.resize();\n    }\n    emit({ userData: t = {} } = {}) {\n        this.userData = t, this.emitter.emit(\"scroll\", this), this.userData = {};\n    }\n    reset() {\n        this.isLocked = !1, this.isScrolling = !1, this.animatedScroll = this.targetScroll = this.actualScroll, this.lastVelocity = this.velocity = 0, this.animate.stop();\n    }\n    start() {\n        this.isStopped && (this.isStopped = !1, this.reset());\n    }\n    stop() {\n        this.isStopped || (this.isStopped = !0, this.animate.stop(), this.reset());\n    }\n    raf(t) {\n        const e = t - (this.time || t);\n        this.time = t, this.animate.advance(.001 * e);\n    }\n    scrollTo(t, { offset: e = 0, immediate: i = !1, lock: s = !1, duration: o = this.options.duration, easing: n = this.options.easing, lerp: r = !o && this.options.lerp, onStart: l, onComplete: h, force: a = !1, programmatic: c = !0, userData: u = {} } = {}) {\n        if (!this.isStopped && !this.isLocked || a) {\n            if ([\n                \"top\",\n                \"left\",\n                \"start\"\n            ].includes(t)) t = 0;\n            else if ([\n                \"bottom\",\n                \"right\",\n                \"end\"\n            ].includes(t)) t = this.limit;\n            else {\n                let i;\n                if (\"string\" == typeof t ? i = document.querySelector(t) : (null == t ? void 0 : t.nodeType) && (i = t), i) {\n                    if (this.options.wrapper !== window) {\n                        const t = this.options.wrapper.getBoundingClientRect();\n                        e -= this.isHorizontal ? t.left : t.top;\n                    }\n                    const s = i.getBoundingClientRect();\n                    t = (this.isHorizontal ? s.left : s.top) + this.animatedScroll;\n                }\n            }\n            if (\"number\" == typeof t) {\n                if (t += e, t = Math.round(t), this.options.infinite ? c && (this.targetScroll = this.animatedScroll = this.scroll) : t = $f60fb54e410f74a1$var$clamp(0, t, this.limit), i) return this.animatedScroll = this.targetScroll = t, this.setScroll(this.scroll), this.reset(), void (null == h || h(this));\n                t !== this.targetScroll && (c || (this.targetScroll = t), this.animate.fromTo(this.animatedScroll, t, {\n                    duration: o,\n                    easing: n,\n                    lerp: r,\n                    onStart: ()=>{\n                        s && (this.isLocked = !0), this.isScrolling = \"smooth\", null == l || l(this);\n                    },\n                    onUpdate: (t, e)=>{\n                        this.isScrolling = \"smooth\", this.lastVelocity = this.velocity, this.velocity = t - this.animatedScroll, this.direction = Math.sign(this.velocity), this.animatedScroll = t, this.setScroll(this.scroll), c && (this.targetScroll = t), e || this.emit({\n                            userData: u\n                        }), e && (this.reset(), this.emit({\n                            userData: u\n                        }), null == h || h(this), this.__preventNextNativeScrollEvent = !0);\n                    }\n                }));\n            }\n        }\n    }\n    get rootElement() {\n        return this.options.wrapper === window ? document.documentElement : this.options.wrapper;\n    }\n    get limit() {\n        return this.options.__experimental__naiveDimensions ? this.isHorizontal ? this.rootElement.scrollWidth - this.rootElement.clientWidth : this.rootElement.scrollHeight - this.rootElement.clientHeight : this.dimensions.limit[this.isHorizontal ? \"x\" : \"y\"];\n    }\n    get isHorizontal() {\n        return \"horizontal\" === this.options.orientation;\n    }\n    get actualScroll() {\n        return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop;\n    }\n    get scroll() {\n        return this.options.infinite ? function modulo(t, e) {\n            return (t % e + e) % e;\n        }(this.animatedScroll, this.limit) : this.animatedScroll;\n    }\n    get progress() {\n        return 0 === this.limit ? 1 : this.scroll / this.limit;\n    }\n    get isScrolling() {\n        return this.__isScrolling;\n    }\n    set isScrolling(t) {\n        this.__isScrolling !== t && (this.__isScrolling = t, this.updateClassName());\n    }\n    get isStopped() {\n        return this.__isStopped;\n    }\n    set isStopped(t) {\n        this.__isStopped !== t && (this.__isStopped = t, this.updateClassName());\n    }\n    get isLocked() {\n        return this.__isLocked;\n    }\n    set isLocked(t) {\n        this.__isLocked !== t && (this.__isLocked = t, this.updateClassName());\n    }\n    get isSmooth() {\n        return \"smooth\" === this.isScrolling;\n    }\n    get className() {\n        let t = \"lenis\";\n        return this.isStopped && (t += \" lenis-stopped\"), this.isLocked && (t += \" lenis-locked\"), this.isScrolling && (t += \" lenis-scrolling\"), \"smooth\" === this.isScrolling && (t += \" lenis-smooth\"), t;\n    }\n    updateClassName() {\n        this.cleanUpClassName(), this.rootElement.className = `${this.rootElement.className} ${this.className}`.trim();\n    }\n    cleanUpClassName() {\n        this.rootElement.className = this.rootElement.className.replace(/lenis(-\\w+)?/g, \"\").trim();\n    }\n}\n\n});\n\n\n\n//# sourceMappingURL=ScrollComponent.9a63a154.js.map\n","import { gsap } from 'gsap';\nimport { ScrollToPlugin } from 'gsap/ScrollToPlugin';\nimport Lenis from 'lenis'\n\ngsap.registerPlugin(ScrollToPlugin);\n\nexport default class ScrollComponent {\n    constructor(options = {}) {\n        // options\n        this.opts = {\n            target: '',\n            duration: 400,\n            smooth: false,\n            offset: false\n        };\n        this.opts = Object.assign(this.opts, options);\n\n        this.y = 0;\n        this.limit = 0;\n        this.scroll = this.opts.target ? document.querySelectorAll(this.opts.target)[0] : document;\n\n        // smoothScroll\n        this.smoothScroll = false;\n\n        // init\n    }\n\n    _touchDetector() {\n        return new Promise((resolve, reject) => {\n            const smoothScroll = new Lenis({\n                syncTouch: false,\n            })\n            this.smooth = smoothScroll\n            //get scroll value\n            this.smooth.on('scroll', ({ scroll, limit, velocity, direction, progress }) => {\n                this.y = scroll\n                this.limit = limit\n                window.appEvent.trigger('app:scroll', [this.y, this.limit]);\n\n            })\n\n\n            this._scrollEvent();\n            resolve(true)\n            const modal = document.querySelector('.cky-modal')\n            modal.addEventListener('mouseenter', () => {\n                this.smooth.stop()\n            })\n            modal.addEventListener('mouseleave', () => {\n                this.smooth.start()\n            })\n            modal.addEventListener('wheel', function (e) {\n                $('.cky-preference-body-wrapper').scrollTop($('.cky-preference-body-wrapper').scrollTop() + e.deltaY)\n\n            });\n\n        })\n\n\n    }\n\n    _clickEvents() {\n        $('body').on('click', '[data-scrollto]', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            let $target = $(e.currentTarget);\n            let data = $target.data('scrollto');\n\n            if (data === '') {\n                data = $target.attr('href');\n            }\n            console.log('DATA', data)\n            this.smooth.scrollTo(document.querySelector(data));\n            //this.scrollTo(data);\n        })\n    }\n\n    _scrollEvent() {\n        this.scroll.addEventListener(\"scroll\", (event) => {\n            this.y = this.scroll.scrollTop;\n            this.limit = this.scroll.scrollHeight - window.innerHeight;\n            window.appEvent.trigger('app:scroll', [this.y, this.limit]);\n        })\n    }\n\n    _scrollToPosition(pos, time) {\n        console.log('_scrollToPosition', pos, time);\n\n        if (this.opts.smooth) {\n            if (time === 0) {\n\n                this.smooth.scrollTo(pos, { offset: 0, immediate: true })\n\n            } else {\n                this.smooth.scrollTo(pos, { offset: 0, dration: time })\n\n            }\n        }\n        else {\n            if (time == 0) {\n                gsap.set(this.scroll, {\n                    scrollTo: pos\n                });\n            }\n            else {\n                gsap.to(this.scroll, {\n                    duration: time / 1000,\n                    ease: \"power3.out\",\n                    scrollTo: pos\n                });\n            }\n        }\n    }\n\n    scrollTo(target, time = false, offset = false) {\n        // check duration\n        if (time === false) time = this.opts.duration;\n\n        // check target\n        if (typeof target === 'string') {\n            target = $(target).offset().top + $(this.scroll).scrollTop();\n        }\n\n        // check offset\n        if (offset === false) {\n            offset = this.opts.offset;\n        }\n\n        let newOffset = 0;\n\n        if (offset) {\n            if (typeof offset === 'string') {\n                $(offset).each(function () {\n                    newOffset += $(this).outerHeight(true);\n                    console.log('newOffset', newOffset);\n                });\n            }\n            else if (typeof offset == 'number') {\n                newOffset = this.opts.offset;\n            }\n            else if (typeof offset === 'function') {\n                newOffset = this.opts.offset();\n            }\n        }\n\n        if (newOffset > 0) {\n            target -= newOffset;\n        }\n\n        this._scrollToPosition(target, time);\n    }\n\n    updateView() {\n        if (this.opts.smooth == true && Window.isTouchDevice !== true) {\n            // smooth\n        }\n    }\n\n    initView() {\n        this.scrollTo(0, 0);\n        if (window.location.hash) {\n            if ($(window.location.hash).length > 0) {\n                this.scrollTo(window.location.hash, 0);\n            }\n        }\n    }\n\n    init() {\n        return new Promise((resolve, reject) => {\n            // touch detector\n            this._touchDetector();\n\n            // click events\n            this._clickEvents();\n            resolve(true)\n        })\n\n\n    }\n}\n","/*!\n * ScrollToPlugin 3.12.5\n * https://gsap.com\n *\n * @license Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _window,\n    _docEl,\n    _body,\n    _toArray,\n    _config,\n    ScrollTrigger,\n    _windowExists = function _windowExists() {\n  return typeof window !== \"undefined\";\n},\n    _getGSAP = function _getGSAP() {\n  return gsap || _windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _isString = function _isString(value) {\n  return typeof value === \"string\";\n},\n    _isFunction = function _isFunction(value) {\n  return typeof value === \"function\";\n},\n    _max = function _max(element, axis) {\n  var dim = axis === \"x\" ? \"Width\" : \"Height\",\n      scroll = \"scroll\" + dim,\n      client = \"client\" + dim;\n  return element === _window || element === _docEl || element === _body ? Math.max(_docEl[scroll], _body[scroll]) - (_window[\"inner\" + dim] || _docEl[client] || _body[client]) : element[scroll] - element[\"offset\" + dim];\n},\n    _buildGetter = function _buildGetter(e, axis) {\n  //pass in an element and an axis (\"x\" or \"y\") and it'll return a getter function for the scroll position of that element (like scrollTop or scrollLeft, although if the element is the window, it'll use the pageXOffset/pageYOffset or the documentElement's scrollTop/scrollLeft or document.body's. Basically this streamlines things and makes a very fast getter across browsers.\n  var p = \"scroll\" + (axis === \"x\" ? \"Left\" : \"Top\");\n\n  if (e === _window) {\n    if (e.pageXOffset != null) {\n      p = \"page\" + axis.toUpperCase() + \"Offset\";\n    } else {\n      e = _docEl[p] != null ? _docEl : _body;\n    }\n  }\n\n  return function () {\n    return e[p];\n  };\n},\n    _clean = function _clean(value, index, target, targets) {\n  _isFunction(value) && (value = value(index, target, targets));\n\n  if (typeof value !== \"object\") {\n    return _isString(value) && value !== \"max\" && value.charAt(1) !== \"=\" ? {\n      x: value,\n      y: value\n    } : {\n      y: value\n    }; //if we don't receive an object as the parameter, assume the user intends \"y\".\n  } else if (value.nodeType) {\n    return {\n      y: value,\n      x: value\n    };\n  } else {\n    var result = {},\n        p;\n\n    for (p in value) {\n      result[p] = p !== \"onAutoKill\" && _isFunction(value[p]) ? value[p](index, target, targets) : value[p];\n    }\n\n    return result;\n  }\n},\n    _getOffset = function _getOffset(element, container) {\n  element = _toArray(element)[0];\n\n  if (!element || !element.getBoundingClientRect) {\n    return console.warn(\"scrollTo target doesn't exist. Using 0\") || {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var rect = element.getBoundingClientRect(),\n      isRoot = !container || container === _window || container === _body,\n      cRect = isRoot ? {\n    top: _docEl.clientTop - (_window.pageYOffset || _docEl.scrollTop || _body.scrollTop || 0),\n    left: _docEl.clientLeft - (_window.pageXOffset || _docEl.scrollLeft || _body.scrollLeft || 0)\n  } : container.getBoundingClientRect(),\n      offsets = {\n    x: rect.left - cRect.left,\n    y: rect.top - cRect.top\n  };\n\n  if (!isRoot && container) {\n    //only add the current scroll position if it's not the window/body.\n    offsets.x += _buildGetter(container, \"x\")();\n    offsets.y += _buildGetter(container, \"y\")();\n  }\n\n  return offsets;\n},\n    _parseVal = function _parseVal(value, target, axis, currentVal, offset) {\n  return !isNaN(value) && typeof value !== \"object\" ? parseFloat(value) - offset : _isString(value) && value.charAt(1) === \"=\" ? parseFloat(value.substr(2)) * (value.charAt(0) === \"-\" ? -1 : 1) + currentVal - offset : value === \"max\" ? _max(target, axis) - offset : Math.min(_max(target, axis), _getOffset(value, target)[axis] - offset);\n},\n    _initCore = function _initCore() {\n  gsap = _getGSAP();\n\n  if (_windowExists() && gsap && typeof document !== \"undefined\" && document.body) {\n    _window = window;\n    _body = document.body;\n    _docEl = document.documentElement;\n    _toArray = gsap.utils.toArray;\n    gsap.config({\n      autoKillThreshold: 7\n    });\n    _config = gsap.config();\n    _coreInitted = 1;\n  }\n};\n\nexport var ScrollToPlugin = {\n  version: \"3.12.5\",\n  name: \"scrollTo\",\n  rawVars: 1,\n  register: function register(core) {\n    gsap = core;\n\n    _initCore();\n  },\n  init: function init(target, value, tween, index, targets) {\n    _coreInitted || _initCore();\n    var data = this,\n        snapType = gsap.getProperty(target, \"scrollSnapType\");\n    data.isWin = target === _window;\n    data.target = target;\n    data.tween = tween;\n    value = _clean(value, index, target, targets);\n    data.vars = value;\n    data.autoKill = !!value.autoKill;\n    data.getX = _buildGetter(target, \"x\");\n    data.getY = _buildGetter(target, \"y\");\n    data.x = data.xPrev = data.getX();\n    data.y = data.yPrev = data.getY();\n    ScrollTrigger || (ScrollTrigger = gsap.core.globals().ScrollTrigger);\n    gsap.getProperty(target, \"scrollBehavior\") === \"smooth\" && gsap.set(target, {\n      scrollBehavior: \"auto\"\n    });\n\n    if (snapType && snapType !== \"none\") {\n      // disable scroll snapping to avoid strange behavior\n      data.snap = 1;\n      data.snapInline = target.style.scrollSnapType;\n      target.style.scrollSnapType = \"none\";\n    }\n\n    if (value.x != null) {\n      data.add(data, \"x\", data.x, _parseVal(value.x, target, \"x\", data.x, value.offsetX || 0), index, targets);\n\n      data._props.push(\"scrollTo_x\");\n    } else {\n      data.skipX = 1;\n    }\n\n    if (value.y != null) {\n      data.add(data, \"y\", data.y, _parseVal(value.y, target, \"y\", data.y, value.offsetY || 0), index, targets);\n\n      data._props.push(\"scrollTo_y\");\n    } else {\n      data.skipY = 1;\n    }\n  },\n  render: function render(ratio, data) {\n    var pt = data._pt,\n        target = data.target,\n        tween = data.tween,\n        autoKill = data.autoKill,\n        xPrev = data.xPrev,\n        yPrev = data.yPrev,\n        isWin = data.isWin,\n        snap = data.snap,\n        snapInline = data.snapInline,\n        x,\n        y,\n        yDif,\n        xDif,\n        threshold;\n\n    while (pt) {\n      pt.r(ratio, pt.d);\n      pt = pt._next;\n    }\n\n    x = isWin || !data.skipX ? data.getX() : xPrev;\n    y = isWin || !data.skipY ? data.getY() : yPrev;\n    yDif = y - yPrev;\n    xDif = x - xPrev;\n    threshold = _config.autoKillThreshold;\n\n    if (data.x < 0) {\n      //can't scroll to a position less than 0! Might happen if someone uses a Back.easeOut or Elastic.easeOut when scrolling back to the top of the page (for example)\n      data.x = 0;\n    }\n\n    if (data.y < 0) {\n      data.y = 0;\n    }\n\n    if (autoKill) {\n      //note: iOS has a bug that throws off the scroll by several pixels, so we need to check if it's within 7 pixels of the previous one that we set instead of just looking for an exact match.\n      if (!data.skipX && (xDif > threshold || xDif < -threshold) && x < _max(target, \"x\")) {\n        data.skipX = 1; //if the user scrolls separately, we should stop tweening!\n      }\n\n      if (!data.skipY && (yDif > threshold || yDif < -threshold) && y < _max(target, \"y\")) {\n        data.skipY = 1; //if the user scrolls separately, we should stop tweening!\n      }\n\n      if (data.skipX && data.skipY) {\n        tween.kill();\n        data.vars.onAutoKill && data.vars.onAutoKill.apply(tween, data.vars.onAutoKillParams || []);\n      }\n    }\n\n    if (isWin) {\n      _window.scrollTo(!data.skipX ? data.x : x, !data.skipY ? data.y : y);\n    } else {\n      data.skipY || (target.scrollTop = data.y);\n      data.skipX || (target.scrollLeft = data.x);\n    }\n\n    if (snap && (ratio === 1 || ratio === 0)) {\n      y = target.scrollTop;\n      x = target.scrollLeft;\n      snapInline ? target.style.scrollSnapType = snapInline : target.style.removeProperty(\"scroll-snap-type\");\n      target.scrollTop = y + 1; // bug in Safari causes the element to totally reset its scroll position when scroll-snap-type changes, so we need to set it to a slightly different value and then back again to work around this bug.\n\n      target.scrollLeft = x + 1;\n      target.scrollTop = y;\n      target.scrollLeft = x;\n    }\n\n    data.xPrev = data.x;\n    data.yPrev = data.y;\n    ScrollTrigger && ScrollTrigger.update();\n  },\n  kill: function kill(property) {\n    var both = property === \"scrollTo\",\n        i = this._props.indexOf(property);\n\n    if (both || property === \"scrollTo_x\") {\n      this.skipX = 1;\n    }\n\n    if (both || property === \"scrollTo_y\") {\n      this.skipY = 1;\n    }\n\n    i > -1 && this._props.splice(i, 1);\n    return !this._props.length;\n  }\n};\nScrollToPlugin.max = _max;\nScrollToPlugin.getOffset = _getOffset;\nScrollToPlugin.buildGetter = _buildGetter;\n_getGSAP() && gsap.registerPlugin(ScrollToPlugin);\nexport { ScrollToPlugin as default };","function clamp(t,e,i){return Math.max(t,Math.min(e,i))}class Animate{advance(t){if(!this.isRunning)return;let e=!1;if(this.lerp)this.value=function damp(t,e,i,s){return function lerp(t,e,i){return(1-i)*t+i*e}(t,e,1-Math.exp(-i*s))}(this.value,this.to,60*this.lerp,t),Math.round(this.value)===this.to&&(this.value=this.to,e=!0);else{this.currentTime+=t;const i=clamp(0,this.currentTime/this.duration,1);e=i>=1;const s=e?1:this.easing(i);this.value=this.from+(this.to-this.from)*s}e&&this.stop(),this.onUpdate?.(this.value,e)}stop(){this.isRunning=!1}fromTo(t,e,{lerp:i=.1,duration:s=1,easing:o=(t=>t),onStart:n,onUpdate:r}){this.from=this.value=t,this.to=e,this.lerp=i,this.duration=s,this.easing=o,this.currentTime=0,this.isRunning=!0,n?.(),this.onUpdate=r}}class Dimensions{constructor({wrapper:t,content:e,autoResize:i=!0,debounce:s=250}={}){this.wrapper=t,this.content=e,i&&(this.debouncedResize=function debounce(t,e){let i;return function(){let s=arguments,o=this;clearTimeout(i),i=setTimeout((function(){t.apply(o,s)}),e)}}(this.resize,s),this.wrapper===window?window.addEventListener(\"resize\",this.debouncedResize,!1):(this.wrapperResizeObserver=new ResizeObserver(this.debouncedResize),this.wrapperResizeObserver.observe(this.wrapper)),this.contentResizeObserver=new ResizeObserver(this.debouncedResize),this.contentResizeObserver.observe(this.content)),this.resize()}destroy(){this.wrapperResizeObserver?.disconnect(),this.contentResizeObserver?.disconnect(),window.removeEventListener(\"resize\",this.debouncedResize,!1)}resize=()=>{this.onWrapperResize(),this.onContentResize()};onWrapperResize=()=>{this.wrapper===window?(this.width=window.innerWidth,this.height=window.innerHeight):(this.width=this.wrapper.clientWidth,this.height=this.wrapper.clientHeight)};onContentResize=()=>{this.wrapper===window?(this.scrollHeight=this.content.scrollHeight,this.scrollWidth=this.content.scrollWidth):(this.scrollHeight=this.wrapper.scrollHeight,this.scrollWidth=this.wrapper.scrollWidth)};get limit(){return{x:this.scrollWidth-this.width,y:this.scrollHeight-this.height}}}class Emitter{constructor(){this.events={}}emit(t,...e){let i=this.events[t]||[];for(let t=0,s=i.length;t<s;t++)i[t](...e)}on(t,e){return this.events[t]?.push(e)||(this.events[t]=[e]),()=>{this.events[t]=this.events[t]?.filter((t=>e!==t))}}off(t,e){this.events[t]=this.events[t]?.filter((t=>e!==t))}destroy(){this.events={}}}const t=100/6;class VirtualScroll{constructor(t,{wheelMultiplier:e=1,touchMultiplier:i=1}){this.element=t,this.wheelMultiplier=e,this.touchMultiplier=i,this.touchStart={x:null,y:null},this.emitter=new Emitter,window.addEventListener(\"resize\",this.onWindowResize,!1),this.onWindowResize(),this.element.addEventListener(\"wheel\",this.onWheel,{passive:!1}),this.element.addEventListener(\"touchstart\",this.onTouchStart,{passive:!1}),this.element.addEventListener(\"touchmove\",this.onTouchMove,{passive:!1}),this.element.addEventListener(\"touchend\",this.onTouchEnd,{passive:!1})}on(t,e){return this.emitter.on(t,e)}destroy(){this.emitter.destroy(),window.removeEventListener(\"resize\",this.onWindowResize,!1),this.element.removeEventListener(\"wheel\",this.onWheel,{passive:!1}),this.element.removeEventListener(\"touchstart\",this.onTouchStart,{passive:!1}),this.element.removeEventListener(\"touchmove\",this.onTouchMove,{passive:!1}),this.element.removeEventListener(\"touchend\",this.onTouchEnd,{passive:!1})}onTouchStart=t=>{const{clientX:e,clientY:i}=t.targetTouches?t.targetTouches[0]:t;this.touchStart.x=e,this.touchStart.y=i,this.lastDelta={x:0,y:0},this.emitter.emit(\"scroll\",{deltaX:0,deltaY:0,event:t})};onTouchMove=t=>{const{clientX:e,clientY:i}=t.targetTouches?t.targetTouches[0]:t,s=-(e-this.touchStart.x)*this.touchMultiplier,o=-(i-this.touchStart.y)*this.touchMultiplier;this.touchStart.x=e,this.touchStart.y=i,this.lastDelta={x:s,y:o},this.emitter.emit(\"scroll\",{deltaX:s,deltaY:o,event:t})};onTouchEnd=t=>{this.emitter.emit(\"scroll\",{deltaX:this.lastDelta.x,deltaY:this.lastDelta.y,event:t})};onWheel=e=>{let{deltaX:i,deltaY:s,deltaMode:o}=e;i*=1===o?t:2===o?this.windowWidth:1,s*=1===o?t:2===o?this.windowHeight:1,i*=this.wheelMultiplier,s*=this.wheelMultiplier,this.emitter.emit(\"scroll\",{deltaX:i,deltaY:s,event:e})};onWindowResize=()=>{this.windowWidth=window.innerWidth,this.windowHeight=window.innerHeight}}class Lenis{constructor({wrapper:t=window,content:e=document.documentElement,wheelEventsTarget:i=t,eventsTarget:s=i,smoothWheel:o=!0,syncTouch:n=!1,syncTouchLerp:r=.075,touchInertiaMultiplier:l=35,duration:h,easing:a=(t=>Math.min(1,1.001-Math.pow(2,-10*t))),lerp:c=!h&&.1,infinite:u=!1,orientation:d=\"vertical\",gestureOrientation:p=\"vertical\",touchMultiplier:m=1,wheelMultiplier:v=1,autoResize:g=!0,prevent:S=!1,__experimental__naiveDimensions:w=!1}={}){this.__isScrolling=!1,this.__isStopped=!1,this.__isLocked=!1,this.onVirtualScroll=({deltaX:t,deltaY:e,event:i})=>{if(i.ctrlKey)return;const s=i.type.includes(\"touch\"),o=i.type.includes(\"wheel\");this.isTouching=\"touchstart\"===i.type||\"touchmove\"===i.type;if(this.options.syncTouch&&s&&\"touchstart\"===i.type&&!this.isStopped&&!this.isLocked)return void this.reset();const n=0===t&&0===e,r=\"vertical\"===this.options.gestureOrientation&&0===e||\"horizontal\"===this.options.gestureOrientation&&0===t;if(n||r)return;let l=i.composedPath();l=l.slice(0,l.indexOf(this.rootElement));const h=this.options.prevent;if(l.find((t=>{var e,i,n,r,l;return(\"function\"==typeof h?null==h?void 0:h(t):h)||(null===(e=t.hasAttribute)||void 0===e?void 0:e.call(t,\"data-lenis-prevent\"))||s&&(null===(i=t.hasAttribute)||void 0===i?void 0:i.call(t,\"data-lenis-prevent-touch\"))||o&&(null===(n=t.hasAttribute)||void 0===n?void 0:n.call(t,\"data-lenis-prevent-wheel\"))||(null===(r=t.classList)||void 0===r?void 0:r.contains(\"lenis\"))&&!(null===(l=t.classList)||void 0===l?void 0:l.contains(\"lenis-stopped\"))})))return;if(this.isStopped||this.isLocked)return void i.preventDefault();if(!(this.options.syncTouch&&s||this.options.smoothWheel&&o))return this.isScrolling=\"native\",void this.animate.stop();i.preventDefault();let a=e;\"both\"===this.options.gestureOrientation?a=Math.abs(e)>Math.abs(t)?e:t:\"horizontal\"===this.options.gestureOrientation&&(a=t);const c=s&&this.options.syncTouch,u=s&&\"touchend\"===i.type&&Math.abs(a)>5;u&&(a=this.velocity*this.options.touchInertiaMultiplier),this.scrollTo(this.targetScroll+a,Object.assign({programmatic:!1},c?{lerp:u?this.options.syncTouchLerp:1}:{lerp:this.options.lerp,duration:this.options.duration,easing:this.options.easing}))},this.onNativeScroll=()=>{if(clearTimeout(this.__resetVelocityTimeout),delete this.__resetVelocityTimeout,this.__preventNextNativeScrollEvent)delete this.__preventNextNativeScrollEvent;else if(!1===this.isScrolling||\"native\"===this.isScrolling){const t=this.animatedScroll;this.animatedScroll=this.targetScroll=this.actualScroll,this.lastVelocity=this.velocity,this.velocity=this.animatedScroll-t,this.direction=Math.sign(this.animatedScroll-t),this.isScrolling=!!this.hasScrolled&&\"native\",this.emit(),0!==this.velocity&&(this.__resetVelocityTimeout=setTimeout((()=>{this.lastVelocity=this.velocity,this.velocity=0,this.isScrolling=!1,this.emit()}),400))}},window.lenisVersion=\"1.1.1\",t!==document.documentElement&&t!==document.body||(t=window),this.options={wrapper:t,content:e,wheelEventsTarget:i,eventsTarget:s,smoothWheel:o,syncTouch:n,syncTouchLerp:r,touchInertiaMultiplier:l,duration:h,easing:a,lerp:c,infinite:u,gestureOrientation:p,orientation:d,touchMultiplier:m,wheelMultiplier:v,autoResize:g,prevent:S,__experimental__naiveDimensions:w},this.animate=new Animate,this.emitter=new Emitter,this.dimensions=new Dimensions({wrapper:t,content:e,autoResize:g}),this.updateClassName(),this.userData={},this.time=0,this.velocity=this.lastVelocity=0,this.isLocked=!1,this.isStopped=!1,this.isScrolling=!1,this.targetScroll=this.animatedScroll=this.actualScroll,this.options.wrapper.addEventListener(\"scroll\",this.onNativeScroll,!1),this.virtualScroll=new VirtualScroll(s,{touchMultiplier:m,wheelMultiplier:v}),this.virtualScroll.on(\"scroll\",this.onVirtualScroll)}destroy(){this.emitter.destroy(),this.options.wrapper.removeEventListener(\"scroll\",this.onNativeScroll,!1),this.virtualScroll.destroy(),this.dimensions.destroy(),this.cleanUpClassName()}on(t,e){return this.emitter.on(t,e)}off(t,e){return this.emitter.off(t,e)}setScroll(t){this.isHorizontal?this.rootElement.scrollLeft=t:this.rootElement.scrollTop=t}resize(){this.dimensions.resize()}emit({userData:t={}}={}){this.userData=t,this.emitter.emit(\"scroll\",this),this.userData={}}reset(){this.isLocked=!1,this.isScrolling=!1,this.animatedScroll=this.targetScroll=this.actualScroll,this.lastVelocity=this.velocity=0,this.animate.stop()}start(){this.isStopped&&(this.isStopped=!1,this.reset())}stop(){this.isStopped||(this.isStopped=!0,this.animate.stop(),this.reset())}raf(t){const e=t-(this.time||t);this.time=t,this.animate.advance(.001*e)}scrollTo(t,{offset:e=0,immediate:i=!1,lock:s=!1,duration:o=this.options.duration,easing:n=this.options.easing,lerp:r=!o&&this.options.lerp,onStart:l,onComplete:h,force:a=!1,programmatic:c=!0,userData:u={}}={}){if(!this.isStopped&&!this.isLocked||a){if([\"top\",\"left\",\"start\"].includes(t))t=0;else if([\"bottom\",\"right\",\"end\"].includes(t))t=this.limit;else{let i;if(\"string\"==typeof t?i=document.querySelector(t):(null==t?void 0:t.nodeType)&&(i=t),i){if(this.options.wrapper!==window){const t=this.options.wrapper.getBoundingClientRect();e-=this.isHorizontal?t.left:t.top}const s=i.getBoundingClientRect();t=(this.isHorizontal?s.left:s.top)+this.animatedScroll}}if(\"number\"==typeof t){if(t+=e,t=Math.round(t),this.options.infinite?c&&(this.targetScroll=this.animatedScroll=this.scroll):t=clamp(0,t,this.limit),i)return this.animatedScroll=this.targetScroll=t,this.setScroll(this.scroll),this.reset(),void(null==h||h(this));t!==this.targetScroll&&(c||(this.targetScroll=t),this.animate.fromTo(this.animatedScroll,t,{duration:o,easing:n,lerp:r,onStart:()=>{s&&(this.isLocked=!0),this.isScrolling=\"smooth\",null==l||l(this)},onUpdate:(t,e)=>{this.isScrolling=\"smooth\",this.lastVelocity=this.velocity,this.velocity=t-this.animatedScroll,this.direction=Math.sign(this.velocity),this.animatedScroll=t,this.setScroll(this.scroll),c&&(this.targetScroll=t),e||this.emit({userData:u}),e&&(this.reset(),this.emit({userData:u}),null==h||h(this),this.__preventNextNativeScrollEvent=!0)}}))}}}get rootElement(){return this.options.wrapper===window?document.documentElement:this.options.wrapper}get limit(){return this.options.__experimental__naiveDimensions?this.isHorizontal?this.rootElement.scrollWidth-this.rootElement.clientWidth:this.rootElement.scrollHeight-this.rootElement.clientHeight:this.dimensions.limit[this.isHorizontal?\"x\":\"y\"]}get isHorizontal(){return\"horizontal\"===this.options.orientation}get actualScroll(){return this.isHorizontal?this.rootElement.scrollLeft:this.rootElement.scrollTop}get scroll(){return this.options.infinite?function modulo(t,e){return(t%e+e)%e}(this.animatedScroll,this.limit):this.animatedScroll}get progress(){return 0===this.limit?1:this.scroll/this.limit}get isScrolling(){return this.__isScrolling}set isScrolling(t){this.__isScrolling!==t&&(this.__isScrolling=t,this.updateClassName())}get isStopped(){return this.__isStopped}set isStopped(t){this.__isStopped!==t&&(this.__isStopped=t,this.updateClassName())}get isLocked(){return this.__isLocked}set isLocked(t){this.__isLocked!==t&&(this.__isLocked=t,this.updateClassName())}get isSmooth(){return\"smooth\"===this.isScrolling}get className(){let t=\"lenis\";return this.isStopped&&(t+=\" lenis-stopped\"),this.isLocked&&(t+=\" lenis-locked\"),this.isScrolling&&(t+=\" lenis-scrolling\"),\"smooth\"===this.isScrolling&&(t+=\" lenis-smooth\"),t}updateClassName(){this.cleanUpClassName(),this.rootElement.className=`${this.rootElement.className} ${this.className}`.trim()}cleanUpClassName(){this.rootElement.className=this.rootElement.className.replace(/lenis(-\\w+)?/g,\"\").trim()}}export{Lenis as default};\n//# sourceMappingURL=lenis.mjs.map\n","// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, completed)\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({\r\n    wrapper,\r\n    content,\r\n    autoResize = true,\r\n    debounce: debounceValue = 250,\r\n  } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      this.debouncedResize = debounce(this.resize, debounceValue)\r\n\r\n      if (this.wrapper === window) {\r\n        window.addEventListener('resize', this.debouncedResize, false)\r\n      } else {\r\n        this.wrapperResizeObserver = new ResizeObserver(this.debouncedResize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(this.debouncedResize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n    window.removeEventListener('resize', this.debouncedResize, false)\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.scrollHeight = this.content.scrollHeight\r\n      this.scrollWidth = this.content.scrollWidth\r\n    } else {\r\n      this.scrollHeight = this.wrapper.scrollHeight\r\n      this.scrollWidth = this.wrapper.scrollWidth\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n","import { Emitter } from './emitter'\r\n\r\nconst LINE_HEIGHT = 100 / 6\r\n\r\nexport class VirtualScroll {\r\n  constructor(element, { wheelMultiplier = 1, touchMultiplier = 1 }) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n    this.onWindowResize()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX: 0,\r\n      deltaY: 0,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY, deltaMode } = event\r\n\r\n    const multiplierX =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowWidth : 1\r\n    const multiplierY =\r\n      deltaMode === 1 ? LINE_HEIGHT : deltaMode === 2 ? this.windowHeight : 1\r\n\r\n    deltaX *= multiplierX\r\n    deltaY *= multiplierY\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowWidth = window.innerWidth\r\n    this.windowHeight = window.innerHeight\r\n  }\r\n}\r\n","import { version } from '../../../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\ntype EasingFunction = (t: number) => number\r\ntype Orientation = 'vertical' | 'horizontal'\r\ntype GestureOrientation = 'vertical' | 'horizontal' | 'both'\r\n\r\nexport type LenisOptions = {\r\n  wrapper?: Window | HTMLElement\r\n  content?: HTMLElement\r\n  wheelEventsTarget?: Window | HTMLElement\r\n  eventsTarget?: Window | HTMLElement\r\n  smoothWheel?: boolean\r\n  syncTouch?: boolean\r\n  syncTouchLerp?: number\r\n  touchInertiaMultiplier?: number\r\n  duration?: number\r\n  easing?: EasingFunction\r\n  lerp?: number\r\n  infinite?: boolean\r\n  orientation?: Orientation\r\n  gestureOrientation?: GestureOrientation\r\n  touchMultiplier?: number\r\n  wheelMultiplier?: number\r\n  autoResize?: boolean\r\n  prevent?: boolean | ((node: Element) => boolean)\r\n  __experimental__naiveDimensions?: boolean\r\n}\r\n\r\nexport default class Lenis {\r\n  // __isSmooth: boolean = false // true if scroll should be animated\r\n  __isScrolling: boolean | 'native' | 'smooth' = false // true when scroll is animating\r\n  __isStopped: boolean = false // true if user should not be able to scroll - enable/disable programmatically\r\n  __isLocked: boolean = false // same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  time: number\r\n  userData: object\r\n  lastVelocity: number\r\n  velocity: number\r\n  direction: 1 | -1 | undefined\r\n  options: LenisOptions\r\n  targetScroll: number\r\n  animatedScroll: number\r\n  // animate: Animate\r\n  // emitter: Emitter\r\n  // dimensions: Dimensions\r\n  // virtualScroll: VirtualScroll\r\n\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper, // deprecated\r\n    eventsTarget = wheelEventsTarget,\r\n    smoothWheel = true,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.075,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = !duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    autoResize = true,\r\n    prevent = false,\r\n    __experimental__naiveDimensions = false,\r\n  }: LenisOptions = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      eventsTarget,\r\n      smoothWheel,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      autoResize,\r\n      prevent,\r\n      __experimental__naiveDimensions,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    // this.toggleClassName('lenis', true)\r\n    this.updateClassName()\r\n\r\n    this.userData = {}\r\n    this.time = 0\r\n    this.velocity = this.lastVelocity = 0\r\n    this.isLocked = false\r\n    this.isStopped = false\r\n    // this.hasScrolled = false\r\n    // this.isSmooth = syncTouch || smoothWheel\r\n    // this.isSmooth = false\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onNativeScroll, false)\r\n\r\n    this.virtualScroll = new VirtualScroll(eventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener(\r\n      'scroll',\r\n      this.onNativeScroll,\r\n      false\r\n    )\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.cleanUpClassName()\r\n\r\n    // this.rootElement.className = ''\r\n\r\n    // this.toggleClassName('lenis', false)\r\n    // this.toggleClassName('lenis-smooth', false)\r\n    // this.toggleClassName('lenis-scrolling', false)\r\n    // this.toggleClassName('lenis-stopped', false)\r\n    // this.toggleClassName('lenis-locked', false)\r\n  }\r\n\r\n  on(event: string, callback: Function) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event: string, callback: Function) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  private setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  private onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    this.isTouching = event.type === 'touchstart' || event.type === 'touchmove'\r\n    // if (event.type === 'touchend') {\r\n    //   console.log('touchend', this.scroll)\r\n    //   // this.lastVelocity = this.velocity\r\n    //   // this.velocity = 0\r\n    //   // this.isScrolling = false\r\n    //   this.emit({ type: 'touchend' })\r\n    //   // alert('touchend')\r\n    //   return\r\n    // }\r\n\r\n    const isTapToStop =\r\n      this.options.syncTouch &&\r\n      isTouch &&\r\n      event.type === 'touchstart' &&\r\n      !this.isStopped &&\r\n      !this.isLocked\r\n\r\n    if (isTapToStop) {\r\n      this.reset()\r\n      return\r\n    }\r\n\r\n    const isClick = deltaX === 0 && deltaY === 0 // click event\r\n\r\n    // const isPullToRefresh =\r\n    //   this.options.gestureOrientation === 'vertical' &&\r\n    //   this.scroll === 0 &&\r\n    //   !this.options.infinite &&\r\n    //   deltaY <= 5 // touch pull to refresh, not reliable yet\r\n\r\n    const isUnknownGesture =\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n\r\n    if (isClick || isUnknownGesture) {\r\n      // console.log('prevent')\r\n      return\r\n    }\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    const prevent = this.options.prevent\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          (typeof prevent === 'function' ? prevent?.(node) : prevent) ||\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          (node.classList?.contains('lenis') &&\r\n            !node.classList?.contains('lenis-stopped')) // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault() // this will stop forwarding the event to the parent, this is problematic\r\n      return\r\n    }\r\n\r\n    const isSmooth =\r\n      (this.options.syncTouch && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!isSmooth) {\r\n      this.isScrolling = 'native'\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 5\r\n\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch\r\n        ? {\r\n            lerp: hasTouchInertia ? this.options.syncTouchLerp : 1,\r\n          }\r\n        : {\r\n            lerp: this.options.lerp,\r\n            duration: this.options.duration,\r\n            easing: this.options.easing,\r\n          }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  private emit({ userData = {} } = {}) {\r\n    this.userData = userData\r\n    this.emitter.emit('scroll', this)\r\n    this.userData = {}\r\n  }\r\n\r\n  private onNativeScroll = () => {\r\n    clearTimeout(this.__resetVelocityTimeout)\r\n    delete this.__resetVelocityTimeout\r\n\r\n    if (this.__preventNextNativeScrollEvent) {\r\n      delete this.__preventNextNativeScrollEvent\r\n      return\r\n    }\r\n\r\n    if (this.isScrolling === false || this.isScrolling === 'native') {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.lastVelocity = this.velocity\r\n      this.velocity = this.animatedScroll - lastScroll\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      // this.isSmooth = false\r\n      this.isScrolling = this.hasScrolled ? 'native' : false\r\n      this.emit()\r\n\r\n      if (this.velocity !== 0) {\r\n        this.__resetVelocityTimeout = setTimeout(() => {\r\n          this.lastVelocity = this.velocity\r\n          this.velocity = 0\r\n          this.isScrolling = false\r\n          this.emit()\r\n        }, 400)\r\n      }\r\n\r\n      // this.hasScrolled = true\r\n      // }, 50)\r\n    }\r\n  }\r\n\r\n  private reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.animatedScroll = this.targetScroll = this.actualScroll\r\n    this.lastVelocity = this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    if (!this.isStopped) return\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    if (this.isStopped) return\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time: number) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target: number | string | HTMLElement,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onStart,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n      userData = {},\r\n    }: {\r\n      offset?: number\r\n      immediate?: boolean\r\n      lock?: boolean\r\n      duration?: number\r\n      easing?: EasingFunction\r\n      lerp?: number\r\n      onStart?: (lenis: Lenis) => void\r\n      onComplete?: (lenis: Lenis) => void\r\n      force?: boolean\r\n      programmatic?: boolean\r\n      userData?: object\r\n    } = {}\r\n  ) {\r\n    if ((this.isStopped || this.isLocked) && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (target === this.targetScroll) return\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = 'smooth'\r\n        onStart?.(this)\r\n      },\r\n      onUpdate: (value: number, completed: boolean) => {\r\n        this.isScrolling = 'smooth'\r\n\r\n        // updated\r\n        this.lastVelocity = this.velocity\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit({ userData })\r\n\r\n        if (completed) {\r\n          this.reset()\r\n          this.emit({ userData })\r\n          onComplete?.(this)\r\n\r\n          // avoid emitting event twice\r\n          this.__preventNextNativeScrollEvent = true\r\n          // requestAnimationFrame(() => {\r\n          //   delete this.__preventNextNativeScrollEvent\r\n          // })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? document.documentElement\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    if (this.options.__experimental__naiveDimensions) {\r\n      if (this.isHorizontal) {\r\n        return this.rootElement.scrollWidth - this.rootElement.clientWidth\r\n      } else {\r\n        return this.rootElement.scrollHeight - this.rootElement.clientHeight\r\n      }\r\n    } else {\r\n      return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n    }\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll(): number {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll(): number {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress(): number {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  // get isSmooth() {\r\n  //   return this.__isSmooth\r\n  // }\r\n\r\n  // private set isSmooth(value: boolean) {\r\n  //   if (this.__isSmooth !== value) {\r\n  //     this.__isSmooth = value\r\n  //     this.updateClassName()\r\n  //   }\r\n  // }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  private set isScrolling(value: boolean) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  private set isStopped(value: boolean) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isLocked() {\r\n    return this.__isLocked\r\n  }\r\n\r\n  private set isLocked(value: boolean) {\r\n    if (this.__isLocked !== value) {\r\n      this.__isLocked = value\r\n      this.updateClassName()\r\n    }\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.isScrolling === 'smooth'\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isLocked) className += ' lenis-locked'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isScrolling === 'smooth') className += ' lenis-smooth'\r\n    // if (this.isScrolling === 'native') className += ' lenis-native'\r\n    // if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  private updateClassName() {\r\n    this.cleanUpClassName()\r\n\r\n    this.rootElement.className =\r\n      `${this.rootElement.className} ${this.className}`.trim()\r\n    // this.emitter.emit('className change', this)\r\n  }\r\n\r\n  private cleanUpClassName() {\r\n    this.rootElement.className = this.rootElement.className\r\n      .replace(/lenis(-\\w+)?/g, '')\r\n      .trim()\r\n  }\r\n\r\n  // private toggleClassName(name: string, value: boolean) {\r\n  //   // this.rootElement.classList.toggle(name, value)\r\n  //   this.rootElement.className = this.className\r\n  //   this.emitter.emit('className change', this)\r\n  // }\r\n}\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$13258fb0643c830f$export$2e2bcd8739ae039","$hEfjX","$dMg7v","$bwnsE","gsap","registerPlugin","ScrollToPlugin","constructor","options","opts","target","duration","smooth","offset","assign","y","limit","scroll","document","querySelectorAll","smoothScroll","_touchDetector","Promise","resolve","reject","default","syncTouch","on","velocity","direction","progress","appEvent","trigger","_scrollEvent","modal","querySelector","addEventListener","stop","start","$","scrollTop","deltaY","_clickEvents","preventDefault","stopPropagation","$target","currentTarget","data","attr","console","log","scrollTo","event","scrollHeight","innerHeight","_scrollToPosition","pos","time","immediate","dration","to","ease","top","newOffset","each","outerHeight","updateView","Window","isTouchDevice","initView","location","hash","length","init","$a07c432b41b8c31b$export$6953cc323644330b","$a07c432b41b8c31b$var$gsap","$a07c432b41b8c31b$var$_coreInitted","$a07c432b41b8c31b$var$_window","$a07c432b41b8c31b$var$_docEl","$a07c432b41b8c31b$var$_body","$a07c432b41b8c31b$var$_toArray","$a07c432b41b8c31b$var$_config","$a07c432b41b8c31b$var$ScrollTrigger","$a07c432b41b8c31b$var$_windowExists","$a07c432b41b8c31b$var$_getGSAP","$a07c432b41b8c31b$var$_isString","value","$a07c432b41b8c31b$var$_isFunction","$a07c432b41b8c31b$var$_max","element","axis","dim","client","Math","max","$a07c432b41b8c31b$var$_buildGetter","p","pageXOffset","toUpperCase","$a07c432b41b8c31b$var$_clean","index","targets","charAt","x","nodeType","result","$a07c432b41b8c31b$var$_getOffset","container","getBoundingClientRect","warn","rect","isRoot","cRect","clientTop","pageYOffset","left","clientLeft","scrollLeft","offsets","$a07c432b41b8c31b$var$_parseVal","currentVal","isNaN","parseFloat","substr","min","$a07c432b41b8c31b$var$_initCore","body","documentElement","utils","toArray","config","autoKillThreshold","version","name","rawVars","core","tween","snapType","getProperty","isWin","vars","autoKill","getX","getY","xPrev","yPrev","globals","ScrollTrigger","scrollBehavior","snap","snapInline","style","scrollSnapType","add","offsetX","_props","push","skipX","offsetY","skipY","render","ratio","yDif","xDif","threshold","pt","_pt","r","d","_next","kill","onAutoKill","apply","onAutoKillParams","removeProperty","update","property","both","i","indexOf","splice","getOffset","buildGetter","$f60fb54e410f74a1$var$clamp","t","$f60fb54e410f74a1$export$2e2bcd8739ae039","$f60fb54e410f74a1$var$Animate","advance","isRunning","lerp","exp","round","currentTime","easing","from","onUpdate","fromTo","o","onStart","$f60fb54e410f74a1$var$Dimensions","wrapper","content","autoResize","debounce","debouncedResize","resize","arguments","clearTimeout","setTimeout","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","disconnect","removeEventListener","onWrapperResize","onContentResize","width","innerWidth","height","clientWidth","clientHeight","scrollWidth","$f60fb54e410f74a1$var$Emitter","events","emit","filter","off","$f60fb54e410f74a1$var$t","$f60fb54e410f74a1$var$VirtualScroll","wheelMultiplier","touchMultiplier","touchStart","emitter","onWindowResize","onWheel","passive","onTouchStart","onTouchMove","onTouchEnd","clientX","clientY","targetTouches","lastDelta","deltaX","deltaMode","windowWidth","windowHeight","wheelEventsTarget","eventsTarget","smoothWheel","syncTouchLerp","touchInertiaMultiplier","l","h","a","pow","c","infinite","u","orientation","gestureOrientation","m","g","prevent","S","__experimental__naiveDimensions","w","__isScrolling","__isStopped","__isLocked","onVirtualScroll","ctrlKey","type","includes","isTouching","isStopped","isLocked","reset","composedPath","slice","rootElement","find","hasAttribute","call","classList","contains","isScrolling","animate","abs","targetScroll","programmatic","onNativeScroll","__resetVelocityTimeout","__preventNextNativeScrollEvent","animatedScroll","actualScroll","lastVelocity","sign","hasScrolled","lenisVersion","dimensions","updateClassName","userData","virtualScroll","cleanUpClassName","setScroll","isHorizontal","raf","lock","onComplete","force","isSmooth","className","trim","replace","clamp","input","Animate","deltaTime","this","completed","damp","lambda","dt","linearProgress","easedProgress","Dimensions","debounceValue","callback","delay","timer","args","context","Emitter","callbacks","cb","LINE_HEIGHT","VirtualScroll","Lenis","isTouch","isWheel","isClick","isUnknownGesture","node","_a","_b","_c","_d","_e","delta","hasTouchInertia","lastScroll","wrapperRect","modulo"],"version":3,"file":"ScrollComponent.9a63a154.js.map"}