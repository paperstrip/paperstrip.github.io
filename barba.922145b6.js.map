{"mappings":"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AKF,EAAE,GAAI,WAAW,CAAC,gBAClB,EAAE,GAAI,QAAQ,CAAC,cAEZ,EAAE,GAAI,IAAI,CAAC,6BAA6B,MAAM,CAAG,GAElD,EAAE,GAAI,IAAI,CAAC,6BAA6B,SAAS,CAAC,KAGxD,GACA,OAAO,QAAQ,CAAC,MAAM,CAAC,yBAAyB,SAAS,CAAI,CAAC,CAAE,EAC9D,EAAE,GAAI,WAAW,CAAC,iBAClB,EAAE,GAAI,QAAQ,CAAC,cACf,EAAE,GAAI,WAAW,CAAC,eACpB,EACF,CACF,C,G,e,Q,S,C,C,C,G,A;;;;;;;A,E,S,C,C,C,E,E,O,C,E,c,S,E,E,O,C,S,C,E,S,E,C,E,M,C,E,A,Y,O,Q,A,U,O,O,Q,C,S,C,E,O,O,C,E,S,C,E,O,G,A,Y,O,Q,E,W,G,Q,I,O,S,C,S,O,C,G,E,C,S,I,M,A,C,E,O,M,E,S,C,E,I,I,E,E,E,U,M,C,I,C,I,E,S,C,E,C,I,I,K,E,O,S,C,c,C,I,C,E,I,C,C,C,E,C,C,C,E,A,C,C,O,C,C,E,K,C,I,C,U,C,S,E,C,C,C,E,O,E,I,E,E,I,G,C,S,E,C,E,O,E,I,E,I,G,C,S,E,C,E,G,M,O,C,G,C,I,I,E,E,E,A,M,E,M,E,E,E,M,C,I,C,C,E,C,C,C,E,C,O,C,C,C,S,E,C,E,G,M,O,C,G,O,C,C,S,E,C,E,G,O,Q,I,O,I,A,uB,O,S,C,Q,C,I,C,G,O,M,I,C,E,C,S,E,C,C,C,E,G,O,Q,I,O,I,A,uB,O,S,C,Q,C,I,C,I,I,E,E,C,E,C,E,E,C,E,E,K,E,G,C,I,I,E,E,C,C,O,Q,C,G,C,C,E,A,C,E,E,I,E,E,I,A,I,E,I,C,E,K,E,C,G,E,M,G,G,E,C,G,C,M,E,C,E,C,E,E,C,Q,C,G,C,G,A,M,E,M,E,E,M,E,Q,C,G,E,M,C,C,C,O,E,C,S,I,M,A,U,kD,C,S,I,M,A,U,uD,CEzCF,IAAI3gB,EAAW,EACXC,EAAe,CAAA,EAEfC,EAAQ,CAGVjE,KAAM,SAAUJ,CAAV,CAAmB/Y,CAAnB,CAA8B8b,CAA9B,EAIJ,IAHIza,EACAgc,EACAC,EACA9a,EAAQ,AAAIiE,OAAO,IAAMzG,EAAW,KAExC,GAAI,KAAA,IAA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","sources":["<anon>","src/js/_barba/barba.js","node_modules/@barba/router/dist/barba-router.umd.js","node_modules/@barba/router/src/router.ts","node_modules/@barba/core/dist/barba.umd.js","node_modules/node_modules/babel-plugin-transform-async-to-promises/helpers.js","node_modules/@barba/core/src/modules/Logger.ts","node_modules/@barba/core/src/defs/hooks.ts","node_modules/node_modules/path-to-regexp/index.js","node_modules/@barba/core/src/schemas/attribute.ts","node_modules/@barba/core/src/utils/dom.ts","node_modules/@barba/core/src/utils/history.ts","node_modules/@barba/core/src/utils/helpers.ts","node_modules/@barba/core/src/utils/url.ts","node_modules/@barba/core/src/utils/request.ts","node_modules/node_modules/is-promise/index.js","node_modules/@barba/core/src/utils/run-async.ts","node_modules/@barba/core/src/hooks.ts","node_modules/@barba/core/src/modules/Ignore.ts","node_modules/@barba/core/src/modules/Cache.ts","node_modules/@barba/core/src/modules/Prevent.ts","node_modules/@barba/core/src/modules/Error.ts","node_modules/@barba/core/src/modules/Store.ts","node_modules/@barba/core/src/modules/Transitions.ts","node_modules/@barba/core/src/modules/Views.ts","node_modules/@barba/core/src/polyfills/index.ts","node_modules/@barba/core/src/schemas/page.ts","node_modules/@barba/core/src/core.ts","src/js/_barba/transitions/default.js","src/js/_barba/views/ScreenLoader.js","src/js/_barba/router.js","src/js/fetch.js","src/js/_barba/components/AppEventComponent.js","src/js/_barba/components/FormComponent.js","src/js/_barba/views/formMessage.js","node_modules/parsleyjs/dist/parsley.js","node_modules/parsleyjs/src/parsley/utils.js","node_modules/parsleyjs/src/parsley/defaults.js","node_modules/parsleyjs/src/parsley/base.js","node_modules/parsleyjs/src/parsley/validator.js","node_modules/parsleyjs/src/parsley/validator_registry.js","node_modules/parsleyjs/src/parsley/ui.js","node_modules/parsleyjs/src/parsley/form.js","node_modules/parsleyjs/src/parsley/constraint.js","node_modules/parsleyjs/src/parsley/field.js","node_modules/parsleyjs/src/parsley/multiple.js","node_modules/parsleyjs/src/parsley/factory.js","node_modules/parsleyjs/src/parsley/main.js","node_modules/parsleyjs/src/parsley/pubsub.js","node_modules/parsleyjs/src/parsley/remote.js","node_modules/parsleyjs/src/i18n/en.js","node_modules/parsleyjs/src/vendor/inputevent.js","node_modules/parsleyjs/src/parsley.js","src/js/_barba/components/ImageLoaderComponent.js","src/js/_barba/views/imageReplace.js","src/js/_barba/views/landingLoader.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequiree21d\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"bNjwQ\", function(module, exports) {\n\nvar $6PCW7 = parcelRequire(\"6PCW7\");\n\nvar $bByEL = parcelRequire(\"bByEL\");\nparcelRequire(\"6qxuy\");\n\nvar $ecPF5 = parcelRequire(\"ecPF5\");\n\nvar $eAjAl = parcelRequire(\"eAjAl\");\n\nvar $lBUWF = parcelRequire(\"lBUWF\");\n\nvar $gKRTl = parcelRequire(\"gKRTl\");\nparcelRequire(\"4z6f3\");\n\nvar $7Wrxr = parcelRequire(\"7Wrxr\");\n\nvar $eUKxC = parcelRequire(\"eUKxC\");\n\nvar $fZPIc = parcelRequire(\"fZPIc\");\n//import FancyComponent from \"../components/FancyComponent\";\n/**************************************************/ window.barbaInstance = (0, (/*@__PURE__*/$parcel$interopDefault($bByEL)));\nwindow.barbaRouter = (0, (/*@__PURE__*/$parcel$interopDefault($6PCW7)));\nwindow.appRouter = new (0, $ecPF5.default)();\nwindow.appEvent = new (0, $eAjAl.default)();\nwindow.formComponent = new (0, $lBUWF.default)();\nwindow.formMessage = new (0, $gKRTl.default)();\nwindow.imageLoader = new (0, $7Wrxr.default)();\nwindow.imageReplace = new function() {\n    this.replace = function(target) {\n        (0, $fZPIc.default)(target);\n    };\n};\nwindow.landingLoader = new (0, $eUKxC.default)(1);\nclass Barba {\n    constructor(){\n        window.transitions = [];\n        this.instance = window.barbaInstance;\n        this.instance.use(window.appRouter, {\n            routes: routes\n        });\n    }\n    addCustomIntro(introduction) {\n        window.landingLoader = introduction;\n    }\n    setDefaultTransition(transitionObject) {\n        if (transitionObject) window.defaultTransition = transitionObject;\n        else window.defaultTransition = window.barbaDefaultTransition;\n        window.transitions.push(window.defaultTransition);\n    }\n    addTransition(transitionObject) {\n        window.transitions.push(transitionObject);\n    }\n    init() {\n        //window.imageLoader.lazy();\n        (0, $fZPIc.default)($('[data-barba=\"container\"]:last-of-type'));\n        window.initGlobal();\n        window.formComponent.initGlobal();\n        window.formMessage.init();\n        //window.fancy = new FancyComponent();\n        // ADD CONFIG ON HISTORY CHANGE\n        (function(history1) {\n            var pushState = history1.pushState;\n            history1.pushState = function(state) {\n                if (typeof history1.onpushstate == \"function\") history1.onpushstate({\n                    state: state\n                });\n                return pushState.apply(history1, arguments);\n            };\n        })(window.history);\n        window.onpopstate = history.onpushstate = function(e) {\n            window.appEvent.trigger(\"app:barba:historyChange\");\n        };\n        this.instance.hooks.beforeLeave((data)=>{\n            window.appEvent.trigger(\"app:barba:isChanging\");\n            if (data.trigger == \"back\" || data.trigger == \"forward\") return;\n            localStorage.setItem(\"windowTop\", window.pageYOffset);\n            localStorage.setItem(\"windowTopGlobalScrol\", window.globalScroll.y);\n        });\n        this.instance.hooks.beforeEnter((data)=>{\n            //window.imageLoader.lazy();\n            window.appEvent.trigger(\"app:barba:beforeEnter\");\n            (0, $fZPIc.default)($('[data-barba=\"container\"]:last-of-type'));\n            let inlineScripts = data.next.container.querySelectorAll(\"script\");\n            inlineScripts.forEach((script)=>eval(script.innerHTML));\n            window.initView();\n            window.formMessage.init();\n            window.formComponent.initView();\n            document.body.id = typeof data.next.namespace !== \"undefined\" ? data.next.namespace : \"\";\n            console.log(\"DEBUGG ICI\", data.next);\n            history.scrollRestoration = \"manual\";\n        });\n        this.instance.hooks.enter((data)=>{\n            window.appEvent.trigger(\"app:barba:isLoaded\");\n        });\n        this.instance.hooks.after((data)=>{\n            if (data.trigger == \"back\" || data.trigger == \"forward\") {\n                window.scrollTo(0, localStorage.getItem(\"windowTop\"));\n                if (window.globalScroll) window.globalScroll.scrollTo(parseInt(localStorage.getItem(\"windowTopGlobalScrol\")), 0);\n            } else {\n                window.scrollTo(0, 0);\n                if (window.globalScroll) window.globalScroll.initView();\n            }\n        });\n        this.instance.init({\n            views: window.views,\n            debug: true,\n            cacheIgnore: false,\n            prefetchIgnore: false,\n            prevent: (el)=>{\n                if (el.href == document.location.href) {\n                    el.event.preventDefault();\n                    return false;\n                }\n            },\n            transitions: window.transitions,\n            timeout: 10000\n        });\n    }\n}\n\n});\nparcelRegister(\"6PCW7\", function(module, exports) {\n!function(t, i) {\n    module.exports = i();\n}(module.exports, function() {\n    var t = \"2.1.10\";\n    return new (function() {\n        function i() {\n            this.name = \"@barba/router\", this.version = t, this.routeNames = [], this.routesByName = {};\n        }\n        var n = i.prototype;\n        return n.install = function(t, i) {\n            var n = this, e = (void 0 === i ? {} : i).routes, o = void 0 === e ? [] : e;\n            this.logger = new t.Logger(this.name), this.logger.info(this.version), this.barba = t, o.forEach(function(t) {\n                var i = t.name, e = t.path, o = [], r = n.barba.helpers.pathToRegexp(e, o);\n                n.routeNames.indexOf(i) > -1 ? console.warn(\"[@barba/router] Duplicated route name (\" + i + \")\") : (n.routeNames.push(i), n.routesByName[i] = {\n                    keys: o,\n                    path: e,\n                    regex: r\n                });\n            }), t.schemaPage.route = void 0;\n        }, n.init = function() {\n            this.barba.transitions.store.add(\"rule\", {\n                position: 1,\n                value: {\n                    name: \"route\",\n                    type: \"object\"\n                }\n            }), this.barba.hooks.page(this.resolveRoutes, this), this.barba.hooks.reset(this.resolveRoutes, this);\n        }, n.resolveUrl = function(t) {\n            for(var i = this, n = this.barba.url.parse(t).path, e = {\n                name: name,\n                params: {}\n            }, o = function(t, o) {\n                var r = i.routeNames[t], s = i.routesByName[r], u = s.keys, f = s.regex.exec(n);\n                if (null !== f) return e.name = r, u.forEach(function(t, i) {\n                    e.params[t.name] = f[i + 1];\n                }), {\n                    v: e\n                };\n            }, r = 0, s = this.routeNames.length; r < s; r++){\n                var u = o(r);\n                if (\"object\" == typeof u) return u.v;\n            }\n            return null;\n        }, n.resolveRoutes = function(t) {\n            var i = t.current, n = t.next;\n            i.route = i.url.href ? this.resolveUrl(i.url.href) : void 0, n.route = n.url.href ? this.resolveUrl(n.url.href) : void 0;\n        }, i;\n    }());\n});\n\n});\n\nparcelRegister(\"bByEL\", function(module, exports) {\n!function(t, n) {\n    module.exports = n();\n}(module.exports, function() {\n    function t(t, n) {\n        for(var r = 0; r < n.length; r++){\n            var e = n[r];\n            e.enumerable = e.enumerable || !1, e.configurable = !0, \"value\" in e && (e.writable = !0), Object.defineProperty(t, e.key, e);\n        }\n    }\n    function n(n, r, e) {\n        return r && t(n.prototype, r), e && t(n, e), n;\n    }\n    function r() {\n        return (r = Object.assign || function(t) {\n            for(var n = 1; n < arguments.length; n++){\n                var r = arguments[n];\n                for(var e in r)Object.prototype.hasOwnProperty.call(r, e) && (t[e] = r[e]);\n            }\n            return t;\n        }).apply(this, arguments);\n    }\n    function e(t, n) {\n        t.prototype = Object.create(n.prototype), t.prototype.constructor = t, t.__proto__ = n;\n    }\n    function i(t) {\n        return (i = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {\n            return t.__proto__ || Object.getPrototypeOf(t);\n        })(t);\n    }\n    function o(t, n) {\n        return (o = Object.setPrototypeOf || function(t, n) {\n            return t.__proto__ = n, t;\n        })(t, n);\n    }\n    function u(t, n, r) {\n        return (u = function() {\n            if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n            if (Reflect.construct.sham) return !1;\n            if (\"function\" == typeof Proxy) return !0;\n            try {\n                return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0;\n            } catch (t) {\n                return !1;\n            }\n        }() ? Reflect.construct : function(t, n, r) {\n            var e = [\n                null\n            ];\n            e.push.apply(e, n);\n            var i = new (Function.bind.apply(t, e));\n            return r && o(i, r.prototype), i;\n        }).apply(null, arguments);\n    }\n    function f(t) {\n        var n = \"function\" == typeof Map ? new Map : void 0;\n        return (f = function(t) {\n            if (null === t || -1 === Function.toString.call(t).indexOf(\"[native code]\")) return t;\n            if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n            if (void 0 !== n) {\n                if (n.has(t)) return n.get(t);\n                n.set(t, r);\n            }\n            function r() {\n                return u(t, arguments, i(this).constructor);\n            }\n            return r.prototype = Object.create(t.prototype, {\n                constructor: {\n                    value: r,\n                    enumerable: !1,\n                    writable: !0,\n                    configurable: !0\n                }\n            }), o(r, t);\n        })(t);\n    }\n    function s(t, n) {\n        try {\n            var r = t();\n        } catch (t) {\n            return n(t);\n        }\n        return r && r.then ? r.then(void 0, n) : r;\n    }\n    \"undefined\" != typeof Symbol && (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))), \"undefined\" != typeof Symbol && (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\")));\n    var c, a = \"2.9.7\", h = function() {};\n    !function(t) {\n        t[t.off = 0] = \"off\", t[t.error = 1] = \"error\", t[t.warning = 2] = \"warning\", t[t.info = 3] = \"info\", t[t.debug = 4] = \"debug\";\n    }(c || (c = {}));\n    var v = c.off, l = function() {\n        function t(t) {\n            this.t = t;\n        }\n        t.getLevel = function() {\n            return v;\n        }, t.setLevel = function(t) {\n            return v = c[t];\n        };\n        var n = t.prototype;\n        return n.error = function() {\n            for(var t = arguments.length, n = new Array(t), r = 0; r < t; r++)n[r] = arguments[r];\n            this.i(console.error, c.error, n);\n        }, n.warn = function() {\n            for(var t = arguments.length, n = new Array(t), r = 0; r < t; r++)n[r] = arguments[r];\n            this.i(console.warn, c.warning, n);\n        }, n.info = function() {\n            for(var t = arguments.length, n = new Array(t), r = 0; r < t; r++)n[r] = arguments[r];\n            this.i(console.info, c.info, n);\n        }, n.debug = function() {\n            for(var t = arguments.length, n = new Array(t), r = 0; r < t; r++)n[r] = arguments[r];\n            this.i(console.log, c.debug, n);\n        }, n.i = function(n, r, e) {\n            r <= t.getLevel() && n.apply(console, [\n                \"[\" + this.t + \"] \"\n            ].concat(e));\n        }, t;\n    }(), d = O, m = E, p = g, w = x, b = T, y = \"/\", P = new RegExp([\n        \"(\\\\\\\\.)\",\n        \"(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?\"\n    ].join(\"|\"), \"g\");\n    function g(t, n) {\n        for(var r, e = [], i = 0, o = 0, u = \"\", f = n && n.delimiter || y, s = n && n.whitelist || void 0, c = !1; null !== (r = P.exec(t));){\n            var a = r[0], h = r[1], v = r.index;\n            if (u += t.slice(o, v), o = v + a.length, h) u += h[1], c = !0;\n            else {\n                var l = \"\", d = r[2], m = r[3], p = r[4], w = r[5];\n                if (!c && u.length) {\n                    var b = u.length - 1, g = u[b];\n                    (!s || s.indexOf(g) > -1) && (l = g, u = u.slice(0, b));\n                }\n                u && (e.push(u), u = \"\", c = !1);\n                var E = m || p, x = l || f;\n                e.push({\n                    name: d || i++,\n                    prefix: l,\n                    delimiter: x,\n                    optional: \"?\" === w || \"*\" === w,\n                    repeat: \"+\" === w || \"*\" === w,\n                    pattern: E ? A(E) : \"[^\" + k(x === f ? x : x + f) + \"]+?\"\n                });\n            }\n        }\n        return (u || o < t.length) && e.push(u + t.substr(o)), e;\n    }\n    function E(t, n) {\n        return function(r, e) {\n            var i = t.exec(r);\n            if (!i) return !1;\n            for(var o = i[0], u = i.index, f = {}, s = e && e.decode || decodeURIComponent, c = 1; c < i.length; c++)if (void 0 !== i[c]) {\n                var a = n[c - 1];\n                f[a.name] = a.repeat ? i[c].split(a.delimiter).map(function(t) {\n                    return s(t, a);\n                }) : s(i[c], a);\n            }\n            return {\n                path: o,\n                index: u,\n                params: f\n            };\n        };\n    }\n    function x(t, n) {\n        for(var r = new Array(t.length), e = 0; e < t.length; e++)\"object\" == typeof t[e] && (r[e] = new RegExp(\"^(?:\" + t[e].pattern + \")$\", R(n)));\n        return function(n, e) {\n            for(var i = \"\", o = e && e.encode || encodeURIComponent, u = !e || !1 !== e.validate, f = 0; f < t.length; f++){\n                var s = t[f];\n                if (\"string\" != typeof s) {\n                    var c, a = n ? n[s.name] : void 0;\n                    if (Array.isArray(a)) {\n                        if (!s.repeat) throw new TypeError('Expected \"' + s.name + '\" to not repeat, but got array');\n                        if (0 === a.length) {\n                            if (s.optional) continue;\n                            throw new TypeError('Expected \"' + s.name + '\" to not be empty');\n                        }\n                        for(var h = 0; h < a.length; h++){\n                            if (c = o(a[h], s), u && !r[f].test(c)) throw new TypeError('Expected all \"' + s.name + '\" to match \"' + s.pattern + '\"');\n                            i += (0 === h ? s.prefix : s.delimiter) + c;\n                        }\n                    } else if (\"string\" != typeof a && \"number\" != typeof a && \"boolean\" != typeof a) {\n                        if (!s.optional) throw new TypeError('Expected \"' + s.name + '\" to be ' + (s.repeat ? \"an array\" : \"a string\"));\n                    } else {\n                        if (c = o(String(a), s), u && !r[f].test(c)) throw new TypeError('Expected \"' + s.name + '\" to match \"' + s.pattern + '\", but got \"' + c + '\"');\n                        i += s.prefix + c;\n                    }\n                } else i += s;\n            }\n            return i;\n        };\n    }\n    function k(t) {\n        return t.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n    }\n    function A(t) {\n        return t.replace(/([=!:$/()])/g, \"\\\\$1\");\n    }\n    function R(t) {\n        return t && t.sensitive ? \"\" : \"i\";\n    }\n    function T(t, n, r) {\n        for(var e = (r = r || {}).strict, i = !1 !== r.start, o = !1 !== r.end, u = r.delimiter || y, f = [].concat(r.endsWith || []).map(k).concat(\"$\").join(\"|\"), s = i ? \"^\" : \"\", c = 0; c < t.length; c++){\n            var a = t[c];\n            if (\"string\" == typeof a) s += k(a);\n            else {\n                var h = a.repeat ? \"(?:\" + a.pattern + \")(?:\" + k(a.delimiter) + \"(?:\" + a.pattern + \"))*\" : a.pattern;\n                n && n.push(a), s += a.optional ? a.prefix ? \"(?:\" + k(a.prefix) + \"(\" + h + \"))?\" : \"(\" + h + \")?\" : k(a.prefix) + \"(\" + h + \")\";\n            }\n        }\n        if (o) e || (s += \"(?:\" + k(u) + \")?\"), s += \"$\" === f ? \"$\" : \"(?=\" + f + \")\";\n        else {\n            var v = t[t.length - 1], l = \"string\" == typeof v ? v[v.length - 1] === u : void 0 === v;\n            e || (s += \"(?:\" + k(u) + \"(?=\" + f + \"))?\"), l || (s += \"(?=\" + k(u) + \"|\" + f + \")\");\n        }\n        return new RegExp(s, R(r));\n    }\n    function O(t, n, r) {\n        return t instanceof RegExp ? function(t, n) {\n            if (!n) return t;\n            var r = t.source.match(/\\((?!\\?)/g);\n            if (r) for(var e = 0; e < r.length; e++)n.push({\n                name: e,\n                prefix: null,\n                delimiter: null,\n                optional: !1,\n                repeat: !1,\n                pattern: null\n            });\n            return t;\n        }(t, n) : Array.isArray(t) ? function(t, n, r) {\n            for(var e = [], i = 0; i < t.length; i++)e.push(O(t[i], n, r).source);\n            return new RegExp(\"(?:\" + e.join(\"|\") + \")\", R(r));\n        }(t, n, r) : function(t, n, r) {\n            return T(g(t, r), n, r);\n        }(t, n, r);\n    }\n    d.match = function(t, n) {\n        var r = [];\n        return E(O(t, r, n), r);\n    }, d.regexpToFunction = m, d.parse = p, d.compile = function(t, n) {\n        return x(g(t, n), n);\n    }, d.tokensToFunction = w, d.tokensToRegExp = b;\n    var S = {\n        container: \"container\",\n        history: \"history\",\n        namespace: \"namespace\",\n        prefix: \"data-barba\",\n        prevent: \"prevent\",\n        wrapper: \"wrapper\"\n    }, j = new (function() {\n        function t() {\n            this.o = S, this.u = new DOMParser;\n        }\n        var n = t.prototype;\n        return n.toString = function(t) {\n            return t.outerHTML;\n        }, n.toDocument = function(t) {\n            return this.u.parseFromString(t, \"text/html\");\n        }, n.toElement = function(t) {\n            var n = document.createElement(\"div\");\n            return n.innerHTML = t, n;\n        }, n.getHtml = function(t) {\n            return void 0 === t && (t = document), this.toString(t.documentElement);\n        }, n.getWrapper = function(t) {\n            return void 0 === t && (t = document), t.querySelector(\"[\" + this.o.prefix + '=\"' + this.o.wrapper + '\"]');\n        }, n.getContainer = function(t) {\n            return void 0 === t && (t = document), t.querySelector(\"[\" + this.o.prefix + '=\"' + this.o.container + '\"]');\n        }, n.removeContainer = function(t) {\n            document.body.contains(t) && t.parentNode.removeChild(t);\n        }, n.addContainer = function(t, n) {\n            var r = this.getContainer();\n            r ? this.s(t, r) : n.appendChild(t);\n        }, n.getNamespace = function(t) {\n            void 0 === t && (t = document);\n            var n = t.querySelector(\"[\" + this.o.prefix + \"-\" + this.o.namespace + \"]\");\n            return n ? n.getAttribute(this.o.prefix + \"-\" + this.o.namespace) : null;\n        }, n.getHref = function(t) {\n            if (t.tagName && \"a\" === t.tagName.toLowerCase()) {\n                if (\"string\" == typeof t.href) return t.href;\n                var n = t.getAttribute(\"href\") || t.getAttribute(\"xlink:href\");\n                if (n) return this.resolveUrl(n.baseVal || n);\n            }\n            return null;\n        }, n.resolveUrl = function() {\n            for(var t = arguments.length, n = new Array(t), r = 0; r < t; r++)n[r] = arguments[r];\n            var e = n.length;\n            if (0 === e) throw new Error(\"resolveUrl requires at least one argument; got none.\");\n            var i = document.createElement(\"base\");\n            if (i.href = arguments[0], 1 === e) return i.href;\n            var o = document.getElementsByTagName(\"head\")[0];\n            o.insertBefore(i, o.firstChild);\n            for(var u, f = document.createElement(\"a\"), s = 1; s < e; s++)f.href = arguments[s], i.href = u = f.href;\n            return o.removeChild(i), u;\n        }, n.s = function(t, n) {\n            n.parentNode.insertBefore(t, n.nextSibling);\n        }, t;\n    }()), M = new (function() {\n        function t() {\n            this.h = [], this.v = -1;\n        }\n        var e = t.prototype;\n        return e.init = function(t, n) {\n            this.l = \"barba\";\n            var r = {\n                ns: n,\n                scroll: {\n                    x: window.scrollX,\n                    y: window.scrollY\n                },\n                url: t\n            };\n            this.h.push(r), this.v = 0;\n            var e = {\n                from: this.l,\n                index: 0,\n                states: [].concat(this.h)\n            };\n            window.history && window.history.replaceState(e, \"\", t);\n        }, e.change = function(t, n, r) {\n            if (r && r.state) {\n                var e = r.state, i = e.index;\n                n = this.m(this.v - i), this.replace(e.states), this.v = i;\n            } else this.add(t, n);\n            return n;\n        }, e.add = function(t, n) {\n            var r = this.size, e = this.p(n), i = {\n                ns: \"tmp\",\n                scroll: {\n                    x: window.scrollX,\n                    y: window.scrollY\n                },\n                url: t\n            };\n            this.h.push(i), this.v = r;\n            var o = {\n                from: this.l,\n                index: r,\n                states: [].concat(this.h)\n            };\n            switch(e){\n                case \"push\":\n                    window.history && window.history.pushState(o, \"\", t);\n                    break;\n                case \"replace\":\n                    window.history && window.history.replaceState(o, \"\", t);\n            }\n        }, e.update = function(t, n) {\n            var e = n || this.v, i = r({}, this.get(e), {}, t);\n            this.set(e, i);\n        }, e.remove = function(t) {\n            t ? this.h.splice(t, 1) : this.h.pop(), this.v--;\n        }, e.clear = function() {\n            this.h = [], this.v = -1;\n        }, e.replace = function(t) {\n            this.h = t;\n        }, e.get = function(t) {\n            return this.h[t];\n        }, e.set = function(t, n) {\n            return this.h[t] = n;\n        }, e.p = function(t) {\n            var n = \"push\", r = t, e = S.prefix + \"-\" + S.history;\n            return r.hasAttribute && r.hasAttribute(e) && (n = r.getAttribute(e)), n;\n        }, e.m = function(t) {\n            return Math.abs(t) > 1 ? t > 0 ? \"forward\" : \"back\" : 0 === t ? \"popstate\" : t > 0 ? \"back\" : \"forward\";\n        }, n(t, [\n            {\n                key: \"current\",\n                get: function() {\n                    return this.h[this.v];\n                }\n            },\n            {\n                key: \"state\",\n                get: function() {\n                    return this.h[this.h.length - 1];\n                }\n            },\n            {\n                key: \"previous\",\n                get: function() {\n                    return this.v < 1 ? null : this.h[this.v - 1];\n                }\n            },\n            {\n                key: \"size\",\n                get: function() {\n                    return this.h.length;\n                }\n            }\n        ]), t;\n    }()), L = function(t, n) {\n        try {\n            var r = function() {\n                if (!n.next.html) return Promise.resolve(t).then(function(t) {\n                    var r = n.next;\n                    if (t) {\n                        var e = j.toElement(t);\n                        r.namespace = j.getNamespace(e), r.container = j.getContainer(e), r.html = t, M.update({\n                            ns: r.namespace\n                        });\n                        var i = j.toDocument(t);\n                        document.title = i.title;\n                    }\n                });\n            }();\n            return Promise.resolve(r && r.then ? r.then(function() {}) : void 0);\n        } catch (t) {\n            return Promise.reject(t);\n        }\n    }, $ = d, _ = {\n        __proto__: null,\n        update: L,\n        nextTick: function() {\n            return new Promise(function(t) {\n                window.requestAnimationFrame(t);\n            });\n        },\n        pathToRegexp: $\n    }, q = function() {\n        return window.location.origin;\n    }, B = function(t) {\n        return void 0 === t && (t = window.location.href), U(t).port;\n    }, U = function(t) {\n        var n, r = t.match(/:\\d+/);\n        if (null === r) /^http/.test(t) && (n = 80), /^https/.test(t) && (n = 443);\n        else {\n            var e = r[0].substring(1);\n            n = parseInt(e, 10);\n        }\n        var i, o = t.replace(q(), \"\"), u = {}, f = o.indexOf(\"#\");\n        f >= 0 && (i = o.slice(f + 1), o = o.slice(0, f));\n        var s = o.indexOf(\"?\");\n        return s >= 0 && (u = D(o.slice(s + 1)), o = o.slice(0, s)), {\n            hash: i,\n            path: o,\n            port: n,\n            query: u\n        };\n    }, D = function(t) {\n        return t.split(\"&\").reduce(function(t, n) {\n            var r = n.split(\"=\");\n            return t[r[0]] = r[1], t;\n        }, {});\n    }, F = function(t) {\n        return void 0 === t && (t = window.location.href), t.replace(/(\\/#.*|\\/|#.*)$/, \"\");\n    }, H = {\n        __proto__: null,\n        getHref: function() {\n            return window.location.href;\n        },\n        getOrigin: q,\n        getPort: B,\n        getPath: function(t) {\n            return void 0 === t && (t = window.location.href), U(t).path;\n        },\n        parse: U,\n        parseQuery: D,\n        clean: F\n    };\n    function I(t, n, r) {\n        return void 0 === n && (n = 2e3), new Promise(function(e, i) {\n            var o = new XMLHttpRequest;\n            o.onreadystatechange = function() {\n                if (o.readyState === XMLHttpRequest.DONE) {\n                    if (200 === o.status) e(o.responseText);\n                    else if (o.status) {\n                        var n = {\n                            status: o.status,\n                            statusText: o.statusText\n                        };\n                        r(t, n), i(n);\n                    }\n                }\n            }, o.ontimeout = function() {\n                var e = new Error(\"Timeout error [\" + n + \"]\");\n                r(t, e), i(e);\n            }, o.onerror = function() {\n                var n = new Error(\"Fetch error\");\n                r(t, n), i(n);\n            }, o.open(\"GET\", t), o.timeout = n, o.setRequestHeader(\"Accept\", \"text/html,application/xhtml+xml,application/xml\"), o.setRequestHeader(\"x-barba\", \"yes\"), o.send();\n        });\n    }\n    var C = function(t) {\n        return !!t && (\"object\" == typeof t || \"function\" == typeof t) && \"function\" == typeof t.then;\n    };\n    function N(t, n) {\n        return void 0 === n && (n = {}), function() {\n            for(var r = arguments.length, e = new Array(r), i = 0; i < r; i++)e[i] = arguments[i];\n            var o = !1, u = new Promise(function(r, i) {\n                n.async = function() {\n                    return o = !0, function(t, n) {\n                        t ? i(t) : r(n);\n                    };\n                };\n                var u = t.apply(n, e);\n                o || (C(u) ? u.then(r, i) : r(u));\n            });\n            return u;\n        };\n    }\n    var X = new (function(t) {\n        function n() {\n            var n;\n            return (n = t.call(this) || this).logger = new l(\"@barba/core\"), n.all = [\n                \"ready\",\n                \"page\",\n                \"reset\",\n                \"currentAdded\",\n                \"currentRemoved\",\n                \"nextAdded\",\n                \"nextRemoved\",\n                \"beforeOnce\",\n                \"once\",\n                \"afterOnce\",\n                \"before\",\n                \"beforeLeave\",\n                \"leave\",\n                \"afterLeave\",\n                \"beforeEnter\",\n                \"enter\",\n                \"afterEnter\",\n                \"after\"\n            ], n.registered = new Map, n.init(), n;\n        }\n        e(n, t);\n        var r = n.prototype;\n        return r.init = function() {\n            var t = this;\n            this.registered.clear(), this.all.forEach(function(n) {\n                t[n] || (t[n] = function(r, e) {\n                    t.registered.has(n) || t.registered.set(n, new Set), t.registered.get(n).add({\n                        ctx: e || {},\n                        fn: r\n                    });\n                });\n            });\n        }, r.do = function(t) {\n            for(var n = this, r = arguments.length, e = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)e[i - 1] = arguments[i];\n            if (this.registered.has(t)) {\n                var o = Promise.resolve();\n                return this.registered.get(t).forEach(function(t) {\n                    o = o.then(function() {\n                        return N(t.fn, t.ctx).apply(void 0, e);\n                    });\n                }), o.catch(function(r) {\n                    n.logger.debug(\"Hook error [\" + t + \"]\"), n.logger.error(r);\n                });\n            }\n            return Promise.resolve();\n        }, r.clear = function() {\n            var t = this;\n            this.all.forEach(function(n) {\n                delete t[n];\n            }), this.init();\n        }, r.help = function() {\n            this.logger.info(\"Available hooks: \" + this.all.join(\",\"));\n            var t = [];\n            this.registered.forEach(function(n, r) {\n                return t.push(r);\n            }), this.logger.info(\"Registered hooks: \" + t.join(\",\"));\n        }, n;\n    }(h)), z = function() {\n        function t(t) {\n            if (this.P = [], \"boolean\" == typeof t) this.g = t;\n            else {\n                var n = Array.isArray(t) ? t : [\n                    t\n                ];\n                this.P = n.map(function(t) {\n                    return $(t);\n                });\n            }\n        }\n        return t.prototype.checkHref = function(t) {\n            if (\"boolean\" == typeof this.g) return this.g;\n            var n = U(t).path;\n            return this.P.some(function(t) {\n                return null !== t.exec(n);\n            });\n        }, t;\n    }(), G = function(t) {\n        function n(n) {\n            var r;\n            return (r = t.call(this, n) || this).k = new Map, r;\n        }\n        e(n, t);\n        var i = n.prototype;\n        return i.set = function(t, n, r) {\n            return this.k.set(t, {\n                action: r,\n                request: n\n            }), {\n                action: r,\n                request: n\n            };\n        }, i.get = function(t) {\n            return this.k.get(t);\n        }, i.getRequest = function(t) {\n            return this.k.get(t).request;\n        }, i.getAction = function(t) {\n            return this.k.get(t).action;\n        }, i.has = function(t) {\n            return !this.checkHref(t) && this.k.has(t);\n        }, i.delete = function(t) {\n            return this.k.delete(t);\n        }, i.update = function(t, n) {\n            var e = r({}, this.k.get(t), {}, n);\n            return this.k.set(t, e), e;\n        }, n;\n    }(z), Q = function() {\n        return !window.history.pushState;\n    }, W = function(t) {\n        return !t.el || !t.href;\n    }, J = function(t) {\n        var n = t.event;\n        return n.which > 1 || n.metaKey || n.ctrlKey || n.shiftKey || n.altKey;\n    }, K = function(t) {\n        var n = t.el;\n        return n.hasAttribute(\"target\") && \"_blank\" === n.target;\n    }, V = function(t) {\n        var n = t.el;\n        return void 0 !== n.protocol && window.location.protocol !== n.protocol || void 0 !== n.hostname && window.location.hostname !== n.hostname;\n    }, Y = function(t) {\n        var n = t.el;\n        return void 0 !== n.port && B() !== B(n.href);\n    }, Z = function(t) {\n        var n = t.el;\n        return n.getAttribute && \"string\" == typeof n.getAttribute(\"download\");\n    }, tt = function(t) {\n        return t.el.hasAttribute(S.prefix + \"-\" + S.prevent);\n    }, nt = function(t) {\n        return Boolean(t.el.closest(\"[\" + S.prefix + \"-\" + S.prevent + '=\"all\"]'));\n    }, rt = function(t) {\n        var n = t.href;\n        return F(n) === F() && B(n) === B();\n    }, et = function(t) {\n        function n(n) {\n            var r;\n            return (r = t.call(this, n) || this).suite = [], r.tests = new Map, r.init(), r;\n        }\n        e(n, t);\n        var r = n.prototype;\n        return r.init = function() {\n            this.add(\"pushState\", Q), this.add(\"exists\", W), this.add(\"newTab\", J), this.add(\"blank\", K), this.add(\"corsDomain\", V), this.add(\"corsPort\", Y), this.add(\"download\", Z), this.add(\"preventSelf\", tt), this.add(\"preventAll\", nt), this.add(\"sameUrl\", rt, !1);\n        }, r.add = function(t, n, r) {\n            void 0 === r && (r = !0), this.tests.set(t, n), r && this.suite.push(t);\n        }, r.run = function(t, n, r, e) {\n            return this.tests.get(t)({\n                el: n,\n                event: r,\n                href: e\n            });\n        }, r.checkLink = function(t, n, r) {\n            var e = this;\n            return this.suite.some(function(i) {\n                return e.run(i, t, n, r);\n            });\n        }, n;\n    }(z), it = function(t) {\n        function n(r, e) {\n            var i;\n            void 0 === e && (e = \"Barba error\");\n            for(var o = arguments.length, u = new Array(o > 2 ? o - 2 : 0), f = 2; f < o; f++)u[f - 2] = arguments[f];\n            return (i = t.call.apply(t, [\n                this\n            ].concat(u)) || this).error = r, i.label = e, Error.captureStackTrace && Error.captureStackTrace(function(t) {\n                if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                return t;\n            }(i), n), i.name = \"BarbaError\", i;\n        }\n        return e(n, t), n;\n    }(f(Error)), ot = function() {\n        function t(t) {\n            void 0 === t && (t = []), this.logger = new l(\"@barba/core\"), this.all = [], this.page = [], this.once = [], this.A = [\n                {\n                    name: \"namespace\",\n                    type: \"strings\"\n                },\n                {\n                    name: \"custom\",\n                    type: \"function\"\n                }\n            ], t && (this.all = this.all.concat(t)), this.update();\n        }\n        var n = t.prototype;\n        return n.add = function(t, n) {\n            switch(t){\n                case \"rule\":\n                    this.A.splice(n.position || 0, 0, n.value);\n                    break;\n                case \"transition\":\n                default:\n                    this.all.push(n);\n            }\n            this.update();\n        }, n.resolve = function(t, n) {\n            var r = this;\n            void 0 === n && (n = {});\n            var e = n.once ? this.once : this.page;\n            e = e.filter(n.self ? function(t) {\n                return t.name && \"self\" === t.name;\n            } : function(t) {\n                return !t.name || \"self\" !== t.name;\n            });\n            var i = new Map, o = e.find(function(e) {\n                var o = !0, u = {};\n                return !(!n.self || \"self\" !== e.name) || (r.A.reverse().forEach(function(n) {\n                    o && (o = r.R(e, n, t, u), e.from && e.to && (o = r.R(e, n, t, u, \"from\") && r.R(e, n, t, u, \"to\")), e.from && !e.to && (o = r.R(e, n, t, u, \"from\")), !e.from && e.to && (o = r.R(e, n, t, u, \"to\")));\n                }), i.set(e, u), o);\n            }), u = i.get(o), f = [];\n            if (f.push(n.once ? \"once\" : \"page\"), n.self && f.push(\"self\"), u) {\n                var s, c = [\n                    o\n                ];\n                Object.keys(u).length > 0 && c.push(u), (s = this.logger).info.apply(s, [\n                    \"Transition found [\" + f.join(\",\") + \"]\"\n                ].concat(c));\n            } else this.logger.info(\"No transition found [\" + f.join(\",\") + \"]\");\n            return o;\n        }, n.update = function() {\n            var t = this;\n            this.all = this.all.map(function(n) {\n                return t.T(n);\n            }).sort(function(t, n) {\n                return t.priority - n.priority;\n            }).reverse().map(function(t) {\n                return delete t.priority, t;\n            }), this.page = this.all.filter(function(t) {\n                return void 0 !== t.leave || void 0 !== t.enter;\n            }), this.once = this.all.filter(function(t) {\n                return void 0 !== t.once;\n            });\n        }, n.R = function(t, n, r, e, i) {\n            var o = !0, u = !1, f = t, s = n.name, c = s, a = s, h = s, v = i ? f[i] : f, l = \"to\" === i ? r.next : r.current;\n            if (i ? v && v[s] : v[s]) {\n                switch(n.type){\n                    case \"strings\":\n                    default:\n                        var d = Array.isArray(v[c]) ? v[c] : [\n                            v[c]\n                        ];\n                        l[c] && -1 !== d.indexOf(l[c]) && (u = !0), -1 === d.indexOf(l[c]) && (o = !1);\n                        break;\n                    case \"object\":\n                        var m = Array.isArray(v[a]) ? v[a] : [\n                            v[a]\n                        ];\n                        l[a] ? (l[a].name && -1 !== m.indexOf(l[a].name) && (u = !0), -1 === m.indexOf(l[a].name) && (o = !1)) : o = !1;\n                        break;\n                    case \"function\":\n                        v[h](r) ? u = !0 : o = !1;\n                }\n                u && (i ? (e[i] = e[i] || {}, e[i][s] = f[i][s]) : e[s] = f[s]);\n            }\n            return o;\n        }, n.O = function(t, n, r) {\n            var e = 0;\n            return (t[n] || t.from && t.from[n] || t.to && t.to[n]) && (e += Math.pow(10, r), t.from && t.from[n] && (e += 1), t.to && t.to[n] && (e += 2)), e;\n        }, n.T = function(t) {\n            var n = this;\n            t.priority = 0;\n            var r = 0;\n            return this.A.forEach(function(e, i) {\n                r += n.O(t, e.name, i + 1);\n            }), t.priority = r, t;\n        }, t;\n    }(), ut = function() {\n        function t(t) {\n            void 0 === t && (t = []), this.logger = new l(\"@barba/core\"), this.S = !1, this.store = new ot(t);\n        }\n        var r = t.prototype;\n        return r.get = function(t, n) {\n            return this.store.resolve(t, n);\n        }, r.doOnce = function(t) {\n            var n = t.data, r = t.transition;\n            try {\n                var e = function() {\n                    i.S = !1;\n                }, i = this, o = r || {};\n                i.S = !0;\n                var u = s(function() {\n                    return Promise.resolve(i.j(\"beforeOnce\", n, o)).then(function() {\n                        return Promise.resolve(i.once(n, o)).then(function() {\n                            return Promise.resolve(i.j(\"afterOnce\", n, o)).then(function() {});\n                        });\n                    });\n                }, function(t) {\n                    i.S = !1, i.logger.debug(\"Transition error [before/after/once]\"), i.logger.error(t);\n                });\n                return Promise.resolve(u && u.then ? u.then(e) : e());\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, r.doPage = function(t) {\n            var n = t.data, r = t.transition, e = t.page, i = t.wrapper;\n            try {\n                var o = function(t) {\n                    if (u) return t;\n                    f.S = !1;\n                }, u = !1, f = this, c = r || {}, a = !0 === c.sync || !1;\n                f.S = !0;\n                var h = s(function() {\n                    function t() {\n                        return Promise.resolve(f.j(\"before\", n, c)).then(function() {\n                            var t = !1;\n                            function r(r) {\n                                return t ? r : Promise.resolve(f.remove(n)).then(function() {\n                                    return Promise.resolve(f.j(\"after\", n, c)).then(function() {});\n                                });\n                            }\n                            var o = function() {\n                                if (a) return s(function() {\n                                    return Promise.resolve(f.add(n, i)).then(function() {\n                                        return Promise.resolve(f.j(\"beforeLeave\", n, c)).then(function() {\n                                            return Promise.resolve(f.j(\"beforeEnter\", n, c)).then(function() {\n                                                return Promise.resolve(Promise.all([\n                                                    f.leave(n, c),\n                                                    f.enter(n, c)\n                                                ])).then(function() {\n                                                    return Promise.resolve(f.j(\"afterLeave\", n, c)).then(function() {\n                                                        return Promise.resolve(f.j(\"afterEnter\", n, c)).then(function() {});\n                                                    });\n                                                });\n                                            });\n                                        });\n                                    });\n                                }, function(t) {\n                                    if (f.M(t)) throw new it(t, \"Transition error [sync]\");\n                                });\n                                var r = function(r) {\n                                    return t ? r : s(function() {\n                                        var t = function() {\n                                            if (!1 !== o) return Promise.resolve(f.add(n, i)).then(function() {\n                                                return Promise.resolve(f.j(\"beforeEnter\", n, c)).then(function() {\n                                                    return Promise.resolve(f.enter(n, c, o)).then(function() {\n                                                        return Promise.resolve(f.j(\"afterEnter\", n, c)).then(function() {});\n                                                    });\n                                                });\n                                            });\n                                        }();\n                                        if (t && t.then) return t.then(function() {});\n                                    }, function(t) {\n                                        if (f.M(t)) throw new it(t, \"Transition error [before/after/enter]\");\n                                    });\n                                }, o = !1, u = s(function() {\n                                    return Promise.resolve(f.j(\"beforeLeave\", n, c)).then(function() {\n                                        return Promise.resolve(Promise.all([\n                                            f.leave(n, c),\n                                            L(e, n)\n                                        ]).then(function(t) {\n                                            return t[0];\n                                        })).then(function(t) {\n                                            return o = t, Promise.resolve(f.j(\"afterLeave\", n, c)).then(function() {});\n                                        });\n                                    });\n                                }, function(t) {\n                                    if (f.M(t)) throw new it(t, \"Transition error [before/after/leave]\");\n                                });\n                                return u && u.then ? u.then(r) : r(u);\n                            }();\n                            return o && o.then ? o.then(r) : r(o);\n                        });\n                    }\n                    var r = function() {\n                        if (a) return Promise.resolve(L(e, n)).then(function() {});\n                    }();\n                    return r && r.then ? r.then(t) : t();\n                }, function(t) {\n                    if (f.S = !1, t.name && \"BarbaError\" === t.name) throw f.logger.debug(t.label), f.logger.error(t.error), t;\n                    throw f.logger.debug(\"Transition error [page]\"), f.logger.error(t), t;\n                });\n                return Promise.resolve(h && h.then ? h.then(o) : o(h));\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, r.once = function(t, n) {\n            try {\n                return Promise.resolve(X.do(\"once\", t, n)).then(function() {\n                    return n.once ? N(n.once, n)(t) : Promise.resolve();\n                });\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, r.leave = function(t, n) {\n            try {\n                return Promise.resolve(X.do(\"leave\", t, n)).then(function() {\n                    return n.leave ? N(n.leave, n)(t) : Promise.resolve();\n                });\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, r.enter = function(t, n, r) {\n            try {\n                return Promise.resolve(X.do(\"enter\", t, n)).then(function() {\n                    return n.enter ? N(n.enter, n)(t, r) : Promise.resolve();\n                });\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, r.add = function(t, n) {\n            try {\n                return j.addContainer(t.next.container, n), X.do(\"nextAdded\", t), Promise.resolve();\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, r.remove = function(t) {\n            try {\n                return j.removeContainer(t.current.container), X.do(\"currentRemoved\", t), Promise.resolve();\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, r.M = function(t) {\n            return t.message ? !/Timeout error|Fetch error/.test(t.message) : !t.status;\n        }, r.j = function(t, n, r) {\n            try {\n                return Promise.resolve(X.do(t, n, r)).then(function() {\n                    return r[t] ? N(r[t], r)(n) : Promise.resolve();\n                });\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, n(t, [\n            {\n                key: \"isRunning\",\n                get: function() {\n                    return this.S;\n                },\n                set: function(t) {\n                    this.S = t;\n                }\n            },\n            {\n                key: \"hasOnce\",\n                get: function() {\n                    return this.store.once.length > 0;\n                }\n            },\n            {\n                key: \"hasSelf\",\n                get: function() {\n                    return this.store.all.some(function(t) {\n                        return \"self\" === t.name;\n                    });\n                }\n            },\n            {\n                key: \"shouldWait\",\n                get: function() {\n                    return this.store.all.some(function(t) {\n                        return t.to && !t.to.route || t.sync;\n                    });\n                }\n            }\n        ]), t;\n    }(), ft = function() {\n        function t(t) {\n            var n = this;\n            this.names = [\n                \"beforeLeave\",\n                \"afterLeave\",\n                \"beforeEnter\",\n                \"afterEnter\"\n            ], this.byNamespace = new Map, 0 !== t.length && (t.forEach(function(t) {\n                n.byNamespace.set(t.namespace, t);\n            }), this.names.forEach(function(t) {\n                X[t](n.L(t));\n            }));\n        }\n        return t.prototype.L = function(t) {\n            var n = this;\n            return function(r) {\n                var e = t.match(/enter/i) ? r.next : r.current, i = n.byNamespace.get(e.namespace);\n                return i && i[t] ? N(i[t], i)(r) : Promise.resolve();\n            };\n        }, t;\n    }();\n    Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector), Element.prototype.closest || (Element.prototype.closest = function(t) {\n        var n = this;\n        do {\n            if (n.matches(t)) return n;\n            n = n.parentElement || n.parentNode;\n        }while (null !== n && 1 === n.nodeType);\n        return null;\n    });\n    var st = {\n        container: null,\n        html: \"\",\n        namespace: \"\",\n        url: {\n            hash: \"\",\n            href: \"\",\n            path: \"\",\n            port: null,\n            query: {}\n        }\n    };\n    return new (function() {\n        function t() {\n            this.version = a, this.schemaPage = st, this.Logger = l, this.logger = new l(\"@barba/core\"), this.plugins = [], this.hooks = X, this.dom = j, this.helpers = _, this.history = M, this.request = I, this.url = H;\n        }\n        var e = t.prototype;\n        return e.use = function(t, n) {\n            var r = this.plugins;\n            r.indexOf(t) > -1 ? this.logger.warn(\"Plugin [\" + t.name + \"] already installed.\") : \"function\" == typeof t.install ? (t.install(this, n), r.push(t)) : this.logger.warn(\"Plugin [\" + t.name + '] has no \"install\" method.');\n        }, e.init = function(t) {\n            var n = void 0 === t ? {} : t, e = n.transitions, i = void 0 === e ? [] : e, o = n.views, u = void 0 === o ? [] : o, f = n.schema, s = void 0 === f ? S : f, c = n.requestError, a = n.timeout, h = void 0 === a ? 2e3 : a, v = n.cacheIgnore, d = void 0 !== v && v, m = n.prefetchIgnore, p = void 0 !== m && m, w = n.preventRunning, b = void 0 !== w && w, y = n.prevent, P = void 0 === y ? null : y, g = n.debug, E = n.logLevel;\n            if (l.setLevel(!0 === (void 0 !== g && g) ? \"debug\" : void 0 === E ? \"off\" : E), this.logger.info(this.version), Object.keys(s).forEach(function(t) {\n                S[t] && (S[t] = s[t]);\n            }), this.$ = c, this.timeout = h, this.cacheIgnore = d, this.prefetchIgnore = p, this.preventRunning = b, this._ = this.dom.getWrapper(), !this._) throw new Error(\"[@barba/core] No Barba wrapper found\");\n            this._.setAttribute(\"aria-live\", \"polite\"), this.q();\n            var x = this.data.current;\n            if (!x.container) throw new Error(\"[@barba/core] No Barba container found\");\n            if (this.cache = new G(d), this.prevent = new et(p), this.transitions = new ut(i), this.views = new ft(u), null !== P) {\n                if (\"function\" != typeof P) throw new Error(\"[@barba/core] Prevent should be a function\");\n                this.prevent.add(\"preventCustom\", P);\n            }\n            this.history.init(x.url.href, x.namespace), this.B = this.B.bind(this), this.U = this.U.bind(this), this.D = this.D.bind(this), this.F(), this.plugins.forEach(function(t) {\n                return t.init();\n            });\n            var k = this.data;\n            k.trigger = \"barba\", k.next = k.current, k.current = r({}, this.schemaPage), this.hooks.do(\"ready\", k), this.once(k), this.q();\n        }, e.destroy = function() {\n            this.q(), this.H(), this.history.clear(), this.hooks.clear(), this.plugins = [];\n        }, e.force = function(t) {\n            window.location.assign(t);\n        }, e.go = function(t, n, r) {\n            var e;\n            if (void 0 === n && (n = \"barba\"), this.transitions.isRunning) this.force(t);\n            else if (!(e = \"popstate\" === n ? this.history.current && this.url.getPath(this.history.current.url) === this.url.getPath(t) : this.prevent.run(\"sameUrl\", null, null, t)) || this.transitions.hasSelf) return n = this.history.change(t, n, r), r && (r.stopPropagation(), r.preventDefault()), this.page(t, n, e);\n        }, e.once = function(t) {\n            try {\n                var n = this;\n                return Promise.resolve(n.hooks.do(\"beforeEnter\", t)).then(function() {\n                    function r() {\n                        return Promise.resolve(n.hooks.do(\"afterEnter\", t)).then(function() {});\n                    }\n                    var e = function() {\n                        if (n.transitions.hasOnce) {\n                            var r = n.transitions.get(t, {\n                                once: !0\n                            });\n                            return Promise.resolve(n.transitions.doOnce({\n                                transition: r,\n                                data: t\n                            })).then(function() {});\n                        }\n                    }();\n                    return e && e.then ? e.then(r) : r();\n                });\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, e.page = function(t, n, e) {\n            try {\n                var i = function() {\n                    var t = o.data;\n                    return Promise.resolve(o.hooks.do(\"page\", t)).then(function() {\n                        var n = s(function() {\n                            var n = o.transitions.get(t, {\n                                once: !1,\n                                self: e\n                            });\n                            return Promise.resolve(o.transitions.doPage({\n                                data: t,\n                                page: u,\n                                transition: n,\n                                wrapper: o._\n                            })).then(function() {\n                                o.q();\n                            });\n                        }, function() {\n                            0 === l.getLevel() && o.force(t.current.url.href);\n                        });\n                        if (n && n.then) return n.then(function() {});\n                    });\n                }, o = this;\n                o.data.next.url = r({\n                    href: t\n                }, o.url.parse(t)), o.data.trigger = n;\n                var u = o.cache.has(t) ? o.cache.update(t, {\n                    action: \"click\"\n                }).request : o.cache.set(t, o.request(t, o.timeout, o.onRequestError.bind(o, n)), \"click\").request, f = function() {\n                    if (o.transitions.shouldWait) return Promise.resolve(L(u, o.data)).then(function() {});\n                }();\n                return Promise.resolve(f && f.then ? f.then(i) : i());\n            } catch (t) {\n                return Promise.reject(t);\n            }\n        }, e.onRequestError = function(t) {\n            this.transitions.isRunning = !1;\n            for(var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), e = 1; e < n; e++)r[e - 1] = arguments[e];\n            var i = r[0], o = r[1], u = this.cache.getAction(i);\n            return this.cache.delete(i), this.$ && !1 === this.$(t, u, i, o) || \"click\" === u && this.force(i), false;\n        }, e.prefetch = function(t) {\n            var n = this;\n            this.cache.has(t) || this.cache.set(t, this.request(t, this.timeout, this.onRequestError.bind(this, \"barba\")).catch(function(t) {\n                n.logger.error(t);\n            }), \"prefetch\");\n        }, e.F = function() {\n            !0 !== this.prefetchIgnore && (document.addEventListener(\"mouseover\", this.B), document.addEventListener(\"touchstart\", this.B)), document.addEventListener(\"click\", this.U), window.addEventListener(\"popstate\", this.D);\n        }, e.H = function() {\n            !0 !== this.prefetchIgnore && (document.removeEventListener(\"mouseover\", this.B), document.removeEventListener(\"touchstart\", this.B)), document.removeEventListener(\"click\", this.U), window.removeEventListener(\"popstate\", this.D);\n        }, e.B = function(t) {\n            var n = this, r = this.I(t);\n            if (r) {\n                var e = this.dom.getHref(r);\n                this.prevent.checkHref(e) || this.cache.has(e) || this.cache.set(e, this.request(e, this.timeout, this.onRequestError.bind(this, r)).catch(function(t) {\n                    n.logger.error(t);\n                }), \"enter\");\n            }\n        }, e.U = function(t) {\n            var n = this.I(t);\n            if (n) return this.transitions.isRunning && this.preventRunning ? (t.preventDefault(), void t.stopPropagation()) : void this.go(this.dom.getHref(n), n, t);\n        }, e.D = function(t) {\n            this.go(this.url.getHref(), \"popstate\", t);\n        }, e.I = function(t) {\n            for(var n = t.target; n && !this.dom.getHref(n);)n = n.parentNode;\n            if (n && !this.prevent.checkLink(n, t, this.dom.getHref(n))) return n;\n        }, e.q = function() {\n            var t = this.url.getHref(), n = {\n                container: this.dom.getContainer(),\n                html: this.dom.getHtml(),\n                namespace: this.dom.getNamespace(),\n                url: r({\n                    href: t\n                }, this.url.parse(t))\n            };\n            this.C = {\n                current: n,\n                next: r({}, this.schemaPage),\n                trigger: void 0\n            }, this.hooks.do(\"reset\", this.data);\n        }, n(t, [\n            {\n                key: \"data\",\n                get: function() {\n                    return this.C;\n                }\n            },\n            {\n                key: \"wrapper\",\n                get: function() {\n                    return this._;\n                }\n            }\n        ]), t;\n    }());\n});\n\n});\n\nparcelRegister(\"6qxuy\", function(module, exports) {\n\nvar $hEfjX = parcelRequire(\"hEfjX\");\nparcelRequire(\"4ldTB\");\n\nvar $h037C = parcelRequire(\"h037C\");\nwindow.loadingScreen = new (0, $h037C.default)(.25, .25);\nwindow.barbaDefaultTransition = {\n    name: \"loadingScreen\",\n    sync: false,\n    before: function(data) {\n        var done = this.async();\n        window.menuNav.hide().then(function(res) {\n            window.loadingScreen.show().then(function(res) {\n                done();\n                window.appEvent.trigger(\"app:barba:beforeDone\");\n                window.appEvent.trigger(\"app:barba:beforeEnter\");\n            });\n        });\n    },\n    beforeLeave: function(data) {\n    //var  done = this.async();\n    },\n    afterLeave: function(data) {},\n    beforeEnter: function(data) {\n        var done = this.async();\n        window.imageLoader.load(data.next.container, function() {\n            done();\n        });\n    },\n    enter: function(data) {\n        appEvent.trigger(\"app:launcEnterAnimation\");\n        (0, $hEfjX.gsap).set(data.next.container, {\n            autoAlpha: 1\n        });\n        window.appEvent.trigger(\"app:transition:isEnter\");\n        window.appEvent.trigger(\"app:transition:after\");\n    },\n    after: function(data) {\n        var done = this.async();\n        window.appEvent.trigger(\"app:transition:after\");\n        window.loadingScreen.hide().then(function() {\n            done();\n        });\n    }\n};\n\n});\nparcelRegister(\"h037C\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $c604dbad1c0ff087$export$2e2bcd8739ae039; });\n\nvar $hEfjX = parcelRequire(\"hEfjX\");\nfunction $c604dbad1c0ff087$export$2e2bcd8739ae039(timingIn, timingOut) {\n    (0, $hEfjX.gsap).set($(\"*[data-barba-loadingscreen]\"), {\n        autoAlpha: 0\n    });\n    this.show = function() {\n        return new Promise(function(resolve) {\n            let tl = (0, $hEfjX.gsap).timeline({\n                repeat: 0,\n                paused: true,\n                onComplete: function() {\n                    resolve(true);\n                }\n            });\n            $(\"*[data-barba-loadingscreen]\").addClass(\"active\");\n            tl.fromTo(\"*[data-barba-loadingscreen]\", {\n                autoAlpha: 0,\n                duration: timingIn,\n                ease: \"power2.in\"\n            }, {\n                autoAlpha: 1,\n                duration: timingIn,\n                ease: \"power2.in\"\n            });\n            tl.play();\n        }, \"hide\");\n    };\n    this.hide = function() {\n        return new Promise(function(resolve) {\n            let tl = (0, $hEfjX.gsap).timeline({\n                repeat: 0,\n                paused: true,\n                onStart: function() {\n                    appEvent.trigger(\"app:threejsAnimation:start\");\n                },\n                onComplete: function() {\n                    resolve(true);\n                    $(\"*[data-barba-loadingscreen]\").removeClass(\"active\");\n                }\n            });\n            tl.fromTo(\"*[data-barba-loadingscreen]\", {\n                autoAlpha: 1,\n                duration: timingOut,\n                ease: \"power2.in\"\n            }, {\n                autoAlpha: 0,\n                duration: timingOut,\n                ease: \"power2.in\"\n            });\n            tl.play();\n            appEvent.trigger(\"app:threejsAnimation:start\");\n            return;\n        }, \"show\");\n    };\n}\n\n});\n\n\nparcelRegister(\"ecPF5\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $a57a42a3068beeb7$export$2e2bcd8739ae039; });\n\nvar $esUsT = parcelRequire(\"esUsT\");\nfunction $a57a42a3068beeb7$export$2e2bcd8739ae039(instance, router) {\n    window.views = [];\n    window.routes = [];\n    this.instance = instance;\n    this.router = router;\n    let ajaxifyRoutes = data.ajaxify.routes;\n    ajaxifyRoutes.forEach(function(elements) {\n        let route = new Object;\n        route.path = elements[0];\n        route.name = elements[1] + elements[2].charAt(0).toUpperCase() + elements[2].slice(1);\n        window.routes.push(route);\n        window.views.push({\n            namespace: route.name,\n            beforeEnter (data1) {\n                var done = this.async();\n                (0, $esUsT.default)(elements[1]).then(function(res) {\n                    if (window[elements[1]]) {\n                        window[elements[1]][elements[2]]();\n                        window.controller = elements[1];\n                    }\n                    done();\n                });\n            }\n        });\n    });\n}\n\n});\nparcelRegister(\"esUsT\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $a87f7af85305f497$export$2e2bcd8739ae039; });\nfunction $a87f7af85305f497$export$2e2bcd8739ae039(res) {\n    return new Promise(function(resolve) {\n        const cssPromise = new Promise((resolve)=>{\n            import(/*webpackMode:\"lazy\"*/ /* webpackChunkName: \"[request]\" */ `../scss/modules/${res}.scss`).then(()=>{\n                console.log(\"Loaded CSS\", res);\n                resolve(true);\n            }, (err)=>{\n                console.log(\"Error\", err);\n                resolve(true);\n            });\n        });\n        const jsPromise = new Promise((resolve)=>{\n            import(/*webpackMode:\"lazy\"*/ /* webpackChunkName: \"[request]\" */ `./controllers/${res}`).then(()=>{\n                console.log(\"Loaded JS\", res);\n                resolve(true);\n            }, (err)=>{\n                console.log(\"Error\", err);\n                resolve(true);\n            });\n        });\n        Promise.all([\n            cssPromise,\n            jsPromise\n        ]).then(()=>{\n            resolve(true);\n        });\n    });\n}\n\n});\n\n\nparcelRegister(\"eAjAl\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $a9e39eb1d3c3087e$export$2e2bcd8739ae039; });\n\nvar $4ldTB = parcelRequire(\"4ldTB\");\nclass $a9e39eb1d3c3087e$export$2e2bcd8739ae039 {\n    constructor(){\n        // handlers\n        this.handlers = {};\n        this.resizeHandlers = {};\n        // init\n        this._init();\n    }\n    reset() {}\n    add(handler, handlers = false) {\n        if (!handlers) handlers = this.handlers;\n        let handlerStr = handler.toString();\n        if (handlerStr in handlers) return handlers[handlerStr];\n        else {\n            handlers[handlerStr] = handler;\n            return handler;\n        }\n    }\n    remove(handler) {\n        let handlerStr = handler.toString();\n        if (handlerStr in this.handlers) delete this.handlers.handlerStr;\n    }\n    listen(command, handler, newGlobal = null) {\n        handler = this.add(handler);\n        (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(document).off(command, handler).on(command, handler);\n        return this;\n    }\n    resize(handler, newGlobal = null) {\n        this.add(handler, this.resizeHandlers);\n        return this;\n    }\n    trigger(events, args = null) {\n        if (events == \"resize\") ;\n        else if (events.indexOf(\":\") !== -1) {\n            args = args || [];\n            (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(document).trigger(events, args);\n        }\n        return this;\n    }\n    _resizeHandler() {\n        // load all scripts\n        let i;\n        for(i in this.resizeHandlers)this.resizeHandlers[i]();\n    }\n    _init() {\n        // resize\n        let cachedWidth = window.innerWidth;\n        let cachedHeight = window.innerHeight;\n        (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(window).on(\"resize orientationchange\", ()=>{\n            let newWidth = window.innerWidth;\n            let newHeight = window.innerHeight;\n            if (newWidth !== cachedWidth || newHeight !== cachedHeight) {\n                // new width\n                cachedWidth = newWidth;\n                cachedHeight = newHeight;\n                this._resizeHandler();\n            }\n        });\n    }\n    _isFunction(functionToCheck) {\n        return functionToCheck && ({}).toString.call(functionToCheck) === \"[object Function]\";\n    }\n}\n\n});\n\nparcelRegister(\"lBUWF\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $fbb939cd074bff93$export$2e2bcd8739ae039; });\n\nvar $4ldTB = parcelRequire(\"4ldTB\");\nclass $fbb939cd074bff93$export$2e2bcd8739ae039 {\n    constructor(){\n        this.recaptchaRenders = {};\n        this.timout = false;\n        this.loaded = false;\n        this.recaptchaIsRenders = false;\n    }\n    initGlobal() {\n        this._ajaxForm();\n        this._ajaxFormMessage();\n        this._goForm();\n    }\n    initView() {\n        if ((0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))().parsley) {\n            console.log(\"formcomponent initialize parsley\");\n            (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(\"[data-form],[data-form-message],[data-form-go]\").parsley({\n                //excluded: \"input[type=button], input[type=submit], input[type=reset], input[type=hidden], [disabled], :hidden\",\n                errorsContainer: function(pEle) {\n                    if (pEle.$element.is(\"select\") && pEle.$element.next(\".select2\").length > 0) {\n                        if (pEle.$element.next(\"select2errorsContainer\").length == 0) pEle.$element.next(\".select2\").after('<div class=\"select2errorsContainer\"></div>');\n                        return pEle.$element.next().next();\n                    }\n                }\n            });\n        }\n        // générer les recaptcha\n        (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(\"[data-form], [data-form-message]\").find(\"[data-recaptcha]\").each((i, element)=>{\n            let $this = (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(element);\n            if ($this.find(\".grecaptcha-badge\").length > 0) return true;\n            let $form = $this.parents(\"form[data-form-message], form[data-form]\");\n            let command = $form.is(\"[data-form-message]\") ? \"formMessage\" : \"form\";\n            $this.attr(\"id\", \"recaptcha-\" + command + \"-\" + this._createUID());\n            this._redendRecaptcha($form).then(()=>{\n                this._render($this, command, $form, this.recaptchaRenders);\n            });\n        });\n    }\n    _render($el, command, $form) {\n        this.recaptchaRenders[$el.attr(\"id\")] = grecaptcha.render($el.attr(\"id\"), {\n            \"sitekey\": data.recaptchaKey,\n            \"badge\": \"inline\",\n            \"hl\": \"fr\",\n            \"type\": \"image\",\n            \"size\": \"invisible\",\n            \"callback\": ()=>{\n                this._formSubmit(command, $form[0]);\n            }\n        });\n    }\n    _redendRecaptcha($form) {\n        return new Promise((resolve)=>{\n            // remove focus to avoid js error:\n            if (this.recaptchaIsRenders == false) $form.find(\"input,select,textarea\").one(\"focus\", ()=>{\n                this._initCaptcha(this.timout).then(()=>{\n                    resolve(true);\n                    this.recaptchaIsRenders = true;\n                });\n            });\n            else resolve(true);\n        });\n    }\n    _initCaptcha(timout = false) {\n        return new Promise((resolve)=>{\n            if ((0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(\"#lazyReacptcha\").length == 0) {\n                let head = document.getElementsByTagName(\"head\")[0];\n                let script = document.createElement(\"script\");\n                script.id = \"lazyReacptcha\";\n                script.type = \"text/javascript\";\n                script.src = \"https://www.google.com/recaptcha/api.js?render=explicit\";\n                head.appendChild(script);\n            }\n            let captchaScript = document.getElementById(\"lazyReacptcha\");\n            captchaScript.onload = ()=>{\n                grecaptcha.ready(()=>{\n                    if (typeof grecaptcha === \"undefined\") ;\n                    else resolve(true);\n                });\n            };\n        });\n    }\n    _goForm() {\n        (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(\"body\").on(\"submit\", \"form[data-form-go]\", (e)=>{\n            e.preventDefault();\n            let $form = (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(e.currentTarget);\n            window.barba.go($form.attr(\"action\") + \"?\" + $form.serialize());\n        });\n    }\n    _ajaxForm() {\n        (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(\"body\").on(\"submit\", \"form[data-form]\", (e)=>{\n            e.preventDefault();\n            let $form = (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(e.currentTarget);\n            $form.addClass(\"is-processing\");\n            if ($form.find(\"[data-recaptcha]\").length > 0) grecaptcha.execute(this.recaptchaRenders[$form.find(\"[data-recaptcha]\").attr(\"id\")]);\n            else this._formSubmit(\"form\", e.currentTarget);\n        });\n    }\n    _ajaxFormMessage() {\n        (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(\"body\").on(\"submit\", \"form[data-form-message]\", (e)=>{\n            e.preventDefault();\n            let $form = (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(e.currentTarget);\n            $form.addClass(\"is-processing\");\n            if ($form.find(\"[data-recaptcha]\").length > 0) {\n                console.log(this.recaptchaRenders, $form.find(\"[data-recaptcha]\").attr(\"id\"));\n                console.log(this.recaptchaRenders, $form.find(\"[data-recaptcha]\").attr(\"id\"));\n                grecaptcha.reset(this.recaptchaRenders, $form.find(\"[data-recaptcha]\").attr(\"id\"));\n                grecaptcha.execute(this.recaptchaRenders[$form.find(\"[data-recaptcha]\").attr(\"id\")]);\n            } else this._formSubmit(\"formMessage\", e.currentTarget);\n        });\n    }\n    _formSubmit(command, el) {\n        let $form = (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB)))(el);\n        let name = $form.data(\"form-message\") ? $form.data(\"form-message\") : $form.data(\"form\");\n        let method = $form.attr(\"method\");\n        let formData = new FormData(el);\n        if (method == \"get\") formData = $form.serialize();\n        $form.find(\"[data-recaptcha]\").length;\n        if (name != \"\") window.appEvent.trigger(command + \":\" + name + \":process\", [\n            $form\n        ]);\n        $form.addClass(\"is-processing\");\n        window.appEvent.trigger(command + \":ajax:process\", [\n            $form\n        ]);\n        const lang = document.documentElement.lang;\n        let currentLanguage = \"fr\";\n        switch(lang){\n            case \"nl-BE\":\n                currentLanguage = \"nl\";\n                break;\n            case \"en-US\":\n                currentLanguage = \"en\";\n                break;\n            case \"en-GB\":\n                currentLanguage = \"en\";\n                break;\n        }\n        (0, (/*@__PURE__*/$parcel$interopDefault($4ldTB))).ajax({\n            url: $form.attr(\"action\") ? $form.attr(\"action\") : $form.attr(\"data-action\"),\n            type: method,\n            data: formData,\n            success: (response)=>{\n                if ($form.find(\"[data-recaptcha]\").length > 0) grecaptcha.reset(this.recaptchaRenders[$form.find(\"[data-recaptcha]\").attr(\"id\")]);\n                $form.removeClass(\"is-processing\");\n                if (name != \"\") window.appEvent.trigger(command + \":\" + name + \":success\", [\n                    response,\n                    $form\n                ]);\n                window.appEvent.trigger(command + \":ajax:success\", [\n                    response,\n                    $form\n                ]);\n                if ($form.attr(\"data-redirect\")) window.barba.instance.force($form.attr(\"data-redirect\"));\n            },\n            error: (xhr, status)=>{\n                $form.removeClass(\"is-processing\");\n                if (name != \"\") window.appEvent.trigger(command + \":\" + name + \":error\", [\n                    $form\n                ]);\n                window.appEvent.trigger(command + \":ajax:error\", [\n                    $form\n                ]);\n            },\n            contentType: false,\n            processData: false\n        });\n    }\n    _createUID() {\n        var dt = new Date().getTime();\n        var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            var r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == \"x\" ? r : r & 0x3 | 0x8).toString(16);\n        });\n        return uuid;\n    }\n}\n\n});\n\nparcelRegister(\"gKRTl\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $c32abf00c99d0a45$export$2e2bcd8739ae039; });\nfunction $c32abf00c99d0a45$export$2e2bcd8739ae039() {\n    this.init = function() {\n        window.appEvent.listen(\"formMessage:ajax:process\", function(data, el) {\n            $(el).addClass(\"is-processing\");\n            $(el).removeClass(\"form-error\");\n            $(el).removeClass(\"form-success\");\n            $(el).find(\"[data-form-message-success], [data-form-message-error]\").attr(\"style\", \"\");\n        });\n        window.appEvent.listen(\"formMessage:ajax:success\", function(data, response, el) {\n            $(el).removeClass(\"is-processing\");\n            $(el).find('input:not([type=\"hidden\"]), textarea').val(\"\");\n            $(el).find('input[type=\"checkbox\"]').prop(\"checked\", false);\n            if (response == true || response === 1 || response === \"1\" || response.success === true) {\n                $(el).addClass(\"form-success\");\n                $(el).removeClass(\"form-error\");\n                if ($(el).find(\"[data-form-message-success]\").length > 0) $(el).find(\"[data-form-message-success]\").slideDown(300, function() {\n                    setTimeout(()=>{\n                        $(el).find(\"[data-form-message-success]\").slideUp(300);\n                    }, 3000);\n                });\n            } else {\n                $(el).removeClass(\"form-success\");\n                $(el).addClass(\"form-error\");\n                if ($(el).find(\"[data-form-message-error]\").length > 0) $(el).find(\"[data-form-message-error]\").slideDown(300);\n            }\n        });\n        window.appEvent.listen(\"formMessage:ajax:error\", function(data, el) {\n            $(el).removeClass(\"is-processing\");\n            $(el).addClass(\"form-error\");\n            $(el).removeClass(\"form-success\");\n        });\n    };\n}\n\n});\n\nparcelRegister(\"4z6f3\", function(module, exports) {\n\n/*!\n* Parsley.js\n* Version 2.9.2 - built Tue, Dec 10th 2019, 6:18 pm\n* http://parsleyjs.org\n* Guillaume Potier - <guillaume@wisembly.com>\n* Marc-Andre Lafortune - <petroselinum@marc-andre.ca>\n* MIT Licensed\n*/ // The source code below is generated by babel as\n// Parsley is written in ECMAScript 6\n//\n(function(global1, factory) {\n    module.exports = factory((parcelRequire(\"4ldTB\")));\n})(module.exports, function($) {\n    \"use strict\";\n    function _typeof(obj) {\n        if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") _typeof = function(obj) {\n            return typeof obj;\n        };\n        else _typeof = function(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n        return _typeof(obj);\n    }\n    function _extends() {\n        _extends = Object.assign || function(target) {\n            for(var i = 1; i < arguments.length; i++){\n                var source = arguments[i];\n                for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];\n            }\n            return target;\n        };\n        return _extends.apply(this, arguments);\n    }\n    function _slicedToArray(arr, i) {\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n    }\n    function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n    }\n    function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) {\n            for(var i = 0, arr2 = new Array(arr.length); i < arr.length; i++)arr2[i] = arr[i];\n            return arr2;\n        }\n    }\n    function _arrayWithHoles(arr) {\n        if (Array.isArray(arr)) return arr;\n    }\n    function _iterableToArray(iter) {\n        if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n    }\n    function _iterableToArrayLimit(arr, i) {\n        if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) return;\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _e = undefined;\n        try {\n            for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                _arr.push(_s.value);\n                if (i && _arr.length === i) break;\n            }\n        } catch (err) {\n            _d = true;\n            _e = err;\n        } finally{\n            try {\n                if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n    function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }\n    function _nonIterableRest() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n    var globalID = 1;\n    var pastWarnings = {};\n    var Utils = {\n        // Parsley DOM-API\n        // returns object from dom attributes and values\n        attr: function attr(element, namespace, obj) {\n            var i;\n            var attribute;\n            var attributes;\n            var regex = new RegExp(\"^\" + namespace, \"i\");\n            if (\"undefined\" === typeof obj) obj = {};\n            else {\n                // Clear all own properties. This won't affect prototype's values\n                for(i in obj)if (obj.hasOwnProperty(i)) delete obj[i];\n            }\n            if (!element) return obj;\n            attributes = element.attributes;\n            for(i = attributes.length; i--;){\n                attribute = attributes[i];\n                if (attribute && attribute.specified && regex.test(attribute.name)) obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);\n            }\n            return obj;\n        },\n        checkAttr: function checkAttr(element, namespace, _checkAttr) {\n            return element.hasAttribute(namespace + _checkAttr);\n        },\n        setAttr: function setAttr(element, namespace, attr, value) {\n            element.setAttribute(this.dasherize(namespace + attr), String(value));\n        },\n        getType: function getType(element) {\n            return element.getAttribute(\"type\") || \"text\";\n        },\n        generateID: function generateID() {\n            return \"\" + globalID++;\n        },\n        /** Third party functions **/ deserializeValue: function deserializeValue(value) {\n            var num;\n            try {\n                return value ? value == \"true\" || (value == \"false\" ? false : value == \"null\" ? null : !isNaN(num = Number(value)) ? num : /^[\\[\\{]/.test(value) ? JSON.parse(value) : value) : value;\n            } catch (e) {\n                return value;\n            }\n        },\n        // Zepto camelize function\n        camelize: function camelize(str) {\n            return str.replace(/-+(.)?/g, function(match, chr) {\n                return chr ? chr.toUpperCase() : \"\";\n            });\n        },\n        // Zepto dasherize function\n        dasherize: function dasherize(str) {\n            return str.replace(/::/g, \"/\").replace(/([A-Z]+)([A-Z][a-z])/g, \"$1_$2\").replace(/([a-z\\d])([A-Z])/g, \"$1_$2\").replace(/_/g, \"-\").toLowerCase();\n        },\n        warn: function warn() {\n            var _window$console;\n            if (window.console && \"function\" === typeof window.console.warn) (_window$console = window.console).warn.apply(_window$console, arguments);\n        },\n        warnOnce: function warnOnce(msg) {\n            if (!pastWarnings[msg]) {\n                pastWarnings[msg] = true;\n                this.warn.apply(this, arguments);\n            }\n        },\n        _resetWarnings: function _resetWarnings() {\n            pastWarnings = {};\n        },\n        trimString: function trimString(string) {\n            return string.replace(/^\\s+|\\s+$/g, \"\");\n        },\n        parse: {\n            date: function date(string) {\n                var parsed = string.match(/^(\\d{4,})-(\\d\\d)-(\\d\\d)$/);\n                if (!parsed) return null;\n                var _parsed$map = parsed.map(function(x) {\n                    return parseInt(x, 10);\n                }), _parsed$map2 = _slicedToArray(_parsed$map, 4), _ = _parsed$map2[0], year = _parsed$map2[1], month = _parsed$map2[2], day = _parsed$map2[3];\n                var date = new Date(year, month - 1, day);\n                if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) return null;\n                return date;\n            },\n            string: function string(_string) {\n                return _string;\n            },\n            integer: function integer(string) {\n                if (isNaN(string)) return null;\n                return parseInt(string, 10);\n            },\n            number: function number(string) {\n                if (isNaN(string)) throw null;\n                return parseFloat(string);\n            },\n            \"boolean\": function _boolean(string) {\n                return !/^\\s*false\\s*$/i.test(string);\n            },\n            object: function object(string) {\n                return Utils.deserializeValue(string);\n            },\n            regexp: function regexp(_regexp) {\n                var flags = \"\"; // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n                if (/^\\/.*\\/(?:[gimy]*)$/.test(_regexp)) {\n                    // Replace the regexp literal string with the first match group: ([gimy]*)\n                    // If no flag is present, this will be a blank string\n                    flags = _regexp.replace(/.*\\/([gimy]*)$/, \"$1\"); // Again, replace the regexp literal string with the first match group:\n                    // everything excluding the opening and closing slashes and the flags\n                    _regexp = _regexp.replace(new RegExp(\"^/(.*?)/\" + flags + \"$\"), \"$1\");\n                } else // Anchor regexp:\n                _regexp = \"^\" + _regexp + \"$\";\n                return new RegExp(_regexp, flags);\n            }\n        },\n        parseRequirement: function parseRequirement(requirementType, string) {\n            var converter = this.parse[requirementType || \"string\"];\n            if (!converter) throw 'Unknown requirement specification: \"' + requirementType + '\"';\n            var converted = converter(string);\n            if (converted === null) throw \"Requirement is not a \".concat(requirementType, ': \"').concat(string, '\"');\n            return converted;\n        },\n        namespaceEvents: function namespaceEvents(events, namespace) {\n            events = this.trimString(events || \"\").split(/\\s+/);\n            if (!events[0]) return \"\";\n            return $.map(events, function(evt) {\n                return \"\".concat(evt, \".\").concat(namespace);\n            }).join(\" \");\n        },\n        difference: function difference(array, remove) {\n            // This is O(N^2), should be optimized\n            var result = [];\n            $.each(array, function(_, elem) {\n                if (remove.indexOf(elem) == -1) result.push(elem);\n            });\n            return result;\n        },\n        // Alter-ego to native Promise.all, but for jQuery\n        all: function all(promises) {\n            // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements\n            return $.when.apply($, _toConsumableArray(promises).concat([\n                42,\n                42\n            ]));\n        },\n        // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill\n        objectCreate: Object.create || function() {\n            var Object1 = function Object1() {};\n            return function(prototype) {\n                if (arguments.length > 1) throw Error(\"Second argument not supported\");\n                if (_typeof(prototype) != \"object\") throw TypeError(\"Argument must be an object\");\n                Object1.prototype = prototype;\n                var result = new Object1();\n                Object1.prototype = null;\n                return result;\n            };\n        }(),\n        _SubmitSelector: 'input[type=\"submit\"], button:submit'\n    };\n    // All these options could be overriden and specified directly in DOM using\n    // `data-parsley-` default DOM-API\n    // eg: `inputs` can be set in DOM using `data-parsley-inputs=\"input, textarea\"`\n    // eg: `data-parsley-stop-on-first-failing-constraint=\"false\"`\n    var Defaults = {\n        // ### General\n        // Default data-namespace for DOM API\n        namespace: \"data-parsley-\",\n        // Supported inputs by default\n        inputs: \"input, textarea, select\",\n        // Excluded inputs by default\n        excluded: \"input[type=button], input[type=submit], input[type=reset], input[type=hidden]\",\n        // Stop validating field on highest priority failing constraint\n        priorityEnabled: true,\n        // ### Field only\n        // identifier used to group together inputs (e.g. radio buttons...)\n        multiple: null,\n        // identifier (or array of identifiers) used to validate only a select group of inputs\n        group: null,\n        // ### UI\n        // Enable\\Disable error messages\n        uiEnabled: true,\n        // Key events threshold before validation\n        validationThreshold: 3,\n        // Focused field on form validation error. 'first'|'last'|'none'\n        focus: \"first\",\n        // event(s) that will trigger validation before first failure. eg: `input`...\n        trigger: false,\n        // event(s) that will trigger validation after first failure.\n        triggerAfterFailure: \"input\",\n        // Class that would be added on every failing validation Parsley field\n        errorClass: \"parsley-error\",\n        // Same for success validation\n        successClass: \"parsley-success\",\n        // Return the `$element` that will receive these above success or error classes\n        // Could also be (and given directly from DOM) a valid selector like `'#div'`\n        classHandler: function classHandler(Field) {},\n        // Return the `$element` where errors will be appended\n        // Could also be (and given directly from DOM) a valid selector like `'#div'`\n        errorsContainer: function errorsContainer(Field) {},\n        // ul elem that would receive errors' list\n        errorsWrapper: '<ul class=\"parsley-errors-list\"></ul>',\n        // li elem that would receive error message\n        errorTemplate: \"<li></li>\"\n    };\n    var Base = function Base() {\n        this.__id__ = Utils.generateID();\n    };\n    Base.prototype = {\n        asyncSupport: true,\n        // Deprecated\n        _pipeAccordingToValidationResult: function _pipeAccordingToValidationResult() {\n            var _this = this;\n            var pipe = function pipe() {\n                var r = $.Deferred();\n                if (true !== _this.validationResult) r.reject();\n                return r.resolve().promise();\n            };\n            return [\n                pipe,\n                pipe\n            ];\n        },\n        actualizeOptions: function actualizeOptions() {\n            Utils.attr(this.element, this.options.namespace, this.domOptions);\n            if (this.parent && this.parent.actualizeOptions) this.parent.actualizeOptions();\n            return this;\n        },\n        _resetOptions: function _resetOptions(initOptions) {\n            this.domOptions = Utils.objectCreate(this.parent.options);\n            this.options = Utils.objectCreate(this.domOptions); // Shallow copy of ownProperties of initOptions:\n            for(var i in initOptions)if (initOptions.hasOwnProperty(i)) this.options[i] = initOptions[i];\n            this.actualizeOptions();\n        },\n        _listeners: null,\n        // Register a callback for the given event name\n        // Callback is called with context as the first argument and the `this`\n        // The context is the current parsley instance, or window.Parsley if global\n        // A return value of `false` will interrupt the calls\n        on: function on(name, fn) {\n            this._listeners = this._listeners || {};\n            var queue = this._listeners[name] = this._listeners[name] || [];\n            queue.push(fn);\n            return this;\n        },\n        // Deprecated. Use `on` instead\n        subscribe: function subscribe(name, fn) {\n            $.listenTo(this, name.toLowerCase(), fn);\n        },\n        // Unregister a callback (or all if none is given) for the given event name\n        off: function off(name, fn) {\n            var queue = this._listeners && this._listeners[name];\n            if (queue) {\n                if (!fn) delete this._listeners[name];\n                else {\n                    for(var i = queue.length; i--;)if (queue[i] === fn) queue.splice(i, 1);\n                }\n            }\n            return this;\n        },\n        // Deprecated. Use `off`\n        unsubscribe: function unsubscribe(name, fn) {\n            $.unsubscribeTo(this, name.toLowerCase());\n        },\n        // Trigger an event of the given name\n        // A return value of `false` interrupts the callback chain\n        // Returns false if execution was interrupted\n        trigger: function trigger(name, target, extraArg) {\n            target = target || this;\n            var queue = this._listeners && this._listeners[name];\n            var result;\n            if (queue) for(var i = queue.length; i--;){\n                result = queue[i].call(target, target, extraArg);\n                if (result === false) return result;\n            }\n            if (this.parent) return this.parent.trigger(name, target, extraArg);\n            return true;\n        },\n        asyncIsValid: function asyncIsValid(group, force) {\n            Utils.warnOnce(\"asyncIsValid is deprecated; please use whenValid instead\");\n            return this.whenValid({\n                group: group,\n                force: force\n            });\n        },\n        _findRelated: function _findRelated() {\n            return this.options.multiple ? $(this.parent.element.querySelectorAll(\"[\".concat(this.options.namespace, 'multiple=\"').concat(this.options.multiple, '\"]'))) : this.$element;\n        }\n    };\n    var convertArrayRequirement = function convertArrayRequirement(string, length) {\n        var m = string.match(/^\\s*\\[(.*)\\]\\s*$/);\n        if (!m) throw 'Requirement is not an array: \"' + string + '\"';\n        var values = m[1].split(\",\").map(Utils.trimString);\n        if (values.length !== length) throw \"Requirement has \" + values.length + \" values when \" + length + \" are needed\";\n        return values;\n    };\n    var convertExtraOptionRequirement = function convertExtraOptionRequirement(requirementSpec, string, extraOptionReader) {\n        var main = null;\n        var extra = {};\n        for(var key in requirementSpec)if (key) {\n            var value = extraOptionReader(key);\n            if (\"string\" === typeof value) value = Utils.parseRequirement(requirementSpec[key], value);\n            extra[key] = value;\n        } else main = Utils.parseRequirement(requirementSpec[key], string);\n        return [\n            main,\n            extra\n        ];\n    }; // A Validator needs to implement the methods `validate` and `parseRequirements`\n    var Validator = function Validator(spec) {\n        $.extend(true, this, spec);\n    };\n    Validator.prototype = {\n        // Returns `true` iff the given `value` is valid according the given requirements.\n        validate: function validate(value, requirementFirstArg) {\n            if (this.fn) {\n                // Legacy style validator\n                if (arguments.length > 3) requirementFirstArg = [].slice.call(arguments, 1, -1); // Skip first arg (value) and last (instance), combining the rest\n                return this.fn(value, requirementFirstArg);\n            }\n            if (Array.isArray(value)) {\n                if (!this.validateMultiple) throw \"Validator `\" + this.name + \"` does not handle multiple values\";\n                return this.validateMultiple.apply(this, arguments);\n            } else {\n                var instance = arguments[arguments.length - 1];\n                if (this.validateDate && instance._isDateInput()) {\n                    arguments[0] = Utils.parse.date(arguments[0]);\n                    if (arguments[0] === null) return false;\n                    return this.validateDate.apply(this, arguments);\n                }\n                if (this.validateNumber) {\n                    if (!value) return true;\n                    if (isNaN(value)) return false;\n                    arguments[0] = parseFloat(arguments[0]);\n                    return this.validateNumber.apply(this, arguments);\n                }\n                if (this.validateString) return this.validateString.apply(this, arguments);\n                throw \"Validator `\" + this.name + \"` only handles multiple values\";\n            }\n        },\n        // Parses `requirements` into an array of arguments,\n        // according to `this.requirementType`\n        parseRequirements: function parseRequirements(requirements, extraOptionReader) {\n            if (\"string\" !== typeof requirements) // Assume requirement already parsed\n            // but make sure we return an array\n            return Array.isArray(requirements) ? requirements : [\n                requirements\n            ];\n            var type = this.requirementType;\n            if (Array.isArray(type)) {\n                var values = convertArrayRequirement(requirements, type.length);\n                for(var i = 0; i < values.length; i++)values[i] = Utils.parseRequirement(type[i], values[i]);\n                return values;\n            } else if ($.isPlainObject(type)) return convertExtraOptionRequirement(type, requirements, extraOptionReader);\n            else return [\n                Utils.parseRequirement(type, requirements)\n            ];\n        },\n        // Defaults:\n        requirementType: \"string\",\n        priority: 2\n    };\n    var ValidatorRegistry = function ValidatorRegistry(validators, catalog) {\n        this.__class__ = \"ValidatorRegistry\"; // Default Parsley locale is en\n        this.locale = \"en\";\n        this.init(validators || {}, catalog || {});\n    };\n    var typeTesters = {\n        email: /^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))$/,\n        // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers\n        number: /^-?(\\d*\\.)?\\d+(e[-+]?\\d+)?$/i,\n        integer: /^-?\\d+$/,\n        digits: /^\\d+$/,\n        alphanum: /^\\w+$/i,\n        date: {\n            test: function test(value) {\n                return Utils.parse.date(value) !== null;\n            }\n        },\n        url: new RegExp(\"^(?:(?:https?|ftp)://)?(?:\\\\S+(?::\\\\S*)?@)?(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff]{2,})))(?::\\\\d{2,5})?(?:/\\\\S*)?$\")\n    };\n    typeTesters.range = typeTesters.number; // See http://stackoverflow.com/a/10454560/8279\n    var decimalPlaces = function decimalPlaces(num) {\n        var match = (\"\" + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n        if (!match) return 0;\n        return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n    }; // parseArguments('number', ['1', '2']) => [1, 2]\n    var parseArguments = function parseArguments(type, args) {\n        return args.map(Utils.parse[type]);\n    }; // operatorToValidator returns a validating function for an operator function, applied to the given type\n    var operatorToValidator = function operatorToValidator(type, operator) {\n        return function(value) {\n            for(var _len = arguments.length, requirementsAndInput = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)requirementsAndInput[_key - 1] = arguments[_key];\n            requirementsAndInput.pop(); // Get rid of `input` argument\n            return operator.apply(void 0, [\n                value\n            ].concat(_toConsumableArray(parseArguments(type, requirementsAndInput))));\n        };\n    };\n    var comparisonOperator = function comparisonOperator(operator) {\n        return {\n            validateDate: operatorToValidator(\"date\", operator),\n            validateNumber: operatorToValidator(\"number\", operator),\n            requirementType: operator.length <= 2 ? \"string\" : [\n                \"string\",\n                \"string\"\n            ],\n            // Support operators with a 1 or 2 requirement(s)\n            priority: 30\n        };\n    };\n    ValidatorRegistry.prototype = {\n        init: function init(validators, catalog) {\n            this.catalog = catalog; // Copy prototype's validators:\n            this.validators = _extends({}, this.validators);\n            for(var name in validators)this.addValidator(name, validators[name].fn, validators[name].priority);\n            window.Parsley.trigger(\"parsley:validator:init\");\n        },\n        // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n\n        setLocale: function setLocale(locale) {\n            if (\"undefined\" === typeof this.catalog[locale]) throw new Error(locale + \" is not available in the catalog\");\n            this.locale = locale;\n            return this;\n        },\n        // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`\n        addCatalog: function addCatalog(locale, messages, set) {\n            if (\"object\" === _typeof(messages)) this.catalog[locale] = messages;\n            if (true === set) return this.setLocale(locale);\n            return this;\n        },\n        // Add a specific message for a given constraint in a given locale\n        addMessage: function addMessage(locale, name, message) {\n            if (\"undefined\" === typeof this.catalog[locale]) this.catalog[locale] = {};\n            this.catalog[locale][name] = message;\n            return this;\n        },\n        // Add messages for a given locale\n        addMessages: function addMessages(locale, nameMessageObject) {\n            for(var name in nameMessageObject)this.addMessage(locale, name, nameMessageObject[name]);\n            return this;\n        },\n        // Add a new validator\n        //\n        //    addValidator('custom', {\n        //        requirementType: ['integer', 'integer'],\n        //        validateString: function(value, from, to) {},\n        //        priority: 22,\n        //        messages: {\n        //          en: \"Hey, that's no good\",\n        //          fr: \"Aye aye, pas bon du tout\",\n        //        }\n        //    })\n        //\n        // Old API was addValidator(name, function, priority)\n        //\n        addValidator: function addValidator(name, arg1, arg2) {\n            if (this.validators[name]) Utils.warn('Validator \"' + name + '\" is already defined.');\n            else if (Defaults.hasOwnProperty(name)) {\n                Utils.warn('\"' + name + '\" is a restricted keyword and is not a valid validator name.');\n                return;\n            }\n            return this._setValidator.apply(this, arguments);\n        },\n        hasValidator: function hasValidator(name) {\n            return !!this.validators[name];\n        },\n        updateValidator: function updateValidator(name, arg1, arg2) {\n            if (!this.validators[name]) {\n                Utils.warn('Validator \"' + name + '\" is not already defined.');\n                return this.addValidator.apply(this, arguments);\n            }\n            return this._setValidator.apply(this, arguments);\n        },\n        removeValidator: function removeValidator(name) {\n            if (!this.validators[name]) Utils.warn('Validator \"' + name + '\" is not defined.');\n            delete this.validators[name];\n            return this;\n        },\n        _setValidator: function _setValidator(name, validator, priority) {\n            if (\"object\" !== _typeof(validator)) // Old style validator, with `fn` and `priority`\n            validator = {\n                fn: validator,\n                priority: priority\n            };\n            if (!validator.validate) validator = new Validator(validator);\n            this.validators[name] = validator;\n            for(var locale in validator.messages || {})this.addMessage(locale, name, validator.messages[locale]);\n            return this;\n        },\n        getErrorMessage: function getErrorMessage(constraint) {\n            var message; // Type constraints are a bit different, we have to match their requirements too to find right error message\n            if (\"type\" === constraint.name) {\n                var typeMessages = this.catalog[this.locale][constraint.name] || {};\n                message = typeMessages[constraint.requirements];\n            } else message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);\n            return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;\n        },\n        // Kind of light `sprintf()` implementation\n        formatMessage: function formatMessage(string, parameters) {\n            if (\"object\" === _typeof(parameters)) {\n                for(var i in parameters)string = this.formatMessage(string, parameters[i]);\n                return string;\n            }\n            return \"string\" === typeof string ? string.replace(/%s/i, parameters) : \"\";\n        },\n        // Here is the Parsley default validators list.\n        // A validator is an object with the following key values:\n        //  - priority: an integer\n        //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these\n        //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise\n        // Alternatively, a validator can be a function that returns such an object\n        //\n        validators: {\n            notblank: {\n                validateString: function validateString(value) {\n                    return /\\S/.test(value);\n                },\n                priority: 2\n            },\n            required: {\n                validateMultiple: function validateMultiple(values) {\n                    return values.length > 0;\n                },\n                validateString: function validateString(value) {\n                    return /\\S/.test(value);\n                },\n                priority: 512\n            },\n            type: {\n                validateString: function validateString(value, type) {\n                    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}, _ref$step = _ref.step, step = _ref$step === void 0 ? \"any\" : _ref$step, _ref$base = _ref.base, base = _ref$base === void 0 ? 0 : _ref$base;\n                    var tester = typeTesters[type];\n                    if (!tester) throw new Error(\"validator type `\" + type + \"` is not supported\");\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n                    if (!tester.test(value)) return false;\n                    if (\"number\" === type) {\n                        if (!/^any$/i.test(step || \"\")) {\n                            var nb = Number(value);\n                            var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));\n                            if (decimalPlaces(nb) > decimals) return false; // Be careful of rounding errors by using integers.\n                            var toInt = function toInt(f) {\n                                return Math.round(f * Math.pow(10, decimals));\n                            };\n                            if ((toInt(nb) - toInt(base)) % toInt(step) != 0) return false;\n                        }\n                    }\n                    return true;\n                },\n                requirementType: {\n                    \"\": \"string\",\n                    step: \"string\",\n                    base: \"number\"\n                },\n                priority: 256\n            },\n            pattern: {\n                validateString: function validateString(value, regexp) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n                    return regexp.test(value);\n                },\n                requirementType: \"regexp\",\n                priority: 64\n            },\n            minlength: {\n                validateString: function validateString(value, requirement) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n                    return value.length >= requirement;\n                },\n                requirementType: \"integer\",\n                priority: 30\n            },\n            maxlength: {\n                validateString: function validateString(value, requirement) {\n                    return value.length <= requirement;\n                },\n                requirementType: \"integer\",\n                priority: 30\n            },\n            length: {\n                validateString: function validateString(value, min, max) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n                    return value.length >= min && value.length <= max;\n                },\n                requirementType: [\n                    \"integer\",\n                    \"integer\"\n                ],\n                priority: 30\n            },\n            mincheck: {\n                validateMultiple: function validateMultiple(values, requirement) {\n                    return values.length >= requirement;\n                },\n                requirementType: \"integer\",\n                priority: 30\n            },\n            maxcheck: {\n                validateMultiple: function validateMultiple(values, requirement) {\n                    return values.length <= requirement;\n                },\n                requirementType: \"integer\",\n                priority: 30\n            },\n            check: {\n                validateMultiple: function validateMultiple(values, min, max) {\n                    return values.length >= min && values.length <= max;\n                },\n                requirementType: [\n                    \"integer\",\n                    \"integer\"\n                ],\n                priority: 30\n            },\n            min: comparisonOperator(function(value, requirement) {\n                return value >= requirement;\n            }),\n            max: comparisonOperator(function(value, requirement) {\n                return value <= requirement;\n            }),\n            range: comparisonOperator(function(value, min, max) {\n                return value >= min && value <= max;\n            }),\n            equalto: {\n                validateString: function validateString(value, refOrValue) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n                    var $reference = $(refOrValue);\n                    if ($reference.length) return value === $reference.val();\n                    else return value === refOrValue;\n                },\n                priority: 256\n            },\n            euvatin: {\n                validateString: function validateString(value, refOrValue) {\n                    if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n                    var re = /^[A-Z][A-Z][A-Za-z0-9 -]{2,}$/;\n                    return re.test(value);\n                },\n                priority: 30\n            }\n        }\n    };\n    var UI = {};\n    var diffResults = function diffResults(newResult, oldResult, deep) {\n        var added = [];\n        var kept = [];\n        for(var i = 0; i < newResult.length; i++){\n            var found = false;\n            for(var j = 0; j < oldResult.length; j++)if (newResult[i].assert.name === oldResult[j].assert.name) {\n                found = true;\n                break;\n            }\n            if (found) kept.push(newResult[i]);\n            else added.push(newResult[i]);\n        }\n        return {\n            kept: kept,\n            added: added,\n            removed: !deep ? diffResults(oldResult, newResult, true).added : []\n        };\n    };\n    UI.Form = {\n        _actualizeTriggers: function _actualizeTriggers() {\n            var _this = this;\n            this.$element.on(\"submit.Parsley\", function(evt) {\n                _this.onSubmitValidate(evt);\n            });\n            this.$element.on(\"click.Parsley\", Utils._SubmitSelector, function(evt) {\n                _this.onSubmitButton(evt);\n            }); // UI could be disabled\n            if (false === this.options.uiEnabled) return;\n            this.element.setAttribute(\"novalidate\", \"\");\n        },\n        focus: function focus() {\n            this._focusedField = null;\n            if (true === this.validationResult || \"none\" === this.options.focus) return null;\n            for(var i = 0; i < this.fields.length; i++){\n                var field = this.fields[i];\n                if (true !== field.validationResult && field.validationResult.length > 0 && \"undefined\" === typeof field.options.noFocus) {\n                    this._focusedField = field.$element;\n                    if (\"first\" === this.options.focus) break;\n                }\n            }\n            if (null === this._focusedField) return null;\n            return this._focusedField.focus();\n        },\n        _destroyUI: function _destroyUI() {\n            // Reset all event listeners\n            this.$element.off(\".Parsley\");\n        }\n    };\n    UI.Field = {\n        _reflowUI: function _reflowUI() {\n            this._buildUI(); // If this field doesn't have an active UI don't bother doing something\n            if (!this._ui) return; // Diff between two validation results\n            var diff = diffResults(this.validationResult, this._ui.lastValidationResult); // Then store current validation result for next reflow\n            this._ui.lastValidationResult = this.validationResult; // Handle valid / invalid / none field class\n            this._manageStatusClass(); // Add, remove, updated errors messages\n            this._manageErrorsMessages(diff); // Triggers impl\n            this._actualizeTriggers(); // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user\n            if ((diff.kept.length || diff.added.length) && !this._failedOnce) {\n                this._failedOnce = true;\n                this._actualizeTriggers();\n            }\n        },\n        // Returns an array of field's error message(s)\n        getErrorsMessages: function getErrorsMessages() {\n            // No error message, field is valid\n            if (true === this.validationResult) return [];\n            var messages = [];\n            for(var i = 0; i < this.validationResult.length; i++)messages.push(this.validationResult[i].errorMessage || this._getErrorMessage(this.validationResult[i].assert));\n            return messages;\n        },\n        // It's a goal of Parsley that this method is no longer required [#1073]\n        addError: function addError(name) {\n            var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, message = _ref.message, assert = _ref.assert, _ref$updateClass = _ref.updateClass, updateClass = _ref$updateClass === void 0 ? true : _ref$updateClass;\n            this._buildUI();\n            this._addError(name, {\n                message: message,\n                assert: assert\n            });\n            if (updateClass) this._errorClass();\n        },\n        // It's a goal of Parsley that this method is no longer required [#1073]\n        updateError: function updateError(name) {\n            var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, message = _ref2.message, assert = _ref2.assert, _ref2$updateClass = _ref2.updateClass, updateClass = _ref2$updateClass === void 0 ? true : _ref2$updateClass;\n            this._buildUI();\n            this._updateError(name, {\n                message: message,\n                assert: assert\n            });\n            if (updateClass) this._errorClass();\n        },\n        // It's a goal of Parsley that this method is no longer required [#1073]\n        removeError: function removeError(name) {\n            var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _ref3$updateClass = _ref3.updateClass, updateClass = _ref3$updateClass === void 0 ? true : _ref3$updateClass;\n            this._buildUI();\n            this._removeError(name); // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult\n            // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.\n            if (updateClass) this._manageStatusClass();\n        },\n        _manageStatusClass: function _manageStatusClass() {\n            if (this.hasConstraints() && this.needsValidation() && true === this.validationResult) this._successClass();\n            else if (this.validationResult.length > 0) this._errorClass();\n            else this._resetClass();\n        },\n        _manageErrorsMessages: function _manageErrorsMessages(diff) {\n            if (\"undefined\" !== typeof this.options.errorsMessagesDisabled) return; // Case where we have errorMessage option that configure an unique field error message, regardless failing validators\n            if (\"undefined\" !== typeof this.options.errorMessage) {\n                if (diff.added.length || diff.kept.length) {\n                    this._insertErrorWrapper();\n                    if (0 === this._ui.$errorsWrapper.find(\".parsley-custom-error-message\").length) this._ui.$errorsWrapper.append($(this.options.errorTemplate).addClass(\"parsley-custom-error-message\"));\n                    this._ui.$errorClassHandler.attr(\"aria-describedby\", this._ui.errorsWrapperId);\n                    return this._ui.$errorsWrapper.addClass(\"filled\").attr(\"aria-hidden\", \"false\").find(\".parsley-custom-error-message\").html(this.options.errorMessage);\n                }\n                this._ui.$errorClassHandler.removeAttr(\"aria-describedby\");\n                return this._ui.$errorsWrapper.removeClass(\"filled\").attr(\"aria-hidden\", \"true\").find(\".parsley-custom-error-message\").remove();\n            } // Show, hide, update failing constraints messages\n            for(var i = 0; i < diff.removed.length; i++)this._removeError(diff.removed[i].assert.name);\n            for(i = 0; i < diff.added.length; i++)this._addError(diff.added[i].assert.name, {\n                message: diff.added[i].errorMessage,\n                assert: diff.added[i].assert\n            });\n            for(i = 0; i < diff.kept.length; i++)this._updateError(diff.kept[i].assert.name, {\n                message: diff.kept[i].errorMessage,\n                assert: diff.kept[i].assert\n            });\n        },\n        _addError: function _addError(name, _ref4) {\n            var message = _ref4.message, assert = _ref4.assert;\n            this._insertErrorWrapper();\n            this._ui.$errorClassHandler.attr(\"aria-describedby\", this._ui.errorsWrapperId);\n            this._ui.$errorsWrapper.addClass(\"filled\").attr(\"aria-hidden\", \"false\").append($(this.options.errorTemplate).addClass(\"parsley-\" + name).html(message || this._getErrorMessage(assert)));\n        },\n        _updateError: function _updateError(name, _ref5) {\n            var message = _ref5.message, assert = _ref5.assert;\n            this._ui.$errorsWrapper.addClass(\"filled\").find(\".parsley-\" + name).html(message || this._getErrorMessage(assert));\n        },\n        _removeError: function _removeError(name) {\n            this._ui.$errorClassHandler.removeAttr(\"aria-describedby\");\n            this._ui.$errorsWrapper.removeClass(\"filled\").attr(\"aria-hidden\", \"true\").find(\".parsley-\" + name).remove();\n        },\n        _getErrorMessage: function _getErrorMessage(constraint) {\n            var customConstraintErrorMessage = constraint.name + \"Message\";\n            if (\"undefined\" !== typeof this.options[customConstraintErrorMessage]) return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);\n            return window.Parsley.getErrorMessage(constraint);\n        },\n        _buildUI: function _buildUI() {\n            // UI could be already built or disabled\n            if (this._ui || false === this.options.uiEnabled) return;\n            var _ui = {}; // Give field its Parsley id in DOM\n            this.element.setAttribute(this.options.namespace + \"id\", this.__id__);\n            /** Generate important UI elements and store them in this **/ // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes\n            _ui.$errorClassHandler = this._manageClassHandler(); // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer\n            _ui.errorsWrapperId = \"parsley-id-\" + (this.options.multiple ? \"multiple-\" + this.options.multiple : this.__id__);\n            _ui.$errorsWrapper = $(this.options.errorsWrapper).attr(\"id\", _ui.errorsWrapperId); // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly\n            _ui.lastValidationResult = [];\n            _ui.validationInformationVisible = false; // Store it in this for later\n            this._ui = _ui;\n        },\n        // Determine which element will have `parsley-error` and `parsley-success` classes\n        _manageClassHandler: function _manageClassHandler() {\n            // Class handled could also be determined by function given in Parsley options\n            if (\"string\" === typeof this.options.classHandler && $(this.options.classHandler).length) return $(this.options.classHandler); // Class handled could also be determined by function given in Parsley options\n            var $handlerFunction = this.options.classHandler; // It might also be the function name of a global function\n            if (\"string\" === typeof this.options.classHandler && \"function\" === typeof window[this.options.classHandler]) $handlerFunction = window[this.options.classHandler];\n            if (\"function\" === typeof $handlerFunction) {\n                var $handler = $handlerFunction.call(this, this); // If this function returned a valid existing DOM element, go for it\n                if (\"undefined\" !== typeof $handler && $handler.length) return $handler;\n            } else if (\"object\" === _typeof($handlerFunction) && $handlerFunction instanceof jQuery && $handlerFunction.length) return $handlerFunction;\n            else if ($handlerFunction) Utils.warn(\"The class handler `\" + $handlerFunction + \"` does not exist in DOM nor as a global JS function\");\n            return this._inputHolder();\n        },\n        _inputHolder: function _inputHolder() {\n            // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container\n            if (!this.options.multiple || this.element.nodeName === \"SELECT\") return this.$element; // But if multiple element (radio, checkbox), that would be their parent\n            return this.$element.parent();\n        },\n        _insertErrorWrapper: function _insertErrorWrapper() {\n            var $errorsContainer = this.options.errorsContainer; // Nothing to do if already inserted\n            if (0 !== this._ui.$errorsWrapper.parent().length) return this._ui.$errorsWrapper.parent();\n            if (\"string\" === typeof $errorsContainer) {\n                if ($($errorsContainer).length) return $($errorsContainer).append(this._ui.$errorsWrapper);\n                else if (\"function\" === typeof window[$errorsContainer]) $errorsContainer = window[$errorsContainer];\n                else Utils.warn(\"The errors container `\" + $errorsContainer + \"` does not exist in DOM nor as a global JS function\");\n            }\n            if (\"function\" === typeof $errorsContainer) $errorsContainer = $errorsContainer.call(this, this);\n            if (\"object\" === _typeof($errorsContainer) && $errorsContainer.length) return $errorsContainer.append(this._ui.$errorsWrapper);\n            return this._inputHolder().after(this._ui.$errorsWrapper);\n        },\n        _actualizeTriggers: function _actualizeTriggers() {\n            var _this2 = this;\n            var $toBind = this._findRelated();\n            var trigger; // Remove Parsley events already bound on this field\n            $toBind.off(\".Parsley\");\n            if (this._failedOnce) $toBind.on(Utils.namespaceEvents(this.options.triggerAfterFailure, \"Parsley\"), function() {\n                _this2._validateIfNeeded();\n            });\n            else if (trigger = Utils.namespaceEvents(this.options.trigger, \"Parsley\")) $toBind.on(trigger, function(event) {\n                _this2._validateIfNeeded(event);\n            });\n        },\n        _validateIfNeeded: function _validateIfNeeded(event) {\n            var _this3 = this;\n            // For keyup, keypress, keydown, input... events that could be a little bit obstrusive\n            // do not validate if val length < min threshold on first validation. Once field have been validated once and info\n            // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.\n            if (event && /key|input/.test(event.type)) {\n                if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold) return;\n            }\n            if (this.options.debounce) {\n                window.clearTimeout(this._debounced);\n                this._debounced = window.setTimeout(function() {\n                    return _this3.validate();\n                }, this.options.debounce);\n            } else this.validate();\n        },\n        _resetUI: function _resetUI() {\n            // Reset all event listeners\n            this._failedOnce = false;\n            this._actualizeTriggers(); // Nothing to do if UI never initialized for this field\n            if (\"undefined\" === typeof this._ui) return; // Reset all errors' li\n            this._ui.$errorsWrapper.removeClass(\"filled\").children().remove(); // Reset validation class\n            this._resetClass(); // Reset validation flags and last validation result\n            this._ui.lastValidationResult = [];\n            this._ui.validationInformationVisible = false;\n        },\n        _destroyUI: function _destroyUI() {\n            this._resetUI();\n            if (\"undefined\" !== typeof this._ui) this._ui.$errorsWrapper.remove();\n            delete this._ui;\n        },\n        _successClass: function _successClass() {\n            this._ui.validationInformationVisible = true;\n            this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);\n        },\n        _errorClass: function _errorClass() {\n            this._ui.validationInformationVisible = true;\n            this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);\n        },\n        _resetClass: function _resetClass() {\n            this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);\n        }\n    };\n    var Form = function Form(element, domOptions, options) {\n        this.__class__ = \"Form\";\n        this.element = element;\n        this.$element = $(element);\n        this.domOptions = domOptions;\n        this.options = options;\n        this.parent = window.Parsley;\n        this.fields = [];\n        this.validationResult = null;\n    };\n    var statusMapping = {\n        pending: null,\n        resolved: true,\n        rejected: false\n    };\n    Form.prototype = {\n        onSubmitValidate: function onSubmitValidate(event) {\n            var _this = this;\n            // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior\n            if (true === event.parsley) return; // If we didn't come here through a submit button, use the first one in the form\n            var submitSource = this._submitSource || this.$element.find(Utils._SubmitSelector)[0];\n            this._submitSource = null;\n            this.$element.find(\".parsley-synthetic-submit-button\").prop(\"disabled\", true);\n            if (submitSource && null !== submitSource.getAttribute(\"formnovalidate\")) return;\n            window.Parsley._remoteCache = {};\n            var promise = this.whenValidate({\n                event: event\n            });\n            if (\"resolved\" === promise.state() && false !== this._trigger(\"submit\")) ;\n            else {\n                // Rejected or pending: cancel this submit\n                event.stopImmediatePropagation();\n                event.preventDefault();\n                if (\"pending\" === promise.state()) promise.done(function() {\n                    _this._submit(submitSource);\n                });\n            }\n        },\n        onSubmitButton: function onSubmitButton(event) {\n            this._submitSource = event.currentTarget;\n        },\n        // internal\n        // _submit submits the form, this time without going through the validations.\n        // Care must be taken to \"fake\" the actual submit button being clicked.\n        _submit: function _submit(submitSource) {\n            if (false === this._trigger(\"submit\")) return; // Add submit button's data\n            if (submitSource) {\n                var $synthetic = this.$element.find(\".parsley-synthetic-submit-button\").prop(\"disabled\", false);\n                if (0 === $synthetic.length) $synthetic = $('<input class=\"parsley-synthetic-submit-button\" type=\"hidden\">').appendTo(this.$element);\n                $synthetic.attr({\n                    name: submitSource.getAttribute(\"name\"),\n                    value: submitSource.getAttribute(\"value\")\n                });\n            }\n            this.$element.trigger(_extends($.Event(\"submit\"), {\n                parsley: true\n            }));\n        },\n        // Performs validation on fields while triggering events.\n        // @returns `true` if all validations succeeds, `false`\n        // if a failure is immediately detected, or `null`\n        // if dependant on a promise.\n        // Consider using `whenValidate` instead.\n        validate: function validate(options) {\n            if (arguments.length >= 1 && !$.isPlainObject(options)) {\n                Utils.warnOnce(\"Calling validate on a parsley form without passing arguments as an object is deprecated.\");\n                var _arguments = Array.prototype.slice.call(arguments), group = _arguments[0], force = _arguments[1], event = _arguments[2];\n                options = {\n                    group: group,\n                    force: force,\n                    event: event\n                };\n            }\n            return statusMapping[this.whenValidate(options).state()];\n        },\n        whenValidate: function whenValidate() {\n            var _this2 = this, _Utils$all$done$fail$;\n            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, group = _ref.group, force = _ref.force, event = _ref.event;\n            this.submitEvent = event;\n            if (event) this.submitEvent = _extends({}, event, {\n                preventDefault: function preventDefault() {\n                    Utils.warnOnce(\"Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`\");\n                    _this2.validationResult = false;\n                }\n            });\n            this.validationResult = true; // fire validate event to eventually modify things before every validation\n            this._trigger(\"validate\"); // Refresh form DOM options and form's fields that could have changed\n            this._refreshFields();\n            var promises = this._withoutReactualizingFormOptions(function() {\n                return $.map(_this2.fields, function(field) {\n                    return field.whenValidate({\n                        force: force,\n                        group: group\n                    });\n                });\n            });\n            return (_Utils$all$done$fail$ = Utils.all(promises).done(function() {\n                _this2._trigger(\"success\");\n            }).fail(function() {\n                _this2.validationResult = false;\n                _this2.focus();\n                _this2._trigger(\"error\");\n            }).always(function() {\n                _this2._trigger(\"validated\");\n            })).pipe.apply(_Utils$all$done$fail$, _toConsumableArray(this._pipeAccordingToValidationResult()));\n        },\n        // Iterate over refreshed fields, and stop on first failure.\n        // Returns `true` if all fields are valid, `false` if a failure is detected\n        // or `null` if the result depends on an unresolved promise.\n        // Prefer using `whenValid` instead.\n        isValid: function isValid(options) {\n            if (arguments.length >= 1 && !$.isPlainObject(options)) {\n                Utils.warnOnce(\"Calling isValid on a parsley form without passing arguments as an object is deprecated.\");\n                var _arguments2 = Array.prototype.slice.call(arguments), group = _arguments2[0], force = _arguments2[1];\n                options = {\n                    group: group,\n                    force: force\n                };\n            }\n            return statusMapping[this.whenValid(options).state()];\n        },\n        // Iterate over refreshed fields and validate them.\n        // Returns a promise.\n        // A validation that immediately fails will interrupt the validations.\n        whenValid: function whenValid() {\n            var _this3 = this;\n            var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, group = _ref2.group, force = _ref2.force;\n            this._refreshFields();\n            var promises = this._withoutReactualizingFormOptions(function() {\n                return $.map(_this3.fields, function(field) {\n                    return field.whenValid({\n                        group: group,\n                        force: force\n                    });\n                });\n            });\n            return Utils.all(promises);\n        },\n        refresh: function refresh() {\n            this._refreshFields();\n            return this;\n        },\n        // Reset UI\n        reset: function reset() {\n            // Form case: emit a reset event for each field\n            for(var i = 0; i < this.fields.length; i++)this.fields[i].reset();\n            this._trigger(\"reset\");\n        },\n        // Destroy Parsley instance (+ UI)\n        destroy: function destroy() {\n            // Field case: emit destroy event to clean UI and then destroy stored instance\n            this._destroyUI(); // Form case: destroy all its fields and then destroy stored instance\n            for(var i = 0; i < this.fields.length; i++)this.fields[i].destroy();\n            this.$element.removeData(\"Parsley\");\n            this._trigger(\"destroy\");\n        },\n        _refreshFields: function _refreshFields() {\n            return this.actualizeOptions()._bindFields();\n        },\n        _bindFields: function _bindFields() {\n            var _this4 = this;\n            var oldFields = this.fields;\n            this.fields = [];\n            this.fieldsMappedById = {};\n            this._withoutReactualizingFormOptions(function() {\n                _this4.$element.find(_this4.options.inputs).not(_this4.options.excluded).not(\"[\".concat(_this4.options.namespace, \"excluded=true]\")).each(function(_, element) {\n                    var fieldInstance = new window.Parsley.Factory(element, {}, _this4); // Only add valid and not excluded `Field` and `FieldMultiple` children\n                    if (\"Field\" === fieldInstance.__class__ || \"FieldMultiple\" === fieldInstance.__class__) {\n                        var uniqueId = fieldInstance.__class__ + \"-\" + fieldInstance.__id__;\n                        if (\"undefined\" === typeof _this4.fieldsMappedById[uniqueId]) {\n                            _this4.fieldsMappedById[uniqueId] = fieldInstance;\n                            _this4.fields.push(fieldInstance);\n                        }\n                    }\n                });\n                $.each(Utils.difference(oldFields, _this4.fields), function(_, field) {\n                    field.reset();\n                });\n            });\n            return this;\n        },\n        // Internal only.\n        // Looping on a form's fields to do validation or similar\n        // will trigger reactualizing options on all of them, which\n        // in turn will reactualize the form's options.\n        // To avoid calling actualizeOptions so many times on the form\n        // for nothing, _withoutReactualizingFormOptions temporarily disables\n        // the method actualizeOptions on this form while `fn` is called.\n        _withoutReactualizingFormOptions: function _withoutReactualizingFormOptions(fn) {\n            var oldActualizeOptions = this.actualizeOptions;\n            this.actualizeOptions = function() {\n                return this;\n            };\n            var result = fn();\n            this.actualizeOptions = oldActualizeOptions;\n            return result;\n        },\n        // Internal only.\n        // Shortcut to trigger an event\n        // Returns true iff event is not interrupted and default not prevented.\n        _trigger: function _trigger(eventName) {\n            return this.trigger(\"form:\" + eventName);\n        }\n    };\n    var Constraint = function Constraint(parsleyField, name, requirements, priority, isDomConstraint) {\n        var validatorSpec = window.Parsley._validatorRegistry.validators[name];\n        var validator = new Validator(validatorSpec);\n        priority = priority || parsleyField.options[name + \"Priority\"] || validator.priority;\n        isDomConstraint = true === isDomConstraint;\n        _extends(this, {\n            validator: validator,\n            name: name,\n            requirements: requirements,\n            priority: priority,\n            isDomConstraint: isDomConstraint\n        });\n        this._parseRequirements(parsleyField.options);\n    };\n    var capitalize = function capitalize(str) {\n        var cap = str[0].toUpperCase();\n        return cap + str.slice(1);\n    };\n    Constraint.prototype = {\n        validate: function validate(value, instance) {\n            var _this$validator;\n            return (_this$validator = this.validator).validate.apply(_this$validator, [\n                value\n            ].concat(_toConsumableArray(this.requirementList), [\n                instance\n            ]));\n        },\n        _parseRequirements: function _parseRequirements(options) {\n            var _this = this;\n            this.requirementList = this.validator.parseRequirements(this.requirements, function(key) {\n                return options[_this.name + capitalize(key)];\n            });\n        }\n    };\n    var Field = function Field(field, domOptions, options, parsleyFormInstance) {\n        this.__class__ = \"Field\";\n        this.element = field;\n        this.$element = $(field); // Set parent if we have one\n        if (\"undefined\" !== typeof parsleyFormInstance) this.parent = parsleyFormInstance;\n        this.options = options;\n        this.domOptions = domOptions; // Initialize some properties\n        this.constraints = [];\n        this.constraintsByName = {};\n        this.validationResult = true; // Bind constraints\n        this._bindConstraints();\n    };\n    var statusMapping$1 = {\n        pending: null,\n        resolved: true,\n        rejected: false\n    };\n    Field.prototype = {\n        // # Public API\n        // Validate field and trigger some events for mainly `UI`\n        // @returns `true`, an array of the validators that failed, or\n        // `null` if validation is not finished. Prefer using whenValidate\n        validate: function validate(options) {\n            if (arguments.length >= 1 && !$.isPlainObject(options)) {\n                Utils.warnOnce(\"Calling validate on a parsley field without passing arguments as an object is deprecated.\");\n                options = {\n                    options: options\n                };\n            }\n            var promise = this.whenValidate(options);\n            if (!promise) return true;\n            switch(promise.state()){\n                case \"pending\":\n                    return null;\n                case \"resolved\":\n                    return true;\n                case \"rejected\":\n                    return this.validationResult;\n            }\n        },\n        // Validate field and trigger some events for mainly `UI`\n        // @returns a promise that succeeds only when all validations do\n        // or `undefined` if field is not in the given `group`.\n        whenValidate: function whenValidate() {\n            var _this$whenValid$alway, _this = this;\n            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, force = _ref.force, group = _ref.group;\n            // do not validate a field if not the same as given validation group\n            this.refresh();\n            if (group && !this._isInGroup(group)) return;\n            this.value = this.getValue(); // Field Validate event. `this.value` could be altered for custom needs\n            this._trigger(\"validate\");\n            return (_this$whenValid$alway = this.whenValid({\n                force: force,\n                value: this.value,\n                _refreshed: true\n            }).always(function() {\n                _this._reflowUI();\n            }).done(function() {\n                _this._trigger(\"success\");\n            }).fail(function() {\n                _this._trigger(\"error\");\n            }).always(function() {\n                _this._trigger(\"validated\");\n            })).pipe.apply(_this$whenValid$alway, _toConsumableArray(this._pipeAccordingToValidationResult()));\n        },\n        hasConstraints: function hasConstraints() {\n            return 0 !== this.constraints.length;\n        },\n        // An empty optional field does not need validation\n        needsValidation: function needsValidation(value) {\n            if (\"undefined\" === typeof value) value = this.getValue(); // If a field is empty and not required, it is valid\n            // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators\n            if (!value.length && !this._isRequired() && \"undefined\" === typeof this.options.validateIfEmpty) return false;\n            return true;\n        },\n        _isInGroup: function _isInGroup(group) {\n            if (Array.isArray(this.options.group)) return -1 !== $.inArray(group, this.options.group);\n            return this.options.group === group;\n        },\n        // Just validate field. Do not trigger any event.\n        // Returns `true` iff all constraints pass, `false` if there are failures,\n        // or `null` if the result can not be determined yet (depends on a promise)\n        // See also `whenValid`.\n        isValid: function isValid(options) {\n            if (arguments.length >= 1 && !$.isPlainObject(options)) {\n                Utils.warnOnce(\"Calling isValid on a parsley field without passing arguments as an object is deprecated.\");\n                var _arguments = Array.prototype.slice.call(arguments), force = _arguments[0], value = _arguments[1];\n                options = {\n                    force: force,\n                    value: value\n                };\n            }\n            var promise = this.whenValid(options);\n            if (!promise) return true;\n            return statusMapping$1[promise.state()];\n        },\n        // Just validate field. Do not trigger any event.\n        // @returns a promise that succeeds only when all validations do\n        // or `undefined` if the field is not in the given `group`.\n        // The argument `force` will force validation of empty fields.\n        // If a `value` is given, it will be validated instead of the value of the input.\n        whenValid: function whenValid() {\n            var _this2 = this;\n            var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}, _ref2$force = _ref2.force, force = _ref2$force === void 0 ? false : _ref2$force, value = _ref2.value, group = _ref2.group, _refreshed = _ref2._refreshed;\n            // Recompute options and rebind constraints to have latest changes\n            if (!_refreshed) this.refresh(); // do not validate a field if not the same as given validation group\n            if (group && !this._isInGroup(group)) return;\n            this.validationResult = true; // A field without constraint is valid\n            if (!this.hasConstraints()) return $.when(); // Value could be passed as argument, needed to add more power to 'field:validate'\n            if (\"undefined\" === typeof value || null === value) value = this.getValue();\n            if (!this.needsValidation(value) && true !== force) return $.when();\n            var groupedConstraints = this._getGroupedConstraints();\n            var promises = [];\n            $.each(groupedConstraints, function(_, constraints) {\n                // Process one group of constraints at a time, we validate the constraints\n                // and combine the promises together.\n                var promise = Utils.all($.map(constraints, function(constraint) {\n                    return _this2._validateConstraint(value, constraint);\n                }));\n                promises.push(promise);\n                if (promise.state() === \"rejected\") return false; // Interrupt processing if a group has already failed\n            });\n            return Utils.all(promises);\n        },\n        // @returns a promise\n        _validateConstraint: function _validateConstraint(value, constraint) {\n            var _this3 = this;\n            var result = constraint.validate(value, this); // Map false to a failed promise\n            if (false === result) result = $.Deferred().reject(); // Make sure we return a promise and that we record failures\n            return Utils.all([\n                result\n            ]).fail(function(errorMessage) {\n                if (!(_this3.validationResult instanceof Array)) _this3.validationResult = [];\n                _this3.validationResult.push({\n                    assert: constraint,\n                    errorMessage: \"string\" === typeof errorMessage && errorMessage\n                });\n            });\n        },\n        // @returns Parsley field computed value that could be overrided or configured in DOM\n        getValue: function getValue() {\n            var value; // Value could be overriden in DOM or with explicit options\n            if (\"function\" === typeof this.options.value) value = this.options.value(this);\n            else if (\"undefined\" !== typeof this.options.value) value = this.options.value;\n            else value = this.$element.val(); // Handle wrong DOM or configurations\n            if (\"undefined\" === typeof value || null === value) return \"\";\n            return this._handleWhitespace(value);\n        },\n        // Reset UI\n        reset: function reset() {\n            this._resetUI();\n            return this._trigger(\"reset\");\n        },\n        // Destroy Parsley instance (+ UI)\n        destroy: function destroy() {\n            // Field case: emit destroy event to clean UI and then destroy stored instance\n            this._destroyUI();\n            this.$element.removeData(\"Parsley\");\n            this.$element.removeData(\"FieldMultiple\");\n            this._trigger(\"destroy\");\n        },\n        // Actualize options and rebind constraints\n        refresh: function refresh() {\n            this._refreshConstraints();\n            return this;\n        },\n        _refreshConstraints: function _refreshConstraints() {\n            return this.actualizeOptions()._bindConstraints();\n        },\n        refreshConstraints: function refreshConstraints() {\n            Utils.warnOnce(\"Parsley's refreshConstraints is deprecated. Please use refresh\");\n            return this.refresh();\n        },\n        /**\n    * Add a new constraint to a field\n    *\n    * @param {String}   name\n    * @param {Mixed}    requirements      optional\n    * @param {Number}   priority          optional\n    * @param {Boolean}  isDomConstraint   optional\n    */ addConstraint: function addConstraint(name, requirements, priority, isDomConstraint) {\n            if (window.Parsley._validatorRegistry.validators[name]) {\n                var constraint = new Constraint(this, name, requirements, priority, isDomConstraint); // if constraint already exist, delete it and push new version\n                if (\"undefined\" !== this.constraintsByName[constraint.name]) this.removeConstraint(constraint.name);\n                this.constraints.push(constraint);\n                this.constraintsByName[constraint.name] = constraint;\n            }\n            return this;\n        },\n        // Remove a constraint\n        removeConstraint: function removeConstraint(name) {\n            for(var i = 0; i < this.constraints.length; i++)if (name === this.constraints[i].name) {\n                this.constraints.splice(i, 1);\n                break;\n            }\n            delete this.constraintsByName[name];\n            return this;\n        },\n        // Update a constraint (Remove + re-add)\n        updateConstraint: function updateConstraint(name, parameters, priority) {\n            return this.removeConstraint(name).addConstraint(name, parameters, priority);\n        },\n        // # Internals\n        // Internal only.\n        // Bind constraints from config + options + DOM\n        _bindConstraints: function _bindConstraints() {\n            var constraints = [];\n            var constraintsByName = {}; // clean all existing DOM constraints to only keep javascript user constraints\n            for(var i = 0; i < this.constraints.length; i++)if (false === this.constraints[i].isDomConstraint) {\n                constraints.push(this.constraints[i]);\n                constraintsByName[this.constraints[i].name] = this.constraints[i];\n            }\n            this.constraints = constraints;\n            this.constraintsByName = constraintsByName; // then re-add Parsley DOM-API constraints\n            for(var name in this.options)this.addConstraint(name, this.options[name], undefined, true);\n             // finally, bind special HTML5 constraints\n            return this._bindHtml5Constraints();\n        },\n        // Internal only.\n        // Bind specific HTML5 constraints to be HTML5 compliant\n        _bindHtml5Constraints: function _bindHtml5Constraints() {\n            // html5 required\n            if (null !== this.element.getAttribute(\"required\")) this.addConstraint(\"required\", true, undefined, true); // html5 pattern\n            if (null !== this.element.getAttribute(\"pattern\")) this.addConstraint(\"pattern\", this.element.getAttribute(\"pattern\"), undefined, true); // range\n            var min = this.element.getAttribute(\"min\");\n            var max = this.element.getAttribute(\"max\");\n            if (null !== min && null !== max) this.addConstraint(\"range\", [\n                min,\n                max\n            ], undefined, true); // HTML5 min\n            else if (null !== min) this.addConstraint(\"min\", min, undefined, true); // HTML5 max\n            else if (null !== max) this.addConstraint(\"max\", max, undefined, true); // length\n            if (null !== this.element.getAttribute(\"minlength\") && null !== this.element.getAttribute(\"maxlength\")) this.addConstraint(\"length\", [\n                this.element.getAttribute(\"minlength\"),\n                this.element.getAttribute(\"maxlength\")\n            ], undefined, true); // HTML5 minlength\n            else if (null !== this.element.getAttribute(\"minlength\")) this.addConstraint(\"minlength\", this.element.getAttribute(\"minlength\"), undefined, true); // HTML5 maxlength\n            else if (null !== this.element.getAttribute(\"maxlength\")) this.addConstraint(\"maxlength\", this.element.getAttribute(\"maxlength\"), undefined, true); // html5 types\n            var type = Utils.getType(this.element); // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise\n            if (\"number\" === type) return this.addConstraint(\"type\", [\n                \"number\",\n                {\n                    step: this.element.getAttribute(\"step\") || \"1\",\n                    base: min || this.element.getAttribute(\"value\")\n                }\n            ], undefined, true); // Regular other HTML5 supported types\n            else if (/^(email|url|range|date)$/i.test(type)) return this.addConstraint(\"type\", type, undefined, true);\n            return this;\n        },\n        // Internal only.\n        // Field is required if have required constraint without `false` value\n        _isRequired: function _isRequired() {\n            if (\"undefined\" === typeof this.constraintsByName.required) return false;\n            return false !== this.constraintsByName.required.requirements;\n        },\n        // Internal only.\n        // Shortcut to trigger an event\n        _trigger: function _trigger(eventName) {\n            return this.trigger(\"field:\" + eventName);\n        },\n        // Internal only\n        // Handles whitespace in a value\n        // Use `data-parsley-whitespace=\"squish\"` to auto squish input value\n        // Use `data-parsley-whitespace=\"trim\"` to auto trim input value\n        _handleWhitespace: function _handleWhitespace(value) {\n            if (true === this.options.trimValue) Utils.warnOnce('data-parsley-trim-value=\"true\" is deprecated, please use data-parsley-whitespace=\"trim\"');\n            if (\"squish\" === this.options.whitespace) value = value.replace(/\\s{2,}/g, \" \");\n            if (\"trim\" === this.options.whitespace || \"squish\" === this.options.whitespace || true === this.options.trimValue) value = Utils.trimString(value);\n            return value;\n        },\n        _isDateInput: function _isDateInput() {\n            var c = this.constraintsByName.type;\n            return c && c.requirements === \"date\";\n        },\n        // Internal only.\n        // Returns the constraints, grouped by descending priority.\n        // The result is thus an array of arrays of constraints.\n        _getGroupedConstraints: function _getGroupedConstraints() {\n            if (false === this.options.priorityEnabled) return [\n                this.constraints\n            ];\n            var groupedConstraints = [];\n            var index = {}; // Create array unique of priorities\n            for(var i = 0; i < this.constraints.length; i++){\n                var p = this.constraints[i].priority;\n                if (!index[p]) groupedConstraints.push(index[p] = []);\n                index[p].push(this.constraints[i]);\n            } // Sort them by priority DESC\n            groupedConstraints.sort(function(a, b) {\n                return b[0].priority - a[0].priority;\n            });\n            return groupedConstraints;\n        }\n    };\n    var Multiple = function Multiple() {\n        this.__class__ = \"FieldMultiple\";\n    };\n    Multiple.prototype = {\n        // Add new `$element` sibling for multiple field\n        addElement: function addElement($element) {\n            this.$elements.push($element);\n            return this;\n        },\n        // See `Field._refreshConstraints()`\n        _refreshConstraints: function _refreshConstraints() {\n            var fieldConstraints;\n            this.constraints = []; // Select multiple special treatment\n            if (this.element.nodeName === \"SELECT\") {\n                this.actualizeOptions()._bindConstraints();\n                return this;\n            } // Gather all constraints for each input in the multiple group\n            for(var i = 0; i < this.$elements.length; i++){\n                // Check if element have not been dynamically removed since last binding\n                if (!$(\"html\").has(this.$elements[i]).length) {\n                    this.$elements.splice(i, 1);\n                    continue;\n                }\n                fieldConstraints = this.$elements[i].data(\"FieldMultiple\")._refreshConstraints().constraints;\n                for(var j = 0; j < fieldConstraints.length; j++)this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);\n            }\n            return this;\n        },\n        // See `Field.getValue()`\n        getValue: function getValue() {\n            // Value could be overriden in DOM\n            if (\"function\" === typeof this.options.value) return this.options.value(this);\n            else if (\"undefined\" !== typeof this.options.value) return this.options.value; // Radio input case\n            if (this.element.nodeName === \"INPUT\") {\n                var type = Utils.getType(this.element);\n                if (type === \"radio\") return this._findRelated().filter(\":checked\").val() || \"\"; // checkbox input case\n                if (type === \"checkbox\") {\n                    var values = [];\n                    this._findRelated().filter(\":checked\").each(function() {\n                        values.push($(this).val());\n                    });\n                    return values;\n                }\n            } // Select multiple case\n            if (this.element.nodeName === \"SELECT\" && null === this.$element.val()) return []; // Default case that should never happen\n            return this.$element.val();\n        },\n        _init: function _init() {\n            this.$elements = [\n                this.$element\n            ];\n            return this;\n        }\n    };\n    var Factory = function Factory(element, options, parsleyFormInstance) {\n        this.element = element;\n        this.$element = $(element); // If the element has already been bound, returns its saved Parsley instance\n        var savedparsleyFormInstance = this.$element.data(\"Parsley\");\n        if (savedparsleyFormInstance) {\n            // If the saved instance has been bound without a Form parent and there is one given in this call, add it\n            if (\"undefined\" !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {\n                savedparsleyFormInstance.parent = parsleyFormInstance;\n                savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);\n            }\n            if (\"object\" === _typeof(options)) _extends(savedparsleyFormInstance.options, options);\n            return savedparsleyFormInstance;\n        } // Parsley must be instantiated with a DOM element or jQuery $element\n        if (!this.$element.length) throw new Error(\"You must bind Parsley on an existing element.\");\n        if (\"undefined\" !== typeof parsleyFormInstance && \"Form\" !== parsleyFormInstance.__class__) throw new Error(\"Parent instance must be a Form instance\");\n        this.parent = parsleyFormInstance || window.Parsley;\n        return this.init(options);\n    };\n    Factory.prototype = {\n        init: function init(options) {\n            this.__class__ = \"Parsley\";\n            this.__version__ = \"2.9.2\";\n            this.__id__ = Utils.generateID(); // Pre-compute options\n            this._resetOptions(options); // A Form instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute\n            if (this.element.nodeName === \"FORM\" || Utils.checkAttr(this.element, this.options.namespace, \"validate\") && !this.$element.is(this.options.inputs)) return this.bind(\"parsleyForm\"); // Every other element is bound as a `Field` or `FieldMultiple`\n            return this.isMultiple() ? this.handleMultiple() : this.bind(\"parsleyField\");\n        },\n        isMultiple: function isMultiple() {\n            var type = Utils.getType(this.element);\n            return type === \"radio\" || type === \"checkbox\" || this.element.nodeName === \"SELECT\" && null !== this.element.getAttribute(\"multiple\");\n        },\n        // Multiples fields are a real nightmare :(\n        // Maybe some refactoring would be appreciated here...\n        handleMultiple: function handleMultiple() {\n            var _this = this;\n            var name;\n            var parsleyMultipleInstance; // Handle multiple name\n            this.options.multiple = this.options.multiple || (name = this.element.getAttribute(\"name\")) || this.element.getAttribute(\"id\"); // Special select multiple input\n            if (this.element.nodeName === \"SELECT\" && null !== this.element.getAttribute(\"multiple\")) {\n                this.options.multiple = this.options.multiple || this.__id__;\n                return this.bind(\"parsleyFieldMultiple\"); // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it\n            } else if (!this.options.multiple) {\n                Utils.warn(\"To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.\", this.$element);\n                return this;\n            } // Remove special chars\n            this.options.multiple = this.options.multiple.replace(/(:|\\.|\\[|\\]|\\{|\\}|\\$)/g, \"\"); // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name\n            if (name) $('input[name=\"' + name + '\"]').each(function(i, input) {\n                var type = Utils.getType(input);\n                if (type === \"radio\" || type === \"checkbox\") input.setAttribute(_this.options.namespace + \"multiple\", _this.options.multiple);\n            });\n             // Check here if we don't already have a related multiple instance saved\n            var $previouslyRelated = this._findRelated();\n            for(var i = 0; i < $previouslyRelated.length; i++){\n                parsleyMultipleInstance = $($previouslyRelated.get(i)).data(\"Parsley\");\n                if (\"undefined\" !== typeof parsleyMultipleInstance) {\n                    if (!this.$element.data(\"FieldMultiple\")) parsleyMultipleInstance.addElement(this.$element);\n                    break;\n                }\n            } // Create a secret Field instance for every multiple field. It will be stored in `data('FieldMultiple')`\n            // And will be useful later to access classic `Field` stuff while being in a `FieldMultiple` instance\n            this.bind(\"parsleyField\", true);\n            return parsleyMultipleInstance || this.bind(\"parsleyFieldMultiple\");\n        },\n        // Return proper `Form`, `Field` or `FieldMultiple`\n        bind: function bind(type, doNotStore) {\n            var parsleyInstance;\n            switch(type){\n                case \"parsleyForm\":\n                    parsleyInstance = $.extend(new Form(this.element, this.domOptions, this.options), new Base(), window.ParsleyExtend)._bindFields();\n                    break;\n                case \"parsleyField\":\n                    parsleyInstance = $.extend(new Field(this.element, this.domOptions, this.options, this.parent), new Base(), window.ParsleyExtend);\n                    break;\n                case \"parsleyFieldMultiple\":\n                    parsleyInstance = $.extend(new Field(this.element, this.domOptions, this.options, this.parent), new Multiple(), new Base(), window.ParsleyExtend)._init();\n                    break;\n                default:\n                    throw new Error(type + \"is not a supported Parsley type\");\n            }\n            if (this.options.multiple) Utils.setAttr(this.element, this.options.namespace, \"multiple\", this.options.multiple);\n            if (\"undefined\" !== typeof doNotStore) {\n                this.$element.data(\"FieldMultiple\", parsleyInstance);\n                return parsleyInstance;\n            } // Store the freshly bound instance in a DOM element for later access using jQuery `data()`\n            this.$element.data(\"Parsley\", parsleyInstance); // Tell the world we have a new Form or Field instance!\n            parsleyInstance._actualizeTriggers();\n            parsleyInstance._trigger(\"init\");\n            return parsleyInstance;\n        }\n    };\n    var vernums = $.fn.jquery.split(\".\");\n    if (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) throw \"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.\";\n    if (!vernums.forEach) Utils.warn(\"Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim\");\n     // Inherit `on`, `off` & `trigger` to Parsley:\n    var Parsley = _extends(new Base(), {\n        element: document,\n        $element: $(document),\n        actualizeOptions: null,\n        _resetOptions: null,\n        Factory: Factory,\n        version: \"2.9.2\"\n    }); // Supplement Field and Form with Base\n    // This way, the constructors will have access to those methods\n    _extends(Field.prototype, UI.Field, Base.prototype);\n    _extends(Form.prototype, UI.Form, Base.prototype); // Inherit actualizeOptions and _resetOptions:\n    _extends(Factory.prototype, Base.prototype); // ### jQuery API\n    // `$('.elem').parsley(options)` or `$('.elem').psly(options)`\n    $.fn.parsley = $.fn.psly = function(options) {\n        if (this.length > 1) {\n            var instances = [];\n            this.each(function() {\n                instances.push($(this).parsley(options));\n            });\n            return instances;\n        } // Return undefined if applied to non existing DOM element\n        if (this.length == 0) return;\n        return new Factory(this[0], options);\n    }; // ### Field and Form extension\n    // Ensure the extension is now defined if it wasn't previously\n    if (\"undefined\" === typeof window.ParsleyExtend) window.ParsleyExtend = {}; // ### Parsley config\n    // Inherit from ParsleyDefault, and copy over any existing values\n    Parsley.options = _extends(Utils.objectCreate(Defaults), window.ParsleyConfig);\n    window.ParsleyConfig = Parsley.options; // Old way of accessing global options\n    // ### Globals\n    window.Parsley = window.psly = Parsley;\n    Parsley.Utils = Utils;\n    window.ParsleyUtils = {};\n    $.each(Utils, function(key, value) {\n        if (\"function\" === typeof value) window.ParsleyUtils[key] = function() {\n            Utils.warnOnce(\"Accessing `window.ParsleyUtils` is deprecated. Use `window.Parsley.Utils` instead.\");\n            return Utils[key].apply(Utils, arguments);\n        };\n    }); // ### Define methods that forward to the registry, and deprecate all access except through window.Parsley\n    var registry = window.Parsley._validatorRegistry = new ValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);\n    window.ParsleyValidator = {};\n    $.each(\"setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator hasValidator\".split(\" \"), function(i, method) {\n        window.Parsley[method] = function() {\n            return registry[method].apply(registry, arguments);\n        };\n        window.ParsleyValidator[method] = function() {\n            var _window$Parsley;\n            Utils.warnOnce(\"Accessing the method '\".concat(method, \"' through Validator is deprecated. Simply call 'window.Parsley.\").concat(method, \"(...)'\"));\n            return (_window$Parsley = window.Parsley)[method].apply(_window$Parsley, arguments);\n        };\n    }); // ### UI\n    // Deprecated global object\n    window.Parsley.UI = UI;\n    window.ParsleyUI = {\n        removeError: function removeError(instance, name, doNotUpdateClass) {\n            var updateClass = true !== doNotUpdateClass;\n            Utils.warnOnce(\"Accessing UI is deprecated. Call 'removeError' on the instance directly. Please comment in issue 1073 as to your need to call this method.\");\n            return instance.removeError(name, {\n                updateClass: updateClass\n            });\n        },\n        getErrorsMessages: function getErrorsMessages(instance) {\n            Utils.warnOnce(\"Accessing UI is deprecated. Call 'getErrorsMessages' on the instance directly.\");\n            return instance.getErrorsMessages();\n        }\n    };\n    $.each(\"addError updateError\".split(\" \"), function(i, method) {\n        window.ParsleyUI[method] = function(instance, name, message, assert, doNotUpdateClass) {\n            var updateClass = true !== doNotUpdateClass;\n            Utils.warnOnce(\"Accessing UI is deprecated. Call '\".concat(method, \"' on the instance directly. Please comment in issue 1073 as to your need to call this method.\"));\n            return instance[method](name, {\n                message: message,\n                assert: assert,\n                updateClass: updateClass\n            });\n        };\n    }); // ### PARSLEY auto-binding\n    // Prevent it by setting `ParsleyConfig.autoBind` to `false`\n    if (false !== window.ParsleyConfig.autoBind) $(function() {\n        // Works only on `data-parsley-validate`.\n        if ($(\"[data-parsley-validate]\").length) $(\"[data-parsley-validate]\").parsley();\n    });\n    var o = $({});\n    var deprecated = function deprecated() {\n        Utils.warnOnce(\"Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley\");\n    }; // Returns an event handler that calls `fn` with the arguments it expects\n    function adapt(fn, context) {\n        // Store to allow unbinding\n        if (!fn.parsleyAdaptedCallback) fn.parsleyAdaptedCallback = function() {\n            var args = Array.prototype.slice.call(arguments, 0);\n            args.unshift(this);\n            fn.apply(context || o, args);\n        };\n        return fn.parsleyAdaptedCallback;\n    }\n    var eventPrefix = \"parsley:\"; // Converts 'parsley:form:validate' into 'form:validate'\n    function eventName(name) {\n        if (name.lastIndexOf(eventPrefix, 0) === 0) return name.substr(eventPrefix.length);\n        return name;\n    } // $.listen is deprecated. Use Parsley.on instead.\n    $.listen = function(name, callback) {\n        var context;\n        deprecated();\n        if (\"object\" === _typeof(arguments[1]) && \"function\" === typeof arguments[2]) {\n            context = arguments[1];\n            callback = arguments[2];\n        }\n        if (\"function\" !== typeof callback) throw new Error(\"Wrong parameters\");\n        window.Parsley.on(eventName(name), adapt(callback, context));\n    };\n    $.listenTo = function(instance, name, fn) {\n        deprecated();\n        if (!(instance instanceof Field) && !(instance instanceof Form)) throw new Error(\"Must give Parsley instance\");\n        if (\"string\" !== typeof name || \"function\" !== typeof fn) throw new Error(\"Wrong parameters\");\n        instance.on(eventName(name), adapt(fn));\n    };\n    $.unsubscribe = function(name, fn) {\n        deprecated();\n        if (\"string\" !== typeof name || \"function\" !== typeof fn) throw new Error(\"Wrong arguments\");\n        window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);\n    };\n    $.unsubscribeTo = function(instance, name) {\n        deprecated();\n        if (!(instance instanceof Field) && !(instance instanceof Form)) throw new Error(\"Must give Parsley instance\");\n        instance.off(eventName(name));\n    };\n    $.unsubscribeAll = function(name) {\n        deprecated();\n        window.Parsley.off(eventName(name));\n        $(\"form,input,textarea,select\").each(function() {\n            var instance = $(this).data(\"Parsley\");\n            if (instance) instance.off(eventName(name));\n        });\n    }; // $.emit is deprecated. Use jQuery events instead.\n    $.emit = function(name, instance) {\n        var _instance;\n        deprecated();\n        var instanceGiven = instance instanceof Field || instance instanceof Form;\n        var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);\n        args.unshift(eventName(name));\n        if (!instanceGiven) instance = window.Parsley;\n        (_instance = instance).trigger.apply(_instance, _toConsumableArray(args));\n    };\n    $.extend(true, Parsley, {\n        asyncValidators: {\n            \"default\": {\n                fn: function fn(xhr) {\n                    // By default, only status 2xx are deemed successful.\n                    // Note: we use status instead of state() because responses with status 200\n                    // but invalid messages (e.g. an empty body for content type set to JSON) will\n                    // result in state() === 'rejected'.\n                    return xhr.status >= 200 && xhr.status < 300;\n                },\n                url: false\n            },\n            reverse: {\n                fn: function fn(xhr) {\n                    // If reverse option is set, a failing ajax request is considered successful\n                    return xhr.status < 200 || xhr.status >= 300;\n                },\n                url: false\n            }\n        },\n        addAsyncValidator: function addAsyncValidator(name, fn, url, options) {\n            Parsley.asyncValidators[name] = {\n                fn: fn,\n                url: url || false,\n                options: options || {}\n            };\n            return this;\n        }\n    });\n    Parsley.addValidator(\"remote\", {\n        requirementType: {\n            \"\": \"string\",\n            \"validator\": \"string\",\n            \"reverse\": \"boolean\",\n            \"options\": \"object\"\n        },\n        validateString: function validateString(value, url, options, instance) {\n            var data = {};\n            var ajaxOptions;\n            var csr;\n            var validator = options.validator || (true === options.reverse ? \"reverse\" : \"default\");\n            if (\"undefined\" === typeof Parsley.asyncValidators[validator]) throw new Error(\"Calling an undefined async validator: `\" + validator + \"`\");\n            url = Parsley.asyncValidators[validator].url || url; // Fill current value\n            if (url.indexOf(\"{value}\") > -1) url = url.replace(\"{value}\", encodeURIComponent(value));\n            else data[instance.element.getAttribute(\"name\") || instance.element.getAttribute(\"id\")] = value;\n             // Merge options passed in from the function with the ones in the attribute\n            var remoteOptions = $.extend(true, options.options || {}, Parsley.asyncValidators[validator].options); // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`\n            ajaxOptions = $.extend(true, {}, {\n                url: url,\n                data: data,\n                type: \"GET\"\n            }, remoteOptions); // Generate store key based on ajax options\n            instance.trigger(\"field:ajaxoptions\", instance, ajaxOptions);\n            csr = $.param(ajaxOptions); // Initialise querry cache\n            if (\"undefined\" === typeof Parsley._remoteCache) Parsley._remoteCache = {}; // Try to retrieve stored xhr\n            var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);\n            var handleXhr = function handleXhr() {\n                var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);\n                if (!result) result = $.Deferred().reject();\n                return $.when(result);\n            };\n            return xhr.then(handleXhr, handleXhr);\n        },\n        priority: -1\n    });\n    Parsley.on(\"form:submit\", function() {\n        Parsley._remoteCache = {};\n    });\n    Base.prototype.addAsyncValidator = function() {\n        Utils.warnOnce(\"Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`\");\n        return Parsley.addAsyncValidator.apply(Parsley, arguments);\n    };\n    // This is included with the Parsley library itself,\n    Parsley.addMessages(\"en\", {\n        defaultMessage: \"This value seems to be invalid.\",\n        type: {\n            email: \"This value should be a valid email.\",\n            url: \"This value should be a valid url.\",\n            number: \"This value should be a valid number.\",\n            integer: \"This value should be a valid integer.\",\n            digits: \"This value should be digits.\",\n            alphanum: \"This value should be alphanumeric.\"\n        },\n        notblank: \"This value should not be blank.\",\n        required: \"This value is required.\",\n        pattern: \"This value seems to be invalid.\",\n        min: \"This value should be greater than or equal to %s.\",\n        max: \"This value should be lower than or equal to %s.\",\n        range: \"This value should be between %s and %s.\",\n        minlength: \"This value is too short. It should have %s characters or more.\",\n        maxlength: \"This value is too long. It should have %s characters or fewer.\",\n        length: \"This value length is invalid. It should be between %s and %s characters long.\",\n        mincheck: \"You must select at least %s choices.\",\n        maxcheck: \"You must select %s choices or fewer.\",\n        check: \"You must select between %s and %s choices.\",\n        equalto: \"This value should be the same.\",\n        euvatin: \"It's not a valid VAT Identification Number.\"\n    });\n    Parsley.setLocale(\"en\");\n    function InputEvent() {\n        var _this = this;\n        var globals = window || $parcel$global; // Slightly odd way construct our object. This way methods are force bound.\n        // Used to test for duplicate library.\n        _extends(this, {\n            // For browsers that do not support isTrusted, assumes event is native.\n            isNativeEvent: function isNativeEvent(evt) {\n                return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n            },\n            fakeInputEvent: function fakeInputEvent(evt) {\n                if (_this.isNativeEvent(evt)) $(evt.target).trigger(\"input\");\n            },\n            misbehaves: function misbehaves(evt) {\n                if (_this.isNativeEvent(evt)) {\n                    _this.behavesOk(evt);\n                    $(document).on(\"change.inputevent\", evt.data.selector, _this.fakeInputEvent);\n                    _this.fakeInputEvent(evt);\n                }\n            },\n            behavesOk: function behavesOk(evt) {\n                if (_this.isNativeEvent(evt)) $(document) // Simply unbinds the testing handler\n                .off(\"input.inputevent\", evt.data.selector, _this.behavesOk).off(\"change.inputevent\", evt.data.selector, _this.misbehaves);\n            },\n            // Bind the testing handlers\n            install: function install() {\n                if (globals.inputEventPatched) return;\n                globals.inputEventPatched = \"0.0.3\";\n                for(var _i = 0, _arr = [\n                    \"select\",\n                    'input[type=\"checkbox\"]',\n                    'input[type=\"radio\"]',\n                    'input[type=\"file\"]'\n                ]; _i < _arr.length; _i++){\n                    var selector = _arr[_i];\n                    $(document).on(\"input.inputevent\", selector, {\n                        selector: selector\n                    }, _this.behavesOk).on(\"change.inputevent\", selector, {\n                        selector: selector\n                    }, _this.misbehaves);\n                }\n            },\n            uninstall: function uninstall() {\n                delete globals.inputEventPatched;\n                $(document).off(\".inputevent\");\n            }\n        });\n    }\n    var inputevent = new InputEvent();\n    inputevent.install();\n    return Parsley;\n});\n\n});\n\nparcelRegister(\"7Wrxr\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $5c834fb69dc46bb2$export$2e2bcd8739ae039; });\n\nvar $hEfjX = parcelRequire(\"hEfjX\");\n\nvar $fZPIc = parcelRequire(\"fZPIc\");\nclass $5c834fb69dc46bb2$export$2e2bcd8739ae039 {\n    constructor(){}\n    load(html, callback) {\n        let $images = $(html).find(\"img:not([data-lazy])\");\n        let counter = $images.length;\n        if (counter == 0) callback();\n        else {\n            let loaded = 0;\n            $images.each(function(index) {\n                let src = \"currentSrc\" in this ? this.currentSrc : this.src;\n                let $img = $(\"<img />\");\n                let onComplete = function() {\n                    loaded++;\n                    if (loaded >= counter) callback();\n                };\n                $img.attr(\"src\", src).on(\"load\", onComplete).on(\"error\", onComplete);\n            });\n        }\n    }\n    lazy(el) {\n        return new Promise(function(resolve) {\n            $(el).find(\"[data-lazy-src]:not(.loaded)\").each(function() {\n                let $this = $(this);\n                if ($this.parent(\"video\").length > 0) {\n                    $this.attr(\"src\", $this.data(\"lazy-src\")).addClass(\"loaded\");\n                    $this.parent(\"video\")[0].load();\n                    $this.parent(\"video\")[0].addEventListener(\"canplay\", ()=>{\n                        $this.parents().find(\"[data-lazy-placeholder]\").addClass(\"loaded\");\n                        $this.parent(\"video\").addClass(\"loaded\");\n                        window.appEvent.trigger(\"resize\");\n                    }, false);\n                } else {\n                    (0, $hEfjX.gsap).set($this, {\n                        opacity: 0\n                    });\n                    if ($this.parent(\".js-replace-image\").length) (0, $hEfjX.gsap).set($this.parent(\".js-replace-image\"), {\n                        opacity: 0\n                    });\n                    if ($this.attr(\"loading\") == \"lazy\") $this.attr(\"loading\", \"eager\");\n                    $this.attr(\"src\", $this.data(\"lazy-src\")).addClass(\"loaded\");\n                    $this[0].onload = function() {\n                        console.log($(this).attr(\"src\") + \" loaded\");\n                        (0, $hEfjX.gsap).to($this, .3, {\n                            opacity: 1,\n                            onComplete: function() {}\n                        });\n                        if ($this.parent(\".js-replace-image\").length) {\n                            (0, $fZPIc.default)($this.parent(\".js-replace-image\").parent());\n                            (0, $hEfjX.gsap).to($this.parent(\".js-replace-image\"), .3, {\n                                opacity: 1,\n                                onComplete: function() {}\n                            });\n                        }\n                        resolve(true);\n                    };\n                }\n            });\n        });\n    }\n}\n\n});\nparcelRegister(\"fZPIc\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $ba54aa668a07f85a$export$2e2bcd8739ae039; });\nfunction $ba54aa668a07f85a$export$2e2bcd8739ae039($container) {\n    let timeout = false;\n    $container = $container || $(\"body\");\n    $container.find(\".js-replace-image:not(.jsImageReplaced)\").each(function(index) {\n        let image = $(this).find(\"img\")[0];\n        if (image != undefined) {\n            let $this = $(this);\n            let src = \"currentSrc\" in image ? image.currentSrc : image.src;\n            if (src == undefined || src == \"\" || src == null) {\n                if (timeout) window.clearTimeout(timeout);\n                timeout = window.setTimeout(function() {\n                    $ba54aa668a07f85a$export$2e2bcd8739ae039($('[data-barba=\"container\"]:last-of-type'));\n                }, 100);\n            } else {\n                $this.css(\"background-image\", \"url(\" + src + \")\");\n                $this.addClass(\"jsImageReplaced\");\n            }\n        }\n    });\n}\n\n});\n\n\nparcelRegister(\"eUKxC\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $adba65cb43c7c5ba$export$2e2bcd8739ae039; });\n\nvar $hEfjX = parcelRequire(\"hEfjX\");\nfunction $adba65cb43c7c5ba$export$2e2bcd8739ae039(timing) {\n    let target = $(\"*[data-barba-introductionscreen]\");\n    target;\n    this.init = function() {\n        if (window.dev) {\n            $(target).remove();\n            return;\n        }\n        if (target) {\n            let fade = (0, $hEfjX.gsap).timeline({\n                onStart: ()=>{\n                    window.scrollAnimation.update();\n                },\n                onComplete: ()=>{\n                    $(target).remove();\n                    $(\"body\").addClass(\"loaded\");\n                },\n                onUpdate: function() {\n                //borderTimeline.progress(this.progress())\n                }\n            });\n            fade.to(\"#circle-background\", {\n                duration: 1.4,\n                strokeDashoffset: 0,\n                ease: \"none\"\n            }, \"drawing\");\n            fade.to(\"#logo-baseline *\", {\n                duration: .25,\n                filter: \"blur(0)\",\n                autoAlpha: 1,\n                ease: \"power2.inOut\",\n                stagger: .1\n            }, \"drawing\");\n            fade.to(\"#logo-letter-a,#logo-letter-n\", {\n                duration: 1,\n                strokeDashoffset: 0,\n                stagger: .4,\n                ease: \"power1.inOut\"\n            }, \"drawing\");\n            /*fade.to('#circle-background', {\n        fill: '#ffffff',\n        ease: 'power1.inOut',\n        duration: .45\n      }, 'showColor')*/ fade.to(\"#introduction-screen\", {\n                backgroundColor: \"#FFFFFF\",\n                ease: \"power1.inOut\",\n                duration: .45,\n                delay: .2\n            }, \"invert\");\n            fade.to(\"#circle-background\", {\n                fill: \"#000000\",\n                ease: \" power1.inOut\",\n                duration: .45,\n                delay: .2\n            }, \"invert\");\n            fade.to(\"#logo-baseline *\", {\n                fill: \"#000000\",\n                ease: \"power1.inOut\",\n                duration: .45,\n                delay: .2\n            }, \"invert\");\n            fade.to(\"#logo-letter-a,#logo-letter-n\", {\n                stroke: \"#FFFFFF\",\n                ease: \"power1.inOut\",\n                duration: .6,\n                delay: .2\n            }, \"invert\");\n            fade.to(\"#introduction-screen\", {\n                autoAlpha: 0,\n                duration: .8,\n                ease: \"power2.inOut\",\n                onStart: ()=>{\n                    appEvent.trigger(\"app:threejsAnimation:start\");\n                }\n            }, \"hideLoader\");\n        } else return false;\n    };\n    this.simpleInit = function() {\n        (0, $hEfjX.gsap).to(\"#introduction-screen\", {\n            autoAlpha: 0,\n            duration: .6,\n            ease: \"power2.out\",\n            onStart: ()=>{\n                appEvent.trigger(\"app:threejsAnimation:start\");\n                $(\"#scene\").css(\"z-index\", 2);\n            },\n            onComplete: ()=>{\n                $(\"#introduction-screen\").remove();\n            }\n        }, \"hideLoader\");\n    };\n}\n\n});\n\n\n\n//# sourceMappingURL=barba.922145b6.js.map\n","import barbaRouter from '@barba/router';\nimport barba from '@barba/core';\n//import FancyComponent from \"../components/FancyComponent\";\n\n/**************************************************/\nwindow.barbaInstance = barba;\nwindow.barbaRouter = barbaRouter;\n/**************************************************/\nimport './transitions/default.js';\n\n/**************************************************/\nimport Router from \"./router.js\";\nwindow.appRouter = new Router();\n/**************************************************/\n\n// app event\nimport AppEventComponent from './components/AppEventComponent';\nwindow.appEvent = new AppEventComponent();\n\n// form\nimport FormComponent from './components/FormComponent';\nwindow.formComponent = new FormComponent();\n\nimport FormMessage from './views/formMessage.js';\nwindow.formMessage = new FormMessage();\n\n\n/**************************************************/\nimport 'parsleyjs';\nimport ImageLoader from './components/ImageLoaderComponent'\nwindow.imageLoader = new ImageLoader();\n/**************************************************/\nimport LandingLoader from './views/landingLoader.js'\nimport imageReplace from \"./views/imageReplace.js\";\nwindow.imageReplace = new (function () {\n  this.replace = function (target) {\n    imageReplace(target)\n  }\n})\n\nwindow.landingLoader = new LandingLoader(1);\n/************************************************/\n\nexport default class Barba {\n  constructor() {\n\n    window.transitions = [];\n    this.instance = window.barbaInstance;\n    this.instance.use(window.appRouter, {\n      routes,\n    })\n  }\n  addCustomIntro(introduction) {\n    window.landingLoader = introduction;\n  }\n  setDefaultTransition(transitionObject) {\n    if (transitionObject) {\n      window.defaultTransition = transitionObject;\n\n    }\n    else {\n      window.defaultTransition = window.barbaDefaultTransition;\n    }\n    window.transitions.push(window.defaultTransition)\n  }\n  addTransition(transitionObject,) {\n    window.transitions.push(transitionObject);\n  }\n\n\n  init() {\n    //window.imageLoader.lazy();\n    imageReplace($('[data-barba=\"container\"]:last-of-type'));\n    window.initGlobal();\n    window.formComponent.initGlobal();\n    window.formMessage.init();\n    //window.fancy = new FancyComponent();\n\n    // ADD CONFIG ON HISTORY CHANGE\n    (function (history) {\n      var pushState = history.pushState;\n      history.pushState = function (state) {\n        if (typeof history.onpushstate == \"function\") {\n          history.onpushstate({ state: state });\n        }\n        return pushState.apply(history, arguments);\n      };\n    })(window.history);\n    window.onpopstate = history.onpushstate = function (e) {\n      window.appEvent.trigger('app:barba:historyChange');\n\n    }\n    this.instance.hooks.beforeLeave((data) => {\n      window.appEvent.trigger('app:barba:isChanging');\n      if (data.trigger == \"back\" || data.trigger == \"forward\") {\n        return;\n      }\n      localStorage.setItem('windowTop', window.pageYOffset);\n      localStorage.setItem('windowTopGlobalScrol', window.globalScroll.y);\n    })\n\n    this.instance.hooks.beforeEnter((data) => {\n      //window.imageLoader.lazy();\n      window.appEvent.trigger('app:barba:beforeEnter');\n      imageReplace($('[data-barba=\"container\"]:last-of-type'));\n      let inlineScripts = data.next.container.querySelectorAll('script');\n      inlineScripts.forEach(script => eval(script.innerHTML));\n      window.initView();\n      window.formMessage.init();\n      window.formComponent.initView();\n      document.body.id = typeof data.next.namespace !== 'undefined' ? data.next.namespace : '';\n      console.log('DEBUGG ICI', data.next)\n      history.scrollRestoration = 'manual';\n    });\n\n    this.instance.hooks.enter((data) => {\n      window.appEvent.trigger('app:barba:isLoaded');\n    });\n    this.instance.hooks.after((data) => {\n\n      if (data.trigger == \"back\" || data.trigger == \"forward\") {\n        window.scrollTo(0, localStorage.getItem('windowTop'));\n        if (window.globalScroll) {\n          window.globalScroll.scrollTo(parseInt(localStorage.getItem('windowTopGlobalScrol')), 0);\n        }\n      }\n      else {\n\n        window.scrollTo(0, 0);\n        if (window.globalScroll) {\n          window.globalScroll.initView();\n        }\n      }\n\n    });\n    this.instance.init({\n      views: window.views,\n      debug: true,\n      cacheIgnore: false,\n      prefetchIgnore: false,\n      prevent: (el) => {\n        if (el.href == document.location.href) {\n          el.event.preventDefault();\n          return false;\n        }\n      },\n\n      transitions: window.transitions,\n      timeout: 10000\n    });\n  }\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).barbaRouter=i()}(this,(function(){var t=\"2.1.10\";return new(function(){function i(){this.name=\"@barba/router\",this.version=t,this.routeNames=[],this.routesByName={}}var n=i.prototype;return n.install=function(t,i){var n=this,e=(void 0===i?{}:i).routes,o=void 0===e?[]:e;this.logger=new t.Logger(this.name),this.logger.info(this.version),this.barba=t,o.forEach((function(t){var i=t.name,e=t.path,o=[],r=n.barba.helpers.pathToRegexp(e,o);n.routeNames.indexOf(i)>-1?console.warn(\"[@barba/router] Duplicated route name (\"+i+\")\"):(n.routeNames.push(i),n.routesByName[i]={keys:o,path:e,regex:r})})),t.schemaPage.route=void 0},n.init=function(){this.barba.transitions.store.add(\"rule\",{position:1,value:{name:\"route\",type:\"object\"}}),this.barba.hooks.page(this.resolveRoutes,this),this.barba.hooks.reset(this.resolveRoutes,this)},n.resolveUrl=function(t){for(var i=this,n=this.barba.url.parse(t).path,e={name:name,params:{}},o=function(t,o){var r=i.routeNames[t],s=i.routesByName[r],u=s.keys,f=s.regex.exec(n);if(null!==f)return e.name=r,u.forEach((function(t,i){e.params[t.name]=f[i+1]})),{v:e}},r=0,s=this.routeNames.length;r<s;r++){var u=o(r);if(\"object\"==typeof u)return u.v}return null},n.resolveRoutes=function(t){var i=t.current,n=t.next;i.route=i.url.href?this.resolveUrl(i.url.href):void 0,n.route=n.url.href?this.resolveUrl(n.url.href):void 0},i}())}));\n//# sourceMappingURL=barba-router.umd.js.map\n","/**\n * @barba/router\n * <br><br>\n * ## Barba Router.\n *\n * - Add `route` to Barba transitions resolution\n *\n * @module router\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IBarbaPlugin, ITransitionData } from '@barba/core/src/defs';\n\n// Barba/core\nimport { Core } from '@barba/core/src/core';\nimport { Logger } from '@barba/core/src/modules/Logger';\n// Local\nimport { version } from '../package.json';\nimport { IRouteByName, IRouteResolved, IRouterOptions } from './defs';\n\nclass Router implements IBarbaPlugin<IRouterOptions> {\n  public name = '@barba/router';\n  public version = version;\n  public barba: Core;\n  public logger: Logger;\n\n  public routeNames: string[] = [];\n  public routesByName: IRouteByName = {};\n\n  /**\n   * Plugin installation.\n   */\n  public install(barba: Core, { routes = [] }: IRouterOptions = {}) {\n    this.logger = new barba.Logger(this.name);\n    this.logger.info(this.version);\n    this.barba = barba;\n\n    routes.forEach(route => {\n      const { name, path } = route;\n      const keys: any[] = [];\n      const regex = this.barba.helpers.pathToRegexp(path, keys);\n\n      if (this.routeNames.indexOf(name) > -1) {\n        console.warn(`[@barba/router] Duplicated route name (${name})`);\n      } else {\n        this.routeNames.push(name);\n        this.routesByName[name] = {\n          keys,\n          path,\n          regex,\n        };\n      }\n    });\n\n    // Add property to \"pageSchema\" (current, next)\n    barba.schemaPage.route = undefined;\n  }\n\n  /**\n   * Plugin initialisation.\n   */\n  public init() {\n    // Wait for store initialization then add new rule for routes\n    this.barba.transitions.store.add('rule', {\n      position: 1,\n      value: {\n        name: 'route',\n        type: 'object',\n      },\n    });\n    // Register hooks\n    this.barba.hooks.page(this.resolveRoutes, this);\n    this.barba.hooks.reset(this.resolveRoutes, this);\n  }\n\n  /**\n   * Resolve URL to route name.\n   */\n  public resolveUrl(url: string): IRouteResolved | null {\n    const { path } = this.barba.url.parse(url);\n    const output: IRouteResolved = {\n      name,\n      params: {},\n    };\n\n    /* tslint:disable:no-shadowed-variable */\n    for (let i = 0, l = this.routeNames.length; i < l; i++) {\n      const name = this.routeNames[i];\n      const { regex, keys } = this.routesByName[name];\n      const res = regex.exec(path);\n\n      if (res !== null) {\n        output.name = name;\n\n        keys.forEach((key, i) => {\n          output.params[key.name] = res[i + 1];\n        });\n\n        return output;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Hooks: do, reset.\n   *\n   * - Update `current` and `next` data\n   */\n  public resolveRoutes(data: ITransitionData): void {\n    const { current, next } = data;\n\n    current.route = current.url.href\n      ? this.resolveUrl(current.url.href)\n      : undefined;\n    next.route = next.url.href ? this.resolveUrl(next.url.href) : undefined;\n  }\n}\n\nconst router = new Router();\n\nexport default router;\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(t=t||self).barba=n()}(this,(function(){function t(t,n){for(var r=0;r<n.length;r++){var e=n[r];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}function n(n,r,e){return r&&t(n.prototype,r),e&&t(n,e),n}function r(){return(r=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var e in r)Object.prototype.hasOwnProperty.call(r,e)&&(t[e]=r[e])}return t}).apply(this,arguments)}function e(t,n){t.prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n}function i(t){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function o(t,n){return(o=Object.setPrototypeOf||function(t,n){return t.__proto__=n,t})(t,n)}function u(t,n,r){return(u=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}()?Reflect.construct:function(t,n,r){var e=[null];e.push.apply(e,n);var i=new(Function.bind.apply(t,e));return r&&o(i,r.prototype),i}).apply(null,arguments)}function f(t){var n=\"function\"==typeof Map?new Map:void 0;return(f=function(t){if(null===t||-1===Function.toString.call(t).indexOf(\"[native code]\"))return t;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==n){if(n.has(t))return n.get(t);n.set(t,r)}function r(){return u(t,arguments,i(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),o(r,t)})(t)}function s(t,n){try{var r=t()}catch(t){return n(t)}return r&&r.then?r.then(void 0,n):r}\"undefined\"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol(\"Symbol.iterator\"))),\"undefined\"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol(\"Symbol.asyncIterator\")));var c,a=\"2.9.7\",h=function(){};!function(t){t[t.off=0]=\"off\",t[t.error=1]=\"error\",t[t.warning=2]=\"warning\",t[t.info=3]=\"info\",t[t.debug=4]=\"debug\"}(c||(c={}));var v=c.off,l=function(){function t(t){this.t=t}t.getLevel=function(){return v},t.setLevel=function(t){return v=c[t]};var n=t.prototype;return n.error=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];this.i(console.error,c.error,n)},n.warn=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];this.i(console.warn,c.warning,n)},n.info=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];this.i(console.info,c.info,n)},n.debug=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];this.i(console.log,c.debug,n)},n.i=function(n,r,e){r<=t.getLevel()&&n.apply(console,[\"[\"+this.t+\"] \"].concat(e))},t}(),d=O,m=E,p=g,w=x,b=T,y=\"/\",P=new RegExp([\"(\\\\\\\\.)\",\"(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?\"].join(\"|\"),\"g\");function g(t,n){for(var r,e=[],i=0,o=0,u=\"\",f=n&&n.delimiter||y,s=n&&n.whitelist||void 0,c=!1;null!==(r=P.exec(t));){var a=r[0],h=r[1],v=r.index;if(u+=t.slice(o,v),o=v+a.length,h)u+=h[1],c=!0;else{var l=\"\",d=r[2],m=r[3],p=r[4],w=r[5];if(!c&&u.length){var b=u.length-1,g=u[b];(!s||s.indexOf(g)>-1)&&(l=g,u=u.slice(0,b))}u&&(e.push(u),u=\"\",c=!1);var E=m||p,x=l||f;e.push({name:d||i++,prefix:l,delimiter:x,optional:\"?\"===w||\"*\"===w,repeat:\"+\"===w||\"*\"===w,pattern:E?A(E):\"[^\"+k(x===f?x:x+f)+\"]+?\"})}}return(u||o<t.length)&&e.push(u+t.substr(o)),e}function E(t,n){return function(r,e){var i=t.exec(r);if(!i)return!1;for(var o=i[0],u=i.index,f={},s=e&&e.decode||decodeURIComponent,c=1;c<i.length;c++)if(void 0!==i[c]){var a=n[c-1];f[a.name]=a.repeat?i[c].split(a.delimiter).map((function(t){return s(t,a)})):s(i[c],a)}return{path:o,index:u,params:f}}}function x(t,n){for(var r=new Array(t.length),e=0;e<t.length;e++)\"object\"==typeof t[e]&&(r[e]=new RegExp(\"^(?:\"+t[e].pattern+\")$\",R(n)));return function(n,e){for(var i=\"\",o=e&&e.encode||encodeURIComponent,u=!e||!1!==e.validate,f=0;f<t.length;f++){var s=t[f];if(\"string\"!=typeof s){var c,a=n?n[s.name]:void 0;if(Array.isArray(a)){if(!s.repeat)throw new TypeError('Expected \"'+s.name+'\" to not repeat, but got array');if(0===a.length){if(s.optional)continue;throw new TypeError('Expected \"'+s.name+'\" to not be empty')}for(var h=0;h<a.length;h++){if(c=o(a[h],s),u&&!r[f].test(c))throw new TypeError('Expected all \"'+s.name+'\" to match \"'+s.pattern+'\"');i+=(0===h?s.prefix:s.delimiter)+c}}else if(\"string\"!=typeof a&&\"number\"!=typeof a&&\"boolean\"!=typeof a){if(!s.optional)throw new TypeError('Expected \"'+s.name+'\" to be '+(s.repeat?\"an array\":\"a string\"))}else{if(c=o(String(a),s),u&&!r[f].test(c))throw new TypeError('Expected \"'+s.name+'\" to match \"'+s.pattern+'\", but got \"'+c+'\"');i+=s.prefix+c}}else i+=s}return i}}function k(t){return t.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function A(t){return t.replace(/([=!:$/()])/g,\"\\\\$1\")}function R(t){return t&&t.sensitive?\"\":\"i\"}function T(t,n,r){for(var e=(r=r||{}).strict,i=!1!==r.start,o=!1!==r.end,u=r.delimiter||y,f=[].concat(r.endsWith||[]).map(k).concat(\"$\").join(\"|\"),s=i?\"^\":\"\",c=0;c<t.length;c++){var a=t[c];if(\"string\"==typeof a)s+=k(a);else{var h=a.repeat?\"(?:\"+a.pattern+\")(?:\"+k(a.delimiter)+\"(?:\"+a.pattern+\"))*\":a.pattern;n&&n.push(a),s+=a.optional?a.prefix?\"(?:\"+k(a.prefix)+\"(\"+h+\"))?\":\"(\"+h+\")?\":k(a.prefix)+\"(\"+h+\")\"}}if(o)e||(s+=\"(?:\"+k(u)+\")?\"),s+=\"$\"===f?\"$\":\"(?=\"+f+\")\";else{var v=t[t.length-1],l=\"string\"==typeof v?v[v.length-1]===u:void 0===v;e||(s+=\"(?:\"+k(u)+\"(?=\"+f+\"))?\"),l||(s+=\"(?=\"+k(u)+\"|\"+f+\")\")}return new RegExp(s,R(r))}function O(t,n,r){return t instanceof RegExp?function(t,n){if(!n)return t;var r=t.source.match(/\\((?!\\?)/g);if(r)for(var e=0;e<r.length;e++)n.push({name:e,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return t}(t,n):Array.isArray(t)?function(t,n,r){for(var e=[],i=0;i<t.length;i++)e.push(O(t[i],n,r).source);return new RegExp(\"(?:\"+e.join(\"|\")+\")\",R(r))}(t,n,r):function(t,n,r){return T(g(t,r),n,r)}(t,n,r)}d.match=function(t,n){var r=[];return E(O(t,r,n),r)},d.regexpToFunction=m,d.parse=p,d.compile=function(t,n){return x(g(t,n),n)},d.tokensToFunction=w,d.tokensToRegExp=b;var S={container:\"container\",history:\"history\",namespace:\"namespace\",prefix:\"data-barba\",prevent:\"prevent\",wrapper:\"wrapper\"},j=new(function(){function t(){this.o=S,this.u=new DOMParser}var n=t.prototype;return n.toString=function(t){return t.outerHTML},n.toDocument=function(t){return this.u.parseFromString(t,\"text/html\")},n.toElement=function(t){var n=document.createElement(\"div\");return n.innerHTML=t,n},n.getHtml=function(t){return void 0===t&&(t=document),this.toString(t.documentElement)},n.getWrapper=function(t){return void 0===t&&(t=document),t.querySelector(\"[\"+this.o.prefix+'=\"'+this.o.wrapper+'\"]')},n.getContainer=function(t){return void 0===t&&(t=document),t.querySelector(\"[\"+this.o.prefix+'=\"'+this.o.container+'\"]')},n.removeContainer=function(t){document.body.contains(t)&&t.parentNode.removeChild(t)},n.addContainer=function(t,n){var r=this.getContainer();r?this.s(t,r):n.appendChild(t)},n.getNamespace=function(t){void 0===t&&(t=document);var n=t.querySelector(\"[\"+this.o.prefix+\"-\"+this.o.namespace+\"]\");return n?n.getAttribute(this.o.prefix+\"-\"+this.o.namespace):null},n.getHref=function(t){if(t.tagName&&\"a\"===t.tagName.toLowerCase()){if(\"string\"==typeof t.href)return t.href;var n=t.getAttribute(\"href\")||t.getAttribute(\"xlink:href\");if(n)return this.resolveUrl(n.baseVal||n)}return null},n.resolveUrl=function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];var e=n.length;if(0===e)throw new Error(\"resolveUrl requires at least one argument; got none.\");var i=document.createElement(\"base\");if(i.href=arguments[0],1===e)return i.href;var o=document.getElementsByTagName(\"head\")[0];o.insertBefore(i,o.firstChild);for(var u,f=document.createElement(\"a\"),s=1;s<e;s++)f.href=arguments[s],i.href=u=f.href;return o.removeChild(i),u},n.s=function(t,n){n.parentNode.insertBefore(t,n.nextSibling)},t}()),M=new(function(){function t(){this.h=[],this.v=-1}var e=t.prototype;return e.init=function(t,n){this.l=\"barba\";var r={ns:n,scroll:{x:window.scrollX,y:window.scrollY},url:t};this.h.push(r),this.v=0;var e={from:this.l,index:0,states:[].concat(this.h)};window.history&&window.history.replaceState(e,\"\",t)},e.change=function(t,n,r){if(r&&r.state){var e=r.state,i=e.index;n=this.m(this.v-i),this.replace(e.states),this.v=i}else this.add(t,n);return n},e.add=function(t,n){var r=this.size,e=this.p(n),i={ns:\"tmp\",scroll:{x:window.scrollX,y:window.scrollY},url:t};this.h.push(i),this.v=r;var o={from:this.l,index:r,states:[].concat(this.h)};switch(e){case\"push\":window.history&&window.history.pushState(o,\"\",t);break;case\"replace\":window.history&&window.history.replaceState(o,\"\",t)}},e.update=function(t,n){var e=n||this.v,i=r({},this.get(e),{},t);this.set(e,i)},e.remove=function(t){t?this.h.splice(t,1):this.h.pop(),this.v--},e.clear=function(){this.h=[],this.v=-1},e.replace=function(t){this.h=t},e.get=function(t){return this.h[t]},e.set=function(t,n){return this.h[t]=n},e.p=function(t){var n=\"push\",r=t,e=S.prefix+\"-\"+S.history;return r.hasAttribute&&r.hasAttribute(e)&&(n=r.getAttribute(e)),n},e.m=function(t){return Math.abs(t)>1?t>0?\"forward\":\"back\":0===t?\"popstate\":t>0?\"back\":\"forward\"},n(t,[{key:\"current\",get:function(){return this.h[this.v]}},{key:\"state\",get:function(){return this.h[this.h.length-1]}},{key:\"previous\",get:function(){return this.v<1?null:this.h[this.v-1]}},{key:\"size\",get:function(){return this.h.length}}]),t}()),L=function(t,n){try{var r=function(){if(!n.next.html)return Promise.resolve(t).then((function(t){var r=n.next;if(t){var e=j.toElement(t);r.namespace=j.getNamespace(e),r.container=j.getContainer(e),r.html=t,M.update({ns:r.namespace});var i=j.toDocument(t);document.title=i.title}}))}();return Promise.resolve(r&&r.then?r.then((function(){})):void 0)}catch(t){return Promise.reject(t)}},$=d,_={__proto__:null,update:L,nextTick:function(){return new Promise((function(t){window.requestAnimationFrame(t)}))},pathToRegexp:$},q=function(){return window.location.origin},B=function(t){return void 0===t&&(t=window.location.href),U(t).port},U=function(t){var n,r=t.match(/:\\d+/);if(null===r)/^http/.test(t)&&(n=80),/^https/.test(t)&&(n=443);else{var e=r[0].substring(1);n=parseInt(e,10)}var i,o=t.replace(q(),\"\"),u={},f=o.indexOf(\"#\");f>=0&&(i=o.slice(f+1),o=o.slice(0,f));var s=o.indexOf(\"?\");return s>=0&&(u=D(o.slice(s+1)),o=o.slice(0,s)),{hash:i,path:o,port:n,query:u}},D=function(t){return t.split(\"&\").reduce((function(t,n){var r=n.split(\"=\");return t[r[0]]=r[1],t}),{})},F=function(t){return void 0===t&&(t=window.location.href),t.replace(/(\\/#.*|\\/|#.*)$/,\"\")},H={__proto__:null,getHref:function(){return window.location.href},getOrigin:q,getPort:B,getPath:function(t){return void 0===t&&(t=window.location.href),U(t).path},parse:U,parseQuery:D,clean:F};function I(t,n,r){return void 0===n&&(n=2e3),new Promise((function(e,i){var o=new XMLHttpRequest;o.onreadystatechange=function(){if(o.readyState===XMLHttpRequest.DONE)if(200===o.status)e(o.responseText);else if(o.status){var n={status:o.status,statusText:o.statusText};r(t,n),i(n)}},o.ontimeout=function(){var e=new Error(\"Timeout error [\"+n+\"]\");r(t,e),i(e)},o.onerror=function(){var n=new Error(\"Fetch error\");r(t,n),i(n)},o.open(\"GET\",t),o.timeout=n,o.setRequestHeader(\"Accept\",\"text/html,application/xhtml+xml,application/xml\"),o.setRequestHeader(\"x-barba\",\"yes\"),o.send()}))}var C=function(t){return!!t&&(\"object\"==typeof t||\"function\"==typeof t)&&\"function\"==typeof t.then};function N(t,n){return void 0===n&&(n={}),function(){for(var r=arguments.length,e=new Array(r),i=0;i<r;i++)e[i]=arguments[i];var o=!1,u=new Promise((function(r,i){n.async=function(){return o=!0,function(t,n){t?i(t):r(n)}};var u=t.apply(n,e);o||(C(u)?u.then(r,i):r(u))}));return u}}var X=new(function(t){function n(){var n;return(n=t.call(this)||this).logger=new l(\"@barba/core\"),n.all=[\"ready\",\"page\",\"reset\",\"currentAdded\",\"currentRemoved\",\"nextAdded\",\"nextRemoved\",\"beforeOnce\",\"once\",\"afterOnce\",\"before\",\"beforeLeave\",\"leave\",\"afterLeave\",\"beforeEnter\",\"enter\",\"afterEnter\",\"after\"],n.registered=new Map,n.init(),n}e(n,t);var r=n.prototype;return r.init=function(){var t=this;this.registered.clear(),this.all.forEach((function(n){t[n]||(t[n]=function(r,e){t.registered.has(n)||t.registered.set(n,new Set),t.registered.get(n).add({ctx:e||{},fn:r})})}))},r.do=function(t){for(var n=this,r=arguments.length,e=new Array(r>1?r-1:0),i=1;i<r;i++)e[i-1]=arguments[i];if(this.registered.has(t)){var o=Promise.resolve();return this.registered.get(t).forEach((function(t){o=o.then((function(){return N(t.fn,t.ctx).apply(void 0,e)}))})),o.catch((function(r){n.logger.debug(\"Hook error [\"+t+\"]\"),n.logger.error(r)}))}return Promise.resolve()},r.clear=function(){var t=this;this.all.forEach((function(n){delete t[n]})),this.init()},r.help=function(){this.logger.info(\"Available hooks: \"+this.all.join(\",\"));var t=[];this.registered.forEach((function(n,r){return t.push(r)})),this.logger.info(\"Registered hooks: \"+t.join(\",\"))},n}(h)),z=function(){function t(t){if(this.P=[],\"boolean\"==typeof t)this.g=t;else{var n=Array.isArray(t)?t:[t];this.P=n.map((function(t){return $(t)}))}}return t.prototype.checkHref=function(t){if(\"boolean\"==typeof this.g)return this.g;var n=U(t).path;return this.P.some((function(t){return null!==t.exec(n)}))},t}(),G=function(t){function n(n){var r;return(r=t.call(this,n)||this).k=new Map,r}e(n,t);var i=n.prototype;return i.set=function(t,n,r){return this.k.set(t,{action:r,request:n}),{action:r,request:n}},i.get=function(t){return this.k.get(t)},i.getRequest=function(t){return this.k.get(t).request},i.getAction=function(t){return this.k.get(t).action},i.has=function(t){return!this.checkHref(t)&&this.k.has(t)},i.delete=function(t){return this.k.delete(t)},i.update=function(t,n){var e=r({},this.k.get(t),{},n);return this.k.set(t,e),e},n}(z),Q=function(){return!window.history.pushState},W=function(t){return!t.el||!t.href},J=function(t){var n=t.event;return n.which>1||n.metaKey||n.ctrlKey||n.shiftKey||n.altKey},K=function(t){var n=t.el;return n.hasAttribute(\"target\")&&\"_blank\"===n.target},V=function(t){var n=t.el;return void 0!==n.protocol&&window.location.protocol!==n.protocol||void 0!==n.hostname&&window.location.hostname!==n.hostname},Y=function(t){var n=t.el;return void 0!==n.port&&B()!==B(n.href)},Z=function(t){var n=t.el;return n.getAttribute&&\"string\"==typeof n.getAttribute(\"download\")},tt=function(t){return t.el.hasAttribute(S.prefix+\"-\"+S.prevent)},nt=function(t){return Boolean(t.el.closest(\"[\"+S.prefix+\"-\"+S.prevent+'=\"all\"]'))},rt=function(t){var n=t.href;return F(n)===F()&&B(n)===B()},et=function(t){function n(n){var r;return(r=t.call(this,n)||this).suite=[],r.tests=new Map,r.init(),r}e(n,t);var r=n.prototype;return r.init=function(){this.add(\"pushState\",Q),this.add(\"exists\",W),this.add(\"newTab\",J),this.add(\"blank\",K),this.add(\"corsDomain\",V),this.add(\"corsPort\",Y),this.add(\"download\",Z),this.add(\"preventSelf\",tt),this.add(\"preventAll\",nt),this.add(\"sameUrl\",rt,!1)},r.add=function(t,n,r){void 0===r&&(r=!0),this.tests.set(t,n),r&&this.suite.push(t)},r.run=function(t,n,r,e){return this.tests.get(t)({el:n,event:r,href:e})},r.checkLink=function(t,n,r){var e=this;return this.suite.some((function(i){return e.run(i,t,n,r)}))},n}(z),it=function(t){function n(r,e){var i;void 0===e&&(e=\"Barba error\");for(var o=arguments.length,u=new Array(o>2?o-2:0),f=2;f<o;f++)u[f-2]=arguments[f];return(i=t.call.apply(t,[this].concat(u))||this).error=r,i.label=e,Error.captureStackTrace&&Error.captureStackTrace(function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(i),n),i.name=\"BarbaError\",i}return e(n,t),n}(f(Error)),ot=function(){function t(t){void 0===t&&(t=[]),this.logger=new l(\"@barba/core\"),this.all=[],this.page=[],this.once=[],this.A=[{name:\"namespace\",type:\"strings\"},{name:\"custom\",type:\"function\"}],t&&(this.all=this.all.concat(t)),this.update()}var n=t.prototype;return n.add=function(t,n){switch(t){case\"rule\":this.A.splice(n.position||0,0,n.value);break;case\"transition\":default:this.all.push(n)}this.update()},n.resolve=function(t,n){var r=this;void 0===n&&(n={});var e=n.once?this.once:this.page;e=e.filter(n.self?function(t){return t.name&&\"self\"===t.name}:function(t){return!t.name||\"self\"!==t.name});var i=new Map,o=e.find((function(e){var o=!0,u={};return!(!n.self||\"self\"!==e.name)||(r.A.reverse().forEach((function(n){o&&(o=r.R(e,n,t,u),e.from&&e.to&&(o=r.R(e,n,t,u,\"from\")&&r.R(e,n,t,u,\"to\")),e.from&&!e.to&&(o=r.R(e,n,t,u,\"from\")),!e.from&&e.to&&(o=r.R(e,n,t,u,\"to\")))})),i.set(e,u),o)})),u=i.get(o),f=[];if(f.push(n.once?\"once\":\"page\"),n.self&&f.push(\"self\"),u){var s,c=[o];Object.keys(u).length>0&&c.push(u),(s=this.logger).info.apply(s,[\"Transition found [\"+f.join(\",\")+\"]\"].concat(c))}else this.logger.info(\"No transition found [\"+f.join(\",\")+\"]\");return o},n.update=function(){var t=this;this.all=this.all.map((function(n){return t.T(n)})).sort((function(t,n){return t.priority-n.priority})).reverse().map((function(t){return delete t.priority,t})),this.page=this.all.filter((function(t){return void 0!==t.leave||void 0!==t.enter})),this.once=this.all.filter((function(t){return void 0!==t.once}))},n.R=function(t,n,r,e,i){var o=!0,u=!1,f=t,s=n.name,c=s,a=s,h=s,v=i?f[i]:f,l=\"to\"===i?r.next:r.current;if(i?v&&v[s]:v[s]){switch(n.type){case\"strings\":default:var d=Array.isArray(v[c])?v[c]:[v[c]];l[c]&&-1!==d.indexOf(l[c])&&(u=!0),-1===d.indexOf(l[c])&&(o=!1);break;case\"object\":var m=Array.isArray(v[a])?v[a]:[v[a]];l[a]?(l[a].name&&-1!==m.indexOf(l[a].name)&&(u=!0),-1===m.indexOf(l[a].name)&&(o=!1)):o=!1;break;case\"function\":v[h](r)?u=!0:o=!1}u&&(i?(e[i]=e[i]||{},e[i][s]=f[i][s]):e[s]=f[s])}return o},n.O=function(t,n,r){var e=0;return(t[n]||t.from&&t.from[n]||t.to&&t.to[n])&&(e+=Math.pow(10,r),t.from&&t.from[n]&&(e+=1),t.to&&t.to[n]&&(e+=2)),e},n.T=function(t){var n=this;t.priority=0;var r=0;return this.A.forEach((function(e,i){r+=n.O(t,e.name,i+1)})),t.priority=r,t},t}(),ut=function(){function t(t){void 0===t&&(t=[]),this.logger=new l(\"@barba/core\"),this.S=!1,this.store=new ot(t)}var r=t.prototype;return r.get=function(t,n){return this.store.resolve(t,n)},r.doOnce=function(t){var n=t.data,r=t.transition;try{var e=function(){i.S=!1},i=this,o=r||{};i.S=!0;var u=s((function(){return Promise.resolve(i.j(\"beforeOnce\",n,o)).then((function(){return Promise.resolve(i.once(n,o)).then((function(){return Promise.resolve(i.j(\"afterOnce\",n,o)).then((function(){}))}))}))}),(function(t){i.S=!1,i.logger.debug(\"Transition error [before/after/once]\"),i.logger.error(t)}));return Promise.resolve(u&&u.then?u.then(e):e())}catch(t){return Promise.reject(t)}},r.doPage=function(t){var n=t.data,r=t.transition,e=t.page,i=t.wrapper;try{var o=function(t){if(u)return t;f.S=!1},u=!1,f=this,c=r||{},a=!0===c.sync||!1;f.S=!0;var h=s((function(){function t(){return Promise.resolve(f.j(\"before\",n,c)).then((function(){var t=!1;function r(r){return t?r:Promise.resolve(f.remove(n)).then((function(){return Promise.resolve(f.j(\"after\",n,c)).then((function(){}))}))}var o=function(){if(a)return s((function(){return Promise.resolve(f.add(n,i)).then((function(){return Promise.resolve(f.j(\"beforeLeave\",n,c)).then((function(){return Promise.resolve(f.j(\"beforeEnter\",n,c)).then((function(){return Promise.resolve(Promise.all([f.leave(n,c),f.enter(n,c)])).then((function(){return Promise.resolve(f.j(\"afterLeave\",n,c)).then((function(){return Promise.resolve(f.j(\"afterEnter\",n,c)).then((function(){}))}))}))}))}))}))}),(function(t){if(f.M(t))throw new it(t,\"Transition error [sync]\")}));var r=function(r){return t?r:s((function(){var t=function(){if(!1!==o)return Promise.resolve(f.add(n,i)).then((function(){return Promise.resolve(f.j(\"beforeEnter\",n,c)).then((function(){return Promise.resolve(f.enter(n,c,o)).then((function(){return Promise.resolve(f.j(\"afterEnter\",n,c)).then((function(){}))}))}))}))}();if(t&&t.then)return t.then((function(){}))}),(function(t){if(f.M(t))throw new it(t,\"Transition error [before/after/enter]\")}))},o=!1,u=s((function(){return Promise.resolve(f.j(\"beforeLeave\",n,c)).then((function(){return Promise.resolve(Promise.all([f.leave(n,c),L(e,n)]).then((function(t){return t[0]}))).then((function(t){return o=t,Promise.resolve(f.j(\"afterLeave\",n,c)).then((function(){}))}))}))}),(function(t){if(f.M(t))throw new it(t,\"Transition error [before/after/leave]\")}));return u&&u.then?u.then(r):r(u)}();return o&&o.then?o.then(r):r(o)}))}var r=function(){if(a)return Promise.resolve(L(e,n)).then((function(){}))}();return r&&r.then?r.then(t):t()}),(function(t){if(f.S=!1,t.name&&\"BarbaError\"===t.name)throw f.logger.debug(t.label),f.logger.error(t.error),t;throw f.logger.debug(\"Transition error [page]\"),f.logger.error(t),t}));return Promise.resolve(h&&h.then?h.then(o):o(h))}catch(t){return Promise.reject(t)}},r.once=function(t,n){try{return Promise.resolve(X.do(\"once\",t,n)).then((function(){return n.once?N(n.once,n)(t):Promise.resolve()}))}catch(t){return Promise.reject(t)}},r.leave=function(t,n){try{return Promise.resolve(X.do(\"leave\",t,n)).then((function(){return n.leave?N(n.leave,n)(t):Promise.resolve()}))}catch(t){return Promise.reject(t)}},r.enter=function(t,n,r){try{return Promise.resolve(X.do(\"enter\",t,n)).then((function(){return n.enter?N(n.enter,n)(t,r):Promise.resolve()}))}catch(t){return Promise.reject(t)}},r.add=function(t,n){try{return j.addContainer(t.next.container,n),X.do(\"nextAdded\",t),Promise.resolve()}catch(t){return Promise.reject(t)}},r.remove=function(t){try{return j.removeContainer(t.current.container),X.do(\"currentRemoved\",t),Promise.resolve()}catch(t){return Promise.reject(t)}},r.M=function(t){return t.message?!/Timeout error|Fetch error/.test(t.message):!t.status},r.j=function(t,n,r){try{return Promise.resolve(X.do(t,n,r)).then((function(){return r[t]?N(r[t],r)(n):Promise.resolve()}))}catch(t){return Promise.reject(t)}},n(t,[{key:\"isRunning\",get:function(){return this.S},set:function(t){this.S=t}},{key:\"hasOnce\",get:function(){return this.store.once.length>0}},{key:\"hasSelf\",get:function(){return this.store.all.some((function(t){return\"self\"===t.name}))}},{key:\"shouldWait\",get:function(){return this.store.all.some((function(t){return t.to&&!t.to.route||t.sync}))}}]),t}(),ft=function(){function t(t){var n=this;this.names=[\"beforeLeave\",\"afterLeave\",\"beforeEnter\",\"afterEnter\"],this.byNamespace=new Map,0!==t.length&&(t.forEach((function(t){n.byNamespace.set(t.namespace,t)})),this.names.forEach((function(t){X[t](n.L(t))})))}return t.prototype.L=function(t){var n=this;return function(r){var e=t.match(/enter/i)?r.next:r.current,i=n.byNamespace.get(e.namespace);return i&&i[t]?N(i[t],i)(r):Promise.resolve()}},t}();Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector),Element.prototype.closest||(Element.prototype.closest=function(t){var n=this;do{if(n.matches(t))return n;n=n.parentElement||n.parentNode}while(null!==n&&1===n.nodeType);return null});var st={container:null,html:\"\",namespace:\"\",url:{hash:\"\",href:\"\",path:\"\",port:null,query:{}}};return new(function(){function t(){this.version=a,this.schemaPage=st,this.Logger=l,this.logger=new l(\"@barba/core\"),this.plugins=[],this.hooks=X,this.dom=j,this.helpers=_,this.history=M,this.request=I,this.url=H}var e=t.prototype;return e.use=function(t,n){var r=this.plugins;r.indexOf(t)>-1?this.logger.warn(\"Plugin [\"+t.name+\"] already installed.\"):\"function\"==typeof t.install?(t.install(this,n),r.push(t)):this.logger.warn(\"Plugin [\"+t.name+'] has no \"install\" method.')},e.init=function(t){var n=void 0===t?{}:t,e=n.transitions,i=void 0===e?[]:e,o=n.views,u=void 0===o?[]:o,f=n.schema,s=void 0===f?S:f,c=n.requestError,a=n.timeout,h=void 0===a?2e3:a,v=n.cacheIgnore,d=void 0!==v&&v,m=n.prefetchIgnore,p=void 0!==m&&m,w=n.preventRunning,b=void 0!==w&&w,y=n.prevent,P=void 0===y?null:y,g=n.debug,E=n.logLevel;if(l.setLevel(!0===(void 0!==g&&g)?\"debug\":void 0===E?\"off\":E),this.logger.info(this.version),Object.keys(s).forEach((function(t){S[t]&&(S[t]=s[t])})),this.$=c,this.timeout=h,this.cacheIgnore=d,this.prefetchIgnore=p,this.preventRunning=b,this._=this.dom.getWrapper(),!this._)throw new Error(\"[@barba/core] No Barba wrapper found\");this._.setAttribute(\"aria-live\",\"polite\"),this.q();var x=this.data.current;if(!x.container)throw new Error(\"[@barba/core] No Barba container found\");if(this.cache=new G(d),this.prevent=new et(p),this.transitions=new ut(i),this.views=new ft(u),null!==P){if(\"function\"!=typeof P)throw new Error(\"[@barba/core] Prevent should be a function\");this.prevent.add(\"preventCustom\",P)}this.history.init(x.url.href,x.namespace),this.B=this.B.bind(this),this.U=this.U.bind(this),this.D=this.D.bind(this),this.F(),this.plugins.forEach((function(t){return t.init()}));var k=this.data;k.trigger=\"barba\",k.next=k.current,k.current=r({},this.schemaPage),this.hooks.do(\"ready\",k),this.once(k),this.q()},e.destroy=function(){this.q(),this.H(),this.history.clear(),this.hooks.clear(),this.plugins=[]},e.force=function(t){window.location.assign(t)},e.go=function(t,n,r){var e;if(void 0===n&&(n=\"barba\"),this.transitions.isRunning)this.force(t);else if(!(e=\"popstate\"===n?this.history.current&&this.url.getPath(this.history.current.url)===this.url.getPath(t):this.prevent.run(\"sameUrl\",null,null,t))||this.transitions.hasSelf)return n=this.history.change(t,n,r),r&&(r.stopPropagation(),r.preventDefault()),this.page(t,n,e)},e.once=function(t){try{var n=this;return Promise.resolve(n.hooks.do(\"beforeEnter\",t)).then((function(){function r(){return Promise.resolve(n.hooks.do(\"afterEnter\",t)).then((function(){}))}var e=function(){if(n.transitions.hasOnce){var r=n.transitions.get(t,{once:!0});return Promise.resolve(n.transitions.doOnce({transition:r,data:t})).then((function(){}))}}();return e&&e.then?e.then(r):r()}))}catch(t){return Promise.reject(t)}},e.page=function(t,n,e){try{var i=function(){var t=o.data;return Promise.resolve(o.hooks.do(\"page\",t)).then((function(){var n=s((function(){var n=o.transitions.get(t,{once:!1,self:e});return Promise.resolve(o.transitions.doPage({data:t,page:u,transition:n,wrapper:o._})).then((function(){o.q()}))}),(function(){0===l.getLevel()&&o.force(t.current.url.href)}));if(n&&n.then)return n.then((function(){}))}))},o=this;o.data.next.url=r({href:t},o.url.parse(t)),o.data.trigger=n;var u=o.cache.has(t)?o.cache.update(t,{action:\"click\"}).request:o.cache.set(t,o.request(t,o.timeout,o.onRequestError.bind(o,n)),\"click\").request,f=function(){if(o.transitions.shouldWait)return Promise.resolve(L(u,o.data)).then((function(){}))}();return Promise.resolve(f&&f.then?f.then(i):i())}catch(t){return Promise.reject(t)}},e.onRequestError=function(t){this.transitions.isRunning=!1;for(var n=arguments.length,r=new Array(n>1?n-1:0),e=1;e<n;e++)r[e-1]=arguments[e];var i=r[0],o=r[1],u=this.cache.getAction(i);return this.cache.delete(i),!(this.$&&!1===this.$(t,u,i,o)||(\"click\"===u&&this.force(i),1))},e.prefetch=function(t){var n=this;this.cache.has(t)||this.cache.set(t,this.request(t,this.timeout,this.onRequestError.bind(this,\"barba\")).catch((function(t){n.logger.error(t)})),\"prefetch\")},e.F=function(){!0!==this.prefetchIgnore&&(document.addEventListener(\"mouseover\",this.B),document.addEventListener(\"touchstart\",this.B)),document.addEventListener(\"click\",this.U),window.addEventListener(\"popstate\",this.D)},e.H=function(){!0!==this.prefetchIgnore&&(document.removeEventListener(\"mouseover\",this.B),document.removeEventListener(\"touchstart\",this.B)),document.removeEventListener(\"click\",this.U),window.removeEventListener(\"popstate\",this.D)},e.B=function(t){var n=this,r=this.I(t);if(r){var e=this.dom.getHref(r);this.prevent.checkHref(e)||this.cache.has(e)||this.cache.set(e,this.request(e,this.timeout,this.onRequestError.bind(this,r)).catch((function(t){n.logger.error(t)})),\"enter\")}},e.U=function(t){var n=this.I(t);if(n)return this.transitions.isRunning&&this.preventRunning?(t.preventDefault(),void t.stopPropagation()):void this.go(this.dom.getHref(n),n,t)},e.D=function(t){this.go(this.url.getHref(),\"popstate\",t)},e.I=function(t){for(var n=t.target;n&&!this.dom.getHref(n);)n=n.parentNode;if(n&&!this.prevent.checkLink(n,t,this.dom.getHref(n)))return n},e.q=function(){var t=this.url.getHref(),n={container:this.dom.getContainer(),html:this.dom.getHtml(),namespace:this.dom.getNamespace(),url:r({href:t},this.url.parse(t))};this.C={current:n,next:r({},this.schemaPage),trigger:void 0},this.hooks.do(\"reset\",this.data)},n(t,[{key:\"data\",get:function(){return this.C}},{key:\"wrapper\",get:function(){return this._}}]),t}())}));\n//# sourceMappingURL=barba.umd.js.map\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","/**\n * @barba/core/modules/Logger\n * <br><br>\n * ## Logger.\n *\n * - Display informations via the console\n *\n * @module core/modules/Logger\n * @preferred\n */\n\n/***/\n\n/**\n * Log levels, all lower level messages are printed\n *\n * 0. mute\n * 1. error = `console.error()`\n * 2. warning= `console.warn()`\n * 3. info = `console.info()`\n * 4. debug = `console.log()`\n */\nexport enum LogLevels {\n  off = 0,\n  error = 1,\n  warning = 2,\n  info = 3,\n  debug = 4,\n}\n\n/**\n * Global log level\n */\nlet _level: number = LogLevels.off;\n\nexport class Logger {\n  /**\n   * Get global log level.\n   */\n  public static getLevel(): number {\n    return _level;\n  }\n\n  /**\n   * Set global log level.\n   */\n  public static setLevel(name: keyof typeof LogLevels): number {\n    _level = LogLevels[name];\n\n    return _level;\n  }\n\n  /**\n   * Log \"prefix\".\n   */\n  private _source: string;\n\n  /**\n   * Creates an instance of Logger.\n   */\n  constructor(source: string) {\n    this._source = source;\n  }\n\n  /**\n   * Permanent, unremovable log.\n   */\n  // public print(...objects: any[]): void {\n  //   this._log(console.info, LogLevels.off, objects);\n  // }\n\n  /**\n   * Error log.\n   */\n  public error(...objects: any[]): void {\n    this._log(console.error, LogLevels.error, objects);\n  }\n\n  /**\n   * Warn log.\n   */\n  public warn(...objects: any[]): void {\n    this._log(console.warn, LogLevels.warning, objects);\n  }\n\n  /**\n   * Info log.\n   */\n  public info(...objects: any[]): void {\n    this._log(console.info, LogLevels.info, objects);\n  }\n\n  /**\n   * Debug log.\n   */\n  public debug(...objects: any[]): void {\n    this._log(console.log, LogLevels.debug, objects);\n  }\n\n  /**\n   * Internal logger.\n   */\n  private _log(fn: () => void, level: number, objects: any[]): void {\n    if (level <= Logger.getLevel()) {\n      fn.apply(console, ([`[${this._source}] `].concat(objects) as unknown) as [\n\n      ]);\n    }\n  }\n}\n","/**\n * @module typings/core\n */\nimport { ITransitionData, ITransitionPage, IViewData } from './index';\n\nexport type HooksBarba =\n  | 'ready'\n  | 'page'\n  | 'reset'\n  | 'currentAdded'\n  | 'currentRemoved'\n  | 'nextAdded'\n  | 'nextRemoved';\n\nexport type HooksOnce = 'beforeOnce' | 'once' | 'afterOnce';\n\nexport type HooksPage =\n  | 'before'\n  | 'beforeLeave'\n  | 'leave'\n  | 'afterLeave'\n  | 'beforeEnter'\n  | 'enter'\n  | 'afterEnter'\n  | 'after';\n\nexport type HooksBefore = 'beforeOnce' | 'beforeLeave' | 'beforeEnter';\nexport type HooksAfter = 'afterOnce' | 'afterLeave' | 'afterEnter';\n\nexport type HooksTransition = HooksOnce | HooksPage;\nexport type HooksView = HooksBefore | HooksAfter;\nexport type HooksAll = HooksBarba | HooksTransition;\n\n// Allow optional \"dynamically created\" hooks\nexport type HooksTransitionMap = { [key in HooksTransition]?: any };\n\nexport type HookFunction = (\n  data?: ITransitionData | IViewData,\n  t?: ITransitionPage\n) => Promise<void> | void;\n\nexport class HookMethods {\n  public before: (fn: HookFunction, ctx?: any) => void;\n  public beforeLeave: (fn: HookFunction, ctx?: any) => void;\n  public leave: (fn: HookFunction, ctx?: any) => void;\n  public afterLeave: (fn: HookFunction, ctx?: any) => void;\n  public beforeEnter: (fn: HookFunction, ctx?: any) => void;\n  public enter: (fn: HookFunction, ctx?: any) => void;\n  public afterEnter: (fn: HookFunction, ctx?: any) => void;\n  public after: (fn: HookFunction, ctx?: any) => void;\n}\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.match = match\nmodule.exports.regexpToFunction = regexpToFunction\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var whitelist = (options && options.whitelist) || undefined\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n      var c = path[k]\n      var matches = whitelist ? whitelist.indexOf(c) > -1 : true\n\n      if (matches) {\n        prev = c\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var pattern = capture || group\n    var delimiter = prev || defaultDelimiter\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: pattern\n        ? escapeGroup(pattern)\n        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match (str, options) {\n  var keys = []\n  var re = pathToRegexp(str, keys, options)\n  return regexpToFunction(re, keys)\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction (re, keys) {\n  return function (pathname, options) {\n    var m = re.exec(pathname)\n    if (!m) return false\n\n    var path = m[0]\n    var index = m.index\n    var params = {}\n    var decode = (options && options.decode) || decodeURIComponent\n\n    for (var i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue\n\n      var key = keys[i - 1]\n\n      if (key.repeat) {\n        params[key.name] = m[i].split(key.delimiter).map(function (value) {\n          return decode(value, key)\n        })\n      } else {\n        params[key.name] = decode(m[i], key)\n      }\n    }\n\n    return { path: path, index: index, params: params }\n  }\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n    var validate = options ? options.validate !== false : true\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) continue\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = options.delimiter || DEFAULT_DELIMITER\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (!token.prefix) {\n          route += '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + escapeString(delimiter) + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    var endToken = tokens[tokens.length - 1]\n    var isEndDelimited = typeof endToken === 'string'\n      ? endToken[endToken.length - 1] === delimiter\n      : endToken === undefined\n\n    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * @barba/core/schemas\n * <br><br>\n * ## Schemas description.\n *\n * @module core/schemas\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { ISchemaAttribute } from '../defs';\n\n/**\n * See [[ISchemaAttribute]]\n */\nexport const schemaAttribute: ISchemaAttribute = {\n  container: 'container',\n  history: 'history',\n  namespace: 'namespace',\n  prefix: 'data-barba',\n  prevent: 'prevent',\n  wrapper: 'wrapper',\n};\n","/**\n * @barba/core/utils/dom\n * <br><br>\n * ## Dom utils\n *\n * - Access DOM contents\n * - DOM vs string conversions\n *\n * @module core/utils/dom\n * @preferred\n */\n\n/***/\n\nimport path from 'path';\n\n// Definitions\nimport { ISchemaAttribute, Link, Scope, Wrapper } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\nexport class Dom {\n  private _attr: ISchemaAttribute = schemaAttribute;\n  private _parser: DOMParser = new DOMParser();\n\n  /**\n   * Convert HTMLDocument to string.\n   */\n  public toString(el: HTMLElement): string {\n    return el.outerHTML;\n  }\n\n  /**\n   * Parse HTML string to HTMLDocument.\n   */\n  // see https://github.com/barbajs/barba/issues/362\n  // Seems that using DOMParser.parseFromString causes this issue.\n  public toDocument(htmlString: string): HTMLDocument {\n    return this._parser.parseFromString(htmlString, 'text/html');\n  }\n\n  /**\n   * Parse HTML string to DIVElement.\n   *\n   * DOMParser.parseFromString fails with img[srcset] on iOS.\n   * see https://github.com/barbajs/barba/issues/362\n   */\n  public toElement(htmlString: string): HTMLDivElement {\n    const div = document.createElement('div');\n\n    div.innerHTML = htmlString;\n    return div;\n  }\n\n  /**\n   * Get HTML content.\n   */\n  public getHtml(doc: HTMLDocument = document): string {\n    return this.toString(doc.documentElement);\n  }\n\n  /**\n   * Get full document content.\n   */\n  // getDocument(el = document.documentElement) {\n  //   return this.toStr(el);\n  // },\n\n  /**\n   * Get `[data-barba=\"wrapper\"]`.\n   */\n  public getWrapper(scope: Scope = document): Wrapper {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.wrapper}\"]`\n    );\n  }\n\n  /**\n   * Get `[data-barba=\"container\"]`.\n   */\n  public getContainer(scope: Scope = document): HTMLElement | null {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.container}\"]`\n    );\n  }\n\n  /**\n   * Remove container and store next sibling (if applicable).\n   */\n  public removeContainer(container: HTMLElement) {\n    if (document.body.contains(container)) {\n      container.parentNode.removeChild(container);\n    }\n  }\n\n  /**\n   * Add container before next sibling or at the end of the wrapper.\n   */\n  public addContainer(container: HTMLElement, wrapper: HTMLElement) {\n    const existingContainer = this.getContainer();\n\n    if (existingContainer) {\n      this._insertAfter(container, existingContainer);\n    } else {\n      wrapper.appendChild(container);\n    }\n  }\n\n  /**\n   * Get `[data-barba-namespace]`.\n   */\n  public getNamespace(scope: Scope = document): string | null {\n    const ns = scope.querySelector(\n      `[${this._attr.prefix}-${this._attr.namespace}]`\n    );\n\n    return ns\n      ? ns.getAttribute(`${this._attr.prefix}-${this._attr.namespace}`)\n      : null;\n  }\n\n  /**\n   * Get URL from `href` value.\n   */\n  public getHref(el: Link): string | null {\n    // HTML tagName is UPPERCASE, xhtml tagName keeps existing case.\n    if (el.tagName && el.tagName.toLowerCase() === 'a') {\n      // HTMLAnchorElement, full URL available\n      if (typeof el.href === 'string') {\n        return el.href;\n      }\n\n      // Probably a SVGAElement…\n      const href = el.getAttribute('href') || el.getAttribute('xlink:href');\n\n      /* istanbul ignore else */\n      if (href) {\n        // When link comes from SVG, `href` returns an object, not a string.\n        const attr: string =\n          ((href as unknown) as SVGAnimatedString).baseVal || href;\n\n        return this.resolveUrl(attr);\n      }\n    }\n    return null;\n  }\n\n  // Copyright 2014 Simon Lydell\n  // X11 (“MIT”) Licensed. (See LICENSE\n  // https://github.com/lydell/resolve-url/blob/master/resolve-url.js\n  /* istanbul ignore next */\n  public resolveUrl(...urls: string[]) {\n    const numUrls = urls.length;\n\n    if (numUrls === 0) {\n      throw new Error('resolveUrl requires at least one argument; got none.');\n    }\n\n    const base = document.createElement('base');\n    base.href = arguments[0];\n\n    if (numUrls === 1) {\n      return base.href;\n    }\n\n    const head = document.getElementsByTagName('head')[0];\n    head.insertBefore(base, head.firstChild);\n\n    const a = document.createElement('a');\n    let resolved;\n\n    for (let index = 1; index < numUrls; index++) {\n      a.href = arguments[index];\n      resolved = a.href;\n      base.href = resolved;\n    }\n\n    head.removeChild(base);\n\n    return resolved;\n  }\n\n  /**\n   * Insert node after another node.\n   */\n  private _insertAfter(newNode: Node, referenceNode: Node) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n}\n\nconst dom = new Dom();\n\nexport { dom };\n","import { HistoryAction, LinkEvent, Trigger } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\n/**\n * @barba/core/utils/history\n * <br><br>\n * ## History manager.\n *\n * - Keep track of the navigation history\n *\n * @module core/utils/history\n * @preferred\n */\n\n/**\n * State item.\n *\n * @property from\n * @property index\n */\ninterface IHistoryItem {\n  /** origin */\n  from: string;\n  /** index */\n  index: number;\n  /** states */\n  states: IStateItem[];\n}\n\n/***/\ninterface ICoords {\n  x: number;\n  y: number;\n}\n\n/**\n * History item.\n *\n * @property namespace\n * @property scroll\n * @property URL\n */\ninterface IStateItem {\n  /** namespace */\n  ns: string | undefined;\n  /** Scroll position */\n  scroll: ICoords;\n  /** URL */\n  url: string;\n}\n\nexport class History {\n  private _session: string;\n  private _states: IStateItem[] = [];\n  private _pointer = -1;\n\n  /**\n   * Init with first state.\n   */\n  public init(url: string, ns: string): void {\n    this._session = 'barba';\n    const index = 0;\n\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    window.history && window.history.replaceState(item, '', url);\n  }\n\n  public change(\n    url: string,\n    trigger: Trigger,\n    e?: LinkEvent | PopStateEvent\n  ): Trigger {\n    if (e && (e as PopStateEvent).state) {\n      // If popstate, move to existing state\n      // and get back/forward direction.\n      const { state }: { state: IHistoryItem } = e as PopStateEvent;\n      const { index } = state;\n      const diff = this._pointer - index;\n\n      trigger = this._getDirection(diff);\n\n      // Work with previous states\n      this.replace(state.states);\n      this._pointer = index;\n    } else {\n      // Add new state\n      this.add(url, trigger);\n    }\n\n    return trigger;\n  }\n\n  /**\n   * Add a new state.\n   */\n  public add(url: string, trigger: Trigger): void {\n    // If no state, it will be updated later.\n    const ns = 'tmp';\n    const index = this.size;\n    const action = this._getAction(trigger);\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    switch (action) {\n      case 'push':\n        window.history && window.history.pushState(item, '', url);\n        break;\n      case 'replace':\n        window.history && window.history.replaceState(item, '', url);\n        break;\n      /* istanbul ignore next */\n      default:\n    }\n  }\n\n  /**\n   * Update state.\n   */\n  public update(data: any, i?: number): void {\n    const index = i || this._pointer;\n    const existing = this.get(index);\n    const state: IStateItem = {\n      ...existing,\n      ...data,\n    };\n\n    this.set(index, state);\n  }\n\n  /**\n   * Remove last state.\n   */\n  public remove(i?: number): void {\n    if (i) {\n      this._states.splice(i, 1);\n    } else {\n      this._states.pop();\n    }\n\n    this._pointer--;\n  }\n\n  /**\n   * Delete all states.\n   */\n  public clear(): void {\n    this._states = [];\n    this._pointer = -1;\n  }\n\n  /**\n   * Replace all states.\n   */\n  public replace(newStates: IStateItem[]): void {\n    this._states = newStates;\n  }\n\n  /**\n   * Get state by index.\n   */\n  public get(index: number) {\n    return this._states[index];\n  }\n\n  /**\n   * Set state by index.\n   */\n  public set(i: number, state: IStateItem) {\n    return (this._states[i] = state);\n  }\n\n  /**\n   * Get the current state.\n   */\n  get current(): IStateItem {\n    return this._states[this._pointer];\n  }\n\n  /**\n   * Get the last state (top of the history stack).\n   */\n  get state(): IStateItem {\n    return this._states[this._states.length - 1];\n  }\n\n  /**\n   * Get the previous state.\n   */\n  get previous(): IStateItem | null {\n    return this._pointer < 1 ? null : this._states[this._pointer - 1];\n  }\n\n  /**\n   * Get the state size.\n   */\n  get size(): number {\n    return this._states.length;\n  }\n\n  /**\n   * Get the history action: push vs replace\n   */\n  private _getAction(trigger: Trigger): HistoryAction {\n    let action: HistoryAction = 'push';\n\n    // Manage `data-barba-history` attribute\n    // to get the right action (push vs replace).\n    const el = trigger as HTMLAnchorElement;\n    const attr = `${schemaAttribute.prefix}-${schemaAttribute.history}`;\n\n    if (el.hasAttribute && el.hasAttribute(attr)) {\n      action = el.getAttribute(attr) as HistoryAction;\n    }\n\n    return action;\n  }\n\n  /**\n   * Get the direction of popstate change\n   */\n  private _getDirection(diff: number): Trigger {\n    // Check if \"session switch\"\n    if (Math.abs(diff) > 1) {\n      // Ex 6-0 > 0 -> forward, 0-6 < 0 -> back\n      return diff > 0 ? 'forward' : 'back';\n    } else {\n      if (diff === 0) {\n        return 'popstate';\n      } else {\n        // Ex 6-5 > 0 -> back, 5-6 < 0 -> forward\n        return diff > 0 ? 'back' : 'forward';\n      }\n    }\n  }\n}\n\nconst history = new History();\n\nexport { history };\n","/**\n * @barba/core/utils/helpers\n * <br><br>\n * ## Helpers\n *\n * - Update next page data\n *\n * @module core/utils/helpers\n * @preferred\n */\n\n/***/\n\n// Third-party\nimport ptr from 'path-to-regexp';\n// Definitions\nimport { ITransitionData } from '../defs';\n// Utils\nimport { dom } from './dom';\nimport { history } from './history';\n\n/**\n * Update `data.next`, the title and the history\n */\nexport const update = async (\n  page: Promise<string | void>,\n  data: ITransitionData\n): Promise<void> => {\n  // If not already updated\n  if (!data.next.html) {\n    const html = await page;\n    const { next } = data;\n\n    if (html) {\n      // see: https://github.com/barbajs/barba/issues/362\n      // const nextDocument = dom.toDocument(html);\n      const nextDocument = dom.toElement(html);\n\n      next.namespace = dom.getNamespace(nextDocument);\n      next.container = dom.getContainer(nextDocument);\n      // see https://github.com/barbajs/barba/issues/362\n      // next.html = dom.getHtml(nextDocument);\n      // next.html = nextDocument.innerHTML;\n      next.html = html;\n\n      // Update history namespace (not available when initially set)\n      history.update({ ns: next.namespace });\n\n      // Update title.\n      const { title } = dom.toDocument(html);\n\n      document.title = title;\n    }\n  }\n};\n\n/**\n * Next tick\n */\nexport const nextTick = () =>\n  new Promise(resolve => {\n    window.requestAnimationFrame(resolve);\n    // DEV: same result?\n    // setTimeout(resolve, 0);\n  });\n\n/**\n * Turn a route string such as `/user/:name` into a regular expression.\n *\n * Used for:\n *\n * - routes to ignore\n * - route transition resolution\n *\n * @see https://www.npmjs.com/package/path-to-regexp\n */\nconst pathToRegexp = ptr;\n\nexport { pathToRegexp };\n","/**\n * @barba/core/utils/url\n * <br><br>\n * ## URL utils.\n *\n * - Collect and structure informations from URLs\n *\n * @module core/utils/url\n */\n\n/***/\n\n// Definitions\nimport { IGenericObject, IUrlBase } from '../defs';\n\n/**\n * Get location href.\n */\nexport const getHref = () => window.location.href;\n\n/**\n * Get location origin.\n */\nexport const getOrigin = () => window.location.origin;\n\n/**\n * Get port based on URL or location.\n */\nexport const getPort = (url: string = window.location.href) => parse(url).port;\n\n/**\n * Get path from URL.\n */\nexport const getPath = (url: string = window.location.href) => parse(url).path;\n\n/**\n * Get query object from URL.\n */\n// export const getQuery = (url: string): IGenericObject => parse(url).query;\n\n/**\n * Get hash from URL.\n */\n// export const getHash = (url: string): string => parse(url).hash;\n\n/**\n * Parse URL for path, query and hash and more.\n */\nexport const parse = (url: string): IUrlBase => {\n  // Port\n  let port;\n  const matches = url.match(/:\\d+/);\n\n  if (matches === null) {\n    if (/^http/.test(url)) {\n      port = 80;\n    }\n\n    if (/^https/.test(url)) {\n      port = 443;\n    }\n  } else {\n    const portString = matches[0].substring(1);\n\n    port = parseInt(portString, 10);\n  }\n\n  // Path\n  let path = url.replace(getOrigin(), '');\n  let hash;\n  let query = {};\n\n  // Hash\n  const hashIndex = path.indexOf('#');\n\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex + 1);\n    path = path.slice(0, hashIndex);\n  }\n\n  // Query\n  const queryIndex = path.indexOf('?');\n\n  if (queryIndex >= 0) {\n    query = parseQuery(path.slice(queryIndex + 1));\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    hash,\n    path,\n    port,\n    query,\n  };\n};\n\n/**\n * Parse a query string to object.\n */\nexport const parseQuery = (str: string) =>\n  str.split('&').reduce((acc: IGenericObject, el: string) => {\n    const [key, value] = el.split('=');\n\n    acc[key] = value;\n\n    return acc;\n  }, {});\n\n/**\n * Clean URL, remove \"hash\" and/or \"trailing slash\".\n */\nexport const clean = (url: string = window.location.href) =>\n  url.replace(/(\\/#.*|\\/|#.*)$/, '');\n","/**\n * @barba/core/utils/request\n * <br><br>\n * ## Fetch pages for transitions.\n *\n * - Includes timeout\n * - Uses Fetch API\n * - Handles errors\n *\n * @module core/utils/request\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { RequestError } from '../defs';\n\n/**\n * Init a page request.\n * Fetch the page and returns a promise with the text content.\n */\nfunction request(\n  url: string,\n  ttl: number = 2e3,\n  requestError: RequestError\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          resolve(xhr.responseText);\n        } else if (xhr.status) {\n          // HTTP code is not 200, reject with response.\n          const res = {\n            status: xhr.status,\n            statusText: xhr.statusText,\n          };\n          requestError(url, res);\n          reject(res);\n        }\n      }\n    };\n    xhr.ontimeout = () => {\n      const err = new Error(`Timeout error [${ttl}]`);\n      requestError(url, err);\n      reject(err);\n    };\n    xhr.onerror = () => {\n      const err = new Error(`Fetch error`);\n      requestError(url, err);\n      reject(err);\n    };\n\n    xhr.open('GET', url);\n    xhr.timeout = ttl;\n    xhr.setRequestHeader(\n      'Accept',\n      'text/html,application/xhtml+xml,application/xml'\n    );\n    xhr.setRequestHeader('x-barba', 'yes');\n    xhr.send();\n  });\n}\n\nexport { request };\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","import isPromise from 'is-promise';\n\n// https://github.com/SBoudrias/run-async\n/* istanbul ignore next */\nexport function runAsync(\n  func: (...args: any[]) => void | Promise<any>,\n  ctx: any = {}\n): (...args: any[]) => Promise<any> {\n  return (...args: any[]) => {\n    let async = false;\n\n    const promise = new Promise((resolve, reject) => {\n      // Add async to context\n      ctx.async = () => {\n        async = true;\n\n        return (err: any, value: any) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(value);\n          }\n        };\n      };\n\n      const answer = func.apply(ctx, args as []);\n\n      if (!async) {\n        if (isPromise(answer)) {\n          (answer as Promise<any>).then(resolve, reject);\n        } else {\n          resolve(answer);\n        }\n      }\n    });\n\n    return promise;\n  };\n}\n","/**\n * @barba/core/modules/hooks\n * <br><br>\n * ## Hooks manager.\n *\n * - Register and trigger hooks\n *\n * Hooks can be easily registered:\n *\n * ```js\n * hooks.leave(callback, context);\n * ```\n *\n * @module core/modules/hooks\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HookFunction, HookMethods, HooksAll } from './defs';\n// Modules\nimport { Logger } from './modules/Logger';\n// Utils\nimport { runAsync } from './utils';\n// Types\ninterface IHookInfos {\n  ctx: any;\n  fn: HookFunction;\n}\n\nexport class Hooks extends HookMethods {\n  /**\n   * Allow the use of `hooks[name](cb, ctx)`.\n   */\n  [key: string]: any;\n  // [key in HooksAll]?: any;\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All available hooks.\n   *\n   * See [[HooksAll]]\n   */\n  // TODO: get hooks from defs (DRY)?\n  public all: HooksAll[] = [\n    'ready',\n    'page',\n    'reset',\n    'currentAdded',\n    'currentRemoved',\n    'nextAdded',\n    'nextRemoved',\n    'beforeOnce',\n    'once',\n    'afterOnce',\n    'before',\n    'beforeLeave',\n    'leave',\n    'afterLeave',\n    'beforeEnter',\n    'enter',\n    'afterEnter',\n    'after',\n  ];\n  /**\n   * Registered hooks.\n   *\n   * - Unique hook name\n   * - Associated data set(s) (callback + context)\n   */\n  public registered: Map<HooksAll, Set<IHookInfos>> = new Map();\n\n  constructor() {\n    super();\n    this.init();\n  }\n\n  public init() {\n    this.registered.clear();\n    this.all.forEach(hook => {\n      if (!this[hook]) {\n        this[hook] = (fn: HookFunction, ctx?: any) => {\n          if (!this.registered.has(hook)) {\n            this.registered.set(hook, new Set());\n          }\n          const set = this.registered.get(hook);\n\n          set.add({\n            ctx: ctx || {},\n            fn,\n          });\n        };\n      }\n    });\n  }\n\n  /**\n   * Do hook.\n   *\n   * Trigger registered hooks.\n   */\n  public do(name: HooksAll, ...args: any): Promise<any> {\n    if (this.registered.has(name)) {\n      // Let's start a chain of promises\n      let chain = Promise.resolve();\n\n      this.registered.get(name).forEach(hook => {\n        // Chain async hooks promisified\n        chain = chain.then(() => runAsync(hook.fn, hook.ctx)(...args));\n      });\n\n      return chain.catch(error => {\n        this.logger.debug(`Hook error [${name}]`);\n        this.logger.error(error);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  public clear(): void {\n    this.all.forEach(hook => {\n      delete this[hook];\n    });\n\n    this.init();\n  }\n\n  /**\n   * Help, print available and registered hooks.\n   */\n  public help(): void {\n    this.logger.info(`Available hooks: ${this.all.join(',')}`);\n    const registered: string[] = [];\n    this.registered.forEach((value, key) => registered.push(key));\n    this.logger.info(`Registered hooks: ${registered.join(',')}`);\n  }\n}\n\nconst hooks = new Hooks();\n\nexport { hooks };\n","/**\n * @barba/core/modules/ignore\n * <br><br>\n * ## Manage ignore options.\n *\n * - cache\n * - prefetch\n *\n * @module core/modules/ignore\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption } from '../defs';\n// Utils\nimport { pathToRegexp } from '../utils/helpers';\nimport { parse } from '../utils/url';\n\nexport class Ignore {\n  private _ignoreAll: boolean;\n  private _ignoreRegexes: RegExp[] = [];\n\n  constructor(ignore: IgnoreOption) {\n    if (typeof ignore === 'boolean') {\n      this._ignoreAll = ignore;\n    } else {\n      const paths = Array.isArray(ignore) ? ignore : [ignore];\n\n      this._ignoreRegexes = paths.map(p => pathToRegexp(p));\n    }\n  }\n\n  public checkHref(href: string): boolean {\n    if (typeof this._ignoreAll === 'boolean') {\n      return this._ignoreAll;\n    }\n\n    const { path } = parse(href);\n\n    return this._ignoreRegexes.some(regex => regex.exec(path) !== null);\n  }\n}\n","/**\n * @barba/core/modules/cache\n * <br><br>\n * ## Cache for storing URL / HTML.\n *\n * @module core/modules/cache\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { CacheAction, CacheRequest, ICacheData, IgnoreOption } from '../defs';\n// Modules\nimport { Ignore } from './Ignore';\n\nexport class Cache extends Ignore {\n  private _state: Map<string, ICacheData> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n  }\n\n  /**\n   * Set value to cache\n   */\n  public set(\n    href: string,\n    request: CacheRequest,\n    action: CacheAction\n  ): ICacheData {\n    this._state.set(href, {\n      action,\n      request,\n    });\n\n    return {\n      action,\n      request,\n    };\n  }\n\n  /**\n   * Get data from cache\n   */\n  public get(href: string): ICacheData {\n    return this._state.get(href);\n  }\n\n  /**\n   * Get request from cache\n   */\n  public getRequest(href: string): CacheRequest {\n    return this._state.get(href).request;\n  }\n\n  /**\n   * Get action from cache\n   */\n  public getAction(href: string): CacheAction {\n    return this._state.get(href).action;\n  }\n\n  /**\n   * Check if value exists into cache\n   */\n  public has(href: string): boolean {\n    /* istanbul ignore else */\n    if (this.checkHref(href)) {\n      return false;\n    }\n    return this._state.has(href);\n  }\n\n  /**\n   * Delete value from cache\n   */\n  public delete(href: string): boolean {\n    return this._state.delete(href);\n  }\n\n  /**\n   * Update cache value\n   */\n  public update(href: string, data: ICacheData): ICacheData {\n    const state = {\n      ...this._state.get(href),\n      ...data,\n    };\n    this._state.set(href, state);\n\n    return state;\n  }\n}\n","/**\n * @barba/core/modules/prevent\n * <br><br>\n * ## Prevent checks.\n *\n * - Gathers all the tests that allow Barba to work and play transitions\n *\n * @module core/modules/prevent\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption, Link, PreventCheck } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n// Utils\nimport { url } from '../utils';\n// Modules\nimport { Ignore } from './Ignore';\n\n/**\n * Make sure the browser supports `history.pushState`.\n */\nconst pushState: PreventCheck = () => !window.history.pushState;\n\n/**\n * Make sure there is an `el` and `href`.\n */\nconst exists: PreventCheck = ({ el, href }) => !el || !href;\n\n/**\n * If the user is pressing ctrl + click, the browser will open a new tab.\n */\nconst newTab: PreventCheck = ({ event }) =>\n  (event as KeyboardEvent).which > 1 ||\n  (event as KeyboardEvent).metaKey ||\n  (event as KeyboardEvent).ctrlKey ||\n  (event as KeyboardEvent).shiftKey ||\n  (event as KeyboardEvent).altKey;\n\n/**\n * If the link has `_blank` target.\n */\nconst blank: PreventCheck = ({ el }) =>\n  el.hasAttribute('target') && (el as Link).target === '_blank';\n\n/**\n * If the domain is the same (in order to avoid pushState cross origin security problem).\n * Note: SVGAElement do not have `protocol` neither `hostname` properties.\n */\nconst corsDomain: PreventCheck = ({ el }) =>\n  ((el as HTMLAnchorElement).protocol !== undefined &&\n    window.location.protocol !== (el as HTMLAnchorElement).protocol) ||\n  ((el as HTMLAnchorElement).hostname !== undefined &&\n    window.location.hostname !== (el as HTMLAnchorElement).hostname);\n\n/**\n * If the port is the same.\n * Note: SVGAElement do not have `port` property.\n */\nconst corsPort: PreventCheck = ({ el }) =>\n  (el as HTMLAnchorElement).port !== undefined &&\n  url.getPort() !== url.getPort((el as HTMLAnchorElement).href);\n\n/**\n * If the link has download attribute.\n */\nconst download: PreventCheck = ({ el }) =>\n  el.getAttribute && typeof el.getAttribute('download') === 'string';\n\n/**\n * If the links contains [data-barba-prevent] or [data-barba-prevent=\"self\"].\n */\nconst preventSelf: PreventCheck = ({ el }) =>\n  el.hasAttribute(`${schemaAttribute.prefix}-${schemaAttribute.prevent}`);\n\n/**\n * If some link ancestor contains [data-barba-prevent=\"all\"].\n */\nconst preventAll: PreventCheck = ({ el }) =>\n  Boolean(\n    el.closest(`[${schemaAttribute.prefix}-${schemaAttribute.prevent}=\"all\"]`)\n  );\n\n/**\n * If the link is the current URL.\n *\n * > Not in the test suite.\n */\nconst sameUrl: PreventCheck = ({ href }) =>\n  url.clean(href) === url.clean() && url.getPort(href) === url.getPort();\n\nexport class Prevent extends Ignore {\n  public suite: string[] = [];\n  public tests: Map<string, PreventCheck> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n    this.init();\n  }\n\n  public init(): void {\n    // Add defaults\n    this.add('pushState', pushState);\n    this.add('exists', exists);\n    this.add('newTab', newTab);\n    this.add('blank', blank);\n    this.add('corsDomain', corsDomain);\n    this.add('corsPort', corsPort);\n    this.add('download', download);\n    this.add('preventSelf', preventSelf);\n    this.add('preventAll', preventAll);\n\n    // Outside of the test suite\n    this.add('sameUrl', sameUrl, false);\n  }\n\n  public add(name: string, check: PreventCheck, suite: boolean = true): void {\n    this.tests.set(name, check);\n    suite && this.suite.push(name);\n  }\n\n  /**\n   * Run individual test\n   */\n  public run(name: string, el: Link, event: Event, href: string): boolean {\n    return this.tests.get(name)({\n      el,\n      event,\n      href,\n    });\n  }\n\n  /**\n   * Run test suite\n   */\n  public checkLink(el: Link, event: Event, href: string): boolean {\n    return this.suite.some(name => this.run(name, el, event, href));\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class BarbaError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    public error: Error,\n    public label = 'Barba error',\n    ...params: any[]\n  ) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    /* istanbul ignore else */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BarbaError);\n    }\n\n    this.name = 'BarbaError';\n  }\n}\n","/**\n * @barba/core/modules/store\n * <br><br>\n * ## Transitions store.\n *\n * - Resolve transition\n * - Manage rules\n *\n * @module core/modules/store\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  IRule,\n  IRules,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  RuleName,\n} from '../defs';\n\n// Modules\nimport { Logger } from './Logger';\n\nexport class Store {\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All registered transitions.\n   */\n  public all: ITransitionPage[] = [];\n  /**\n   * \"Page only\" registered transitions.\n   */\n  public page: ITransitionPage[] = [];\n  /**\n   * \"Once only\" registered transitions.\n   */\n  public once: ITransitionOnce[] = [];\n  /**\n   * Rules for transition resolution.\n   *\n   * Defaults:\n   *\n   * - namespace\n   * - custom\n   */\n  private _rules: IRule[] = [\n    {\n      name: 'namespace',\n      type: 'strings',\n    },\n    {\n      name: 'custom',\n      type: 'function',\n    },\n  ];\n\n  /**\n   * Init store.\n   */\n  constructor(transitions: ITransitionPage[] = []) {\n    /* istanbul ignore else */\n    if (transitions) {\n      // TODO: add check for valid transitions? criteria? (once || enter && leave)\n      this.all = this.all.concat(transitions);\n    }\n    this.update();\n  }\n\n  /**\n   * Add rule or transition.\n   */\n  public add(type: 'rule' | 'transition', data: any): void {\n    switch (type) {\n      case 'rule':\n        // TODO: check for valid rule\n        this._rules.splice(data.position || 0, 0, data.value);\n        break;\n      case 'transition':\n      default:\n        // TODO: check for valid transition\n        this.all.push(data);\n        break;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Resolve transition.\n   */\n  public resolve(\n    data: ITransitionData,\n    filters: ITransitionFilters = {}\n  ): ITransitionOnce | ITransitionPage {\n    // Filter on \"once\"\n    let transitions = filters.once ? this.once : this.page;\n\n    // Filter on \"self\"\n    if (filters.self) {\n      transitions = transitions.filter(t => t.name && t.name === 'self');\n    } else {\n      transitions = transitions.filter(t => !t.name || t.name !== 'self');\n    }\n\n    // All matching transition infos\n    const matching = new Map();\n\n    // Active = first of valid transitions\n    // sorted by directions (from/to, from || to, …)\n    const active = transitions.find(t => {\n      let valid = true;\n      const match = {};\n\n      if (filters.self && t.name === 'self') {\n        return true;\n      }\n\n      // Check rules\n      this._rules.reverse().forEach(rule => {\n        if (valid) {\n          valid = this._check(t, rule, data, match);\n          // From/to check\n          if (t.from && t.to) {\n            valid =\n              this._check(t, rule, data, match, 'from') &&\n              this._check(t, rule, data, match, 'to');\n          }\n          if (t.from && !t.to) {\n            valid = this._check(t, rule, data, match, 'from');\n          }\n          if (!t.from && t.to) {\n            valid = this._check(t, rule, data, match, 'to');\n          }\n        }\n      });\n\n      matching.set(t, match);\n\n      return valid;\n    });\n\n    const activeMatch = matching.get(active);\n    const transitionType = [];\n    if (filters.once) {\n      transitionType.push('once');\n    } else {\n      transitionType.push('page');\n    }\n    if (filters.self) {\n      transitionType.push('self');\n    }\n\n    if (activeMatch) {\n      // Log resolved transition\n      const infos: any[] = [active];\n      // Log if matching criteria\n      Object.keys(activeMatch).length > 0 && infos.push(activeMatch);\n\n      this.logger.info(\n        `Transition found [${transitionType.join(',')}]`,\n        ...infos\n      );\n    } else {\n      this.logger.info(`No transition found [${transitionType.join(',')}]`);\n    }\n\n    return active;\n  }\n\n  /**\n   * ### Update store.\n   *\n   * - Reorder transition by priorities\n   * - Get wait indicator\n   * - Get once transitions\n   */\n  public update(): void {\n    // Reorder by priorities\n    this.all = this.all\n      .map(t => this._addPriority(t))\n      .sort((a, b) => a.priority - b.priority)\n      .reverse()\n      .map(t => {\n        delete t.priority;\n\n        return t;\n      });\n    this.page = this.all.filter(\n      t => t.leave !== undefined || t.enter !== undefined\n    ) as ITransitionPage[];\n    this.once = this.all.filter(t => t.once !== undefined) as ITransitionOnce[];\n  }\n\n  /**\n   * ### Check if transition apply.\n   *\n   * Based on rule, page data and optional direction:\n   *\n   * 1. transition has no rule \"property\":\n   *    - always returns true\n   * 2. transition has rule \"property\":\n   *     - \"strings\" should be present on both side (transition + page) and match\n   *     - \"function\" should return true\n   */\n  private _check(\n    transition: ITransitionPage,\n    rule: IRule,\n    data: ITransitionData,\n    match: any,\n    direction?: 'from' | 'to'\n  ): boolean {\n    let isValid = true;\n    let hasMatch = false;\n    const t = transition;\n    const { name, type } = rule;\n    const strRule = name as IRules['strings'];\n    const objRule = name as IRules['object'];\n    const fnName = name as IRules['function'];\n    const base = direction ? t[direction] : t; // = t || t.from || t.to\n    const page = direction === 'to' ? data.next : data.current; // = current || next\n    const exist = direction ? base && base[name] : base[name];\n\n    // If transition rule exists\n    if (exist) {\n      switch (type) {\n        case 'strings':\n        default: {\n          // Array support\n          const names: string[] = Array.isArray(base[strRule])\n            ? (base[strRule] as string[])\n            : [base[strRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[strRule] && names.indexOf(page[strRule]) !== -1) {\n            hasMatch = true;\n          }\n          // If transition prop is different from current, not valid\n          if (names.indexOf(page[strRule]) === -1) {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'object': {\n          // Array support\n          const names: string[] = Array.isArray(base[objRule])\n            ? (base[objRule] as string[])\n            : [base[objRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[objRule]) {\n            if (\n              page[objRule].name &&\n              names.indexOf(page[objRule].name) !== -1\n            ) {\n              hasMatch = true;\n            }\n            // If transition prop is different from current, not valid\n            if (names.indexOf(page[objRule].name) === -1) {\n              isValid = false;\n            }\n          } else {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'function':\n          if (base[fnName](data)) {\n            hasMatch = true;\n          } else {\n            isValid = false;\n          }\n          break;\n      }\n\n      if (hasMatch) {\n        if (direction) {\n          match[direction] = match[direction] || {};\n          match[direction][name] = t[direction][name];\n        } else {\n          match[name] = t[name];\n        }\n      }\n    }\n\n    return isValid;\n  }\n\n  /**\n   * ### Calculate transition priority.\n   *\n   * Based on:\n   *\n   * - rule \"position\" (index) give tens, hundreds, thousands, …\n   * - from/to properties give units (0, 1 or 2)\n   */\n  private _calculatePriority(\n    t: ITransitionPage,\n    ruleName: RuleName,\n    ruleIndex: number\n  ): number {\n    let priority = 0;\n\n    if (\n      t[ruleName] ||\n      (t.from && t.from[ruleName]) ||\n      (t.to && t.to[ruleName])\n    ) {\n      priority += Math.pow(10, ruleIndex);\n\n      if (t.from && t.from[ruleName]) {\n        priority += 1;\n      }\n      if (t.to && t.to[ruleName]) {\n        priority += 2;\n      }\n    }\n\n    return priority;\n  }\n\n  private _addPriority(t: ITransitionPage): ITransitionPage {\n    t.priority = 0;\n    let priority = 0;\n\n    this._rules.forEach((rule, i) => {\n      const { name } = rule;\n      const index = i + 1;\n\n      priority += this._calculatePriority(t, name, index);\n    });\n\n    t.priority = priority;\n\n    return t;\n  }\n}\n","/**\n * @barba/core/modules/transitions\n * <br><br>\n * ## Transitions manager.\n *\n * - Handle hooks and transition lifecycle\n *\n * @module core/modules/transitions\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  HooksTransition,\n  HooksTransitionMap,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  Wrapper,\n} from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { dom, helpers, runAsync } from '../utils';\n// Modules\nimport { BarbaError } from './Error';\nimport { Logger } from './Logger';\nimport { Store } from './Store';\n\nexport class Transitions {\n  public logger: Logger = new Logger('@barba/core');\n  public store: Store;\n  private _running: boolean = false;\n\n  constructor(transitions: ITransitionPage[] = []) {\n    this.store = new Store(transitions);\n  }\n\n  /**\n   * Get resolved transition\n   *\n   * - based on data\n   */\n  public get(\n    data: ITransitionData,\n    filters?: ITransitionFilters\n  ): ITransitionOnce | ITransitionPage {\n    return this.store.resolve(data, filters);\n  }\n\n  /**\n   * Animation running status.\n   */\n  get isRunning(): boolean {\n    return this._running;\n  }\n  set isRunning(status: boolean) {\n    this._running = status;\n  }\n\n  /**\n   * Check for registered once transition(s).\n   */\n  get hasOnce(): boolean {\n    return this.store.once.length > 0;\n  }\n\n  /**\n   * Check for registered self transition.\n   */\n  get hasSelf(): boolean {\n    return this.store.all.some(t => t.name === 'self');\n  }\n\n  /**\n   * ### Wait indicator.\n   *\n   * Tells Barba to get next page data<br>\n   * before starting the resolution<br>\n   * because some registered transitions need<br>\n   * next page data to be resolved (eg: `sync: true`, `to: { namespace }`, …)\n   */\n  get shouldWait(): boolean {\n    return this.store.all.some(t => (t.to && !t.to.route) || t.sync);\n  }\n\n  /**\n   * ### Do \"once\" transition.\n   *\n   * Hooks: see [[HooksOnce]].\n   */\n  public async doOnce({\n    data,\n    transition,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionOnce;\n  }) {\n    const t = transition || {};\n    this._running = true;\n\n    try {\n      await this._doAsyncHook('beforeOnce', data, t);\n      await this.once(data, t);\n      await this._doAsyncHook('afterOnce', data, t);\n    } catch (error) {\n      this._running = false;\n\n      this.logger.debug('Transition error [before/after/once]');\n      this.logger.error(error);\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * ### Do \"page\" transition.\n   *\n   * Hooks: see [[HooksPage]].\n   *\n   * `sync: false` (default) order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. leave\n   * 4. afterLeave\n   * 5. beforeEnter\n   * 6. enter\n   * 7. afterEnter\n   * 8. after\n   *\n   * `sync: true` order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. beforeEnter\n   * 4. leave & enter\n   * 5. afterLeave\n   * 6. afterEnter\n   * 7. after\n   */\n  public async doPage({\n    data,\n    transition,\n    page,\n    wrapper,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionPage;\n    page: Promise<string | void>;\n    wrapper: Wrapper;\n  }) {\n    const t = transition || {};\n    const sync = t.sync === true || false;\n\n    this._running = true;\n\n    try {\n      // Check sync mode, wait for next content\n      if (sync) {\n        await helpers.update(page, data);\n      }\n\n      await this._doAsyncHook('before', data, t);\n\n      if (sync) {\n        try {\n          await this.add(data, wrapper);\n          // Before actions\n          await this._doAsyncHook('beforeLeave', data, t);\n          await this._doAsyncHook('beforeEnter', data, t);\n\n          // Actions\n          await Promise.all([this.leave(data, t), this.enter(data, t)]);\n\n          // After actions\n          await this._doAsyncHook('afterLeave', data, t);\n          await this._doAsyncHook('afterEnter', data, t);\n        } catch (error) {\n          // this.logger.debug('Transition error [sync]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(error, 'Transition error [sync]');\n          }\n        }\n      } else {\n        let leaveResult: any = false;\n\n        try {\n          // Leave\n          await this._doAsyncHook('beforeLeave', data, t);\n\n          leaveResult = await Promise.all([\n            this.leave(data, t),\n            helpers.update(page, data),\n          ]).then(values => values[0]);\n\n          await this._doAsyncHook('afterLeave', data, t);\n\n          // TODO: check here \"valid\" page result\n          // before going further\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/leave]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/leave]'\n            );\n          }\n        }\n\n        try {\n          // Enter\n          /* istanbul ignore else */\n          if (leaveResult !== false) {\n            await this.add(data, wrapper);\n\n            await this._doAsyncHook('beforeEnter', data, t);\n            await this.enter(data, t, leaveResult);\n            await this._doAsyncHook('afterEnter', data, t);\n          }\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/enter]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/enter]'\n            );\n          }\n        }\n      }\n\n      // Remove current contaienr\n      await this.remove(data);\n\n      await this._doAsyncHook('after', data, t);\n    } catch (error) {\n      this._running = false;\n\n      // If \"custom/specific\" barba error.\n      /* istanbul ignore else */\n      if (error.name && error.name === 'BarbaError') {\n        this.logger.debug(error.label);\n        this.logger.error(error.error);\n\n        throw error;\n      }\n\n      this.logger.debug('Transition error [page]');\n      this.logger.error(error);\n\n      throw error;\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * Once hook + async \"once\" transition.\n   */\n  public async once(data: ITransitionData, t: ITransitionOnce): Promise<void> {\n    await hooks.do('once', data, t);\n\n    return t.once ? runAsync(t.once, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Leave hook + async \"leave\" transition.\n   */\n  public async leave(data: ITransitionData, t: ITransitionPage): Promise<any> {\n    await hooks.do('leave', data, t);\n\n    return t.leave ? runAsync(t.leave, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Enter hook + async \"enter\" transition.\n   */\n  public async enter(\n    data: ITransitionData,\n    t: ITransitionPage,\n    leaveResult?: any\n  ): Promise<void> {\n    await hooks.do('enter', data, t);\n\n    return t.enter\n      ? runAsync(t.enter, t)(data, leaveResult)\n      : Promise.resolve();\n  }\n\n  /**\n   * Add next container.\n   */\n  public async add(data: ITransitionData, wrapper: Wrapper): Promise<void> {\n    dom.addContainer(data.next.container, wrapper);\n    hooks.do('nextAdded', data);\n  }\n\n  /**\n   * Remove current container.\n   */\n  public async remove(data: ITransitionData): Promise<void> {\n    dom.removeContainer(data.current.container);\n    hooks.do('currentRemoved', data);\n  }\n\n  private _isTransitionError(error: any) {\n    if (error.message) {\n      // Errors from request\n      return !/Timeout error|Fetch error/.test(error.message);\n    }\n\n    if (error.status) {\n      // Errors from request\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Do hooks + async transition methods.\n   */\n  private async _doAsyncHook(\n    hook: HooksTransition,\n    data: ITransitionData,\n    t: HooksTransitionMap\n  ): Promise<void> {\n    await hooks.do(hook, data, t);\n\n    return t[hook] ? runAsync(t[hook], t)(data) : Promise.resolve();\n  }\n}\n","/**\n * @barba/core/modules/views\n * <br><br>\n * ## Views manager.\n *\n * @module core/modules/views\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HooksView, IView, IViewData } from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { runAsync } from '../utils';\n// Types\ntype Hook = (data: IViewData) => Promise<void>;\n\nexport class Views {\n  /**\n   * Available hook names for views.\n   */\n  public names: HooksView[] = [\n    'beforeLeave',\n    'afterLeave',\n    'beforeEnter',\n    'afterEnter',\n  ];\n  /**\n   * Registered views by namespace.\n   */\n  public byNamespace: Map<string, IView> = new Map();\n\n  /**\n   * Init views.\n   */\n  constructor(views: IView[]) {\n    if (views.length === 0) {\n      return;\n    }\n\n    // TODO: add check\n    // for valid views? criteria? (namespace property, string ?)\n    // or duplicate\n    views.forEach(view => {\n      this.byNamespace.set(view.namespace, view);\n    });\n\n    this.names.forEach(name => {\n      hooks[name](this._createHook(name));\n    });\n  }\n\n  /**\n   * Create the hook method.\n   *\n   * - get view based on namespace\n   * - execute callback with transition data\n   */\n  private _createHook(name: HooksView): Hook {\n    return data => {\n      const { namespace } = name.match(/enter/i) ? data.next : data.current;\n      const view = this.byNamespace.get(namespace);\n\n      // TODO: manage self…\n      // if (view && data.trigger !== 'self') {\n      if (view && view[name]) {\n        return runAsync(view[name], view)(data);\n      }\n\n      return Promise.resolve();\n    };\n  }\n}\n","// Element.prototype.matches polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    (Element as any).prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n}\n\n// Element.prototype.closest polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function closest(s: string) {\n    let el = this;\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = (el.parentElement || el.parentNode) as Element;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n","/**\n * @module core/schemas\n */\n\n// Definitions\nimport { ISchemaPage } from '../defs';\n\n/**\n * See [[ISchemaPage]]\n */\nexport const schemaPage: ISchemaPage = {\n  container: null,\n  html: '',\n  namespace: '',\n  url: {\n    hash: '',\n    href: '',\n    path: '',\n    port: null,\n    query: {},\n  },\n};\n","/**\n * @barba/core\n * <br><br>\n * ## Barba core object\n *\n * Main methods:\n *\n * - `.init()` for initialization with options\n * - `.use()` for plugins\n *\n * @module core\n */\n\n/***/\n\nimport { version } from '../package.json';\n// Definitions\nimport {\n  IBarbaOptions,\n  IBarbaPlugin,\n  IgnoreOption,\n  ISchemaPage,\n  ITransitionData,\n  ITransitionOnce,\n  ITransitionPage,\n  Link,\n  LinkEvent,\n  RequestCustomError,\n  RequestErrorOrResponse,\n  SchemaAttributeValues,\n  Trigger,\n  Wrapper,\n} from './defs';\n// Hooks\nimport { hooks } from './hooks';\n// Modules\nimport { Cache } from './modules/Cache';\nimport { Logger } from './modules/Logger';\nimport { Prevent } from './modules/Prevent';\nimport { Transitions } from './modules/Transitions';\nimport { Views } from './modules/Views';\n// Polyfills\nimport './polyfills';\n// Schemas\nimport { schemaAttribute } from './schemas/attribute';\nimport { schemaPage } from './schemas/page';\n// Utils\nimport { dom, helpers, history, request, url } from './utils';\n\nexport class Core {\n  /**\n   * Version.\n   */\n  public version: string = version;\n  /**\n   * Schemas.\n   */\n  public schemaPage: ISchemaPage = schemaPage;\n  /**\n   * Logger class, allows plugins to create Logger.\n   */\n  public Logger: typeof Logger = Logger;\n  /**\n   * Barba logger.\n   */\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * Plugins.\n   */\n  public plugins: Array<IBarbaPlugin<any>> = [];\n  /**\n   * Options\n   */\n  public timeout: number;\n  public cacheIgnore: IgnoreOption;\n  public prefetchIgnore: IgnoreOption;\n  public preventRunning: boolean;\n  /**\n   * Hooks\n   */\n  public hooks = hooks;\n  /**\n   * Modules.\n   */\n  // public history: History;\n  public cache: Cache;\n  public prevent: Prevent;\n  public transitions: Transitions;\n  public views: Views;\n  /**\n   * Utils.\n   */\n  public dom = dom;\n  public helpers = helpers;\n  public history = history;\n  public request = request;\n  public url = url;\n\n  private _data: ITransitionData;\n  private _requestCustomError: RequestCustomError;\n  private _wrapper: Wrapper;\n\n  /**\n   * ### Init plugin with options.\n   *\n   * See [[IBarbaPlugin]] for more details.\n   */\n  public use<T>(plugin: IBarbaPlugin<T>, options?: T): void {\n    const installedPlugins = this.plugins;\n\n    // Plugin installation\n    if (installedPlugins.indexOf(plugin) > -1) {\n      this.logger.warn(`Plugin [${plugin.name}] already installed.`);\n\n      return;\n    }\n\n    if (typeof plugin.install !== 'function') {\n      this.logger.warn(`Plugin [${plugin.name}] has no \"install\" method.`);\n\n      return;\n    }\n\n    plugin.install(this, options);\n    installedPlugins.push(plugin);\n  }\n\n  /**\n   * ### Init barba with options.\n   *\n   * See [[IBarbaOptions]] for more details.\n   *\n   * Default values are:\n   *\n   * - transitions: `[]`\n   * - views: `[]`\n   * - schema: [[SchemaAttribute]]\n   * - timeout: `2e3`\n   * - cacheIgnore: `false`\n   * - prefetchIgnore: `false`\n   * - preventRunning: `false`\n   * - prevent: `null`,\n   * - debug: `false`\n   * - logLevel: `'debug'`\n   */\n  public init(\n    /** @ignore */ {\n      transitions = [],\n      views = [],\n      schema = schemaAttribute,\n      requestError,\n      timeout = 2e3,\n      cacheIgnore = false,\n      prefetchIgnore = false,\n      /* istanbul ignore next */\n      preventRunning = false,\n      prevent: preventCustom = null,\n      debug = false,\n      logLevel = 'off',\n    }: IBarbaOptions = {}\n  ) {\n    // 0. Set logger level and print version\n    Logger.setLevel(debug === true ? 'debug' : logLevel);\n    this.logger.info(this.version);\n\n    // 1. Manage options\n    Object.keys(schema).forEach(k => {\n      const attr = k as SchemaAttributeValues;\n\n      /* istanbul ignore else */\n      if (schemaAttribute[attr]) {\n        schemaAttribute[attr] = schema[attr];\n      }\n    });\n    this._requestCustomError = requestError;\n    this.timeout = timeout;\n    this.cacheIgnore = cacheIgnore;\n    this.prefetchIgnore = prefetchIgnore;\n    this.preventRunning = preventRunning;\n\n    // 2. Get and check wrapper\n    this._wrapper = this.dom.getWrapper();\n    if (!this._wrapper) {\n      throw new Error('[@barba/core] No Barba wrapper found');\n    }\n    this._wrapper.setAttribute('aria-live', 'polite'); // A11y\n\n    // 3. Init pages (get \"current\" data)\n    this._resetData();\n\n    const { current } = this.data;\n\n    if (!current.container) {\n      throw new Error('[@barba/core] No Barba container found');\n    }\n\n    // 4. Init other modules\n    this.cache = new Cache(cacheIgnore);\n    this.prevent = new Prevent(prefetchIgnore);\n    this.transitions = new Transitions(transitions);\n    this.views = new Views(views);\n\n    // Add prevent custom\n    if (preventCustom !== null) {\n      if (typeof preventCustom !== 'function') {\n        throw new Error('[@barba/core] Prevent should be a function');\n      }\n\n      this.prevent.add('preventCustom', preventCustom);\n    }\n\n    // 5. Use \"current\" data\n    // Init history\n    this.history.init(current.url.href, current.namespace);\n    // Add to cache\n    // TODO: do not cache renderer HTML, only request results…\n    // this.cache.set(current.url.href, Promise.resolve(current.html), 'init');\n\n    // 6. Bind context\n    this._onLinkEnter = this._onLinkEnter.bind(this);\n    this._onLinkClick = this._onLinkClick.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n    this._bind();\n\n    // 7. Init plugins\n    this.plugins.forEach(plugin => plugin.init());\n\n    // 8. Barba ready\n    // Set next + trigger for once and `beforeEnter`/`afterEnter` view on page load.\n    const onceData = this.data;\n\n    onceData.trigger = 'barba';\n    onceData.next = onceData.current;\n    onceData.current = { ...this.schemaPage };\n    this.hooks.do('ready', onceData);\n\n    // 9. Finally, do once…\n    this.once(onceData);\n\n    // Clean data for first barba transition…\n    this._resetData();\n  }\n\n  public destroy(): void {\n    this._resetData();\n    this._unbind();\n    this.history.clear();\n    this.hooks.clear();\n    this.plugins = [];\n  }\n\n  get data(): ITransitionData {\n    return this._data;\n  }\n\n  get wrapper(): HTMLElement {\n    return this._wrapper;\n  }\n\n  /**\n   * ### Force a page change without Barba transition.\n   */\n  public force(href: string): void {\n    // DEV\n    // Can be used waiting animation cancellation management…\n    window.location.assign(href);\n  }\n\n  /**\n   * ### Go for a Barba transition.\n   *\n   * Manage \"self page\" href:\n   *\n   * - if same url and no self transition, keep default behavior\n   *   - link: reload the page\n   *   - anchor: scroll to\n   * - if same url with self transition, use it\n   * - then start a page transition.\n   */\n  public go(\n    href: string,\n    trigger: Trigger = 'barba',\n    e?: LinkEvent | PopStateEvent\n  ): Promise<void> {\n    // If animation running, force reload\n    if (this.transitions.isRunning) {\n      this.force(href);\n\n      return;\n    }\n\n    let self = false;\n\n    // Check prevent sameURL against current history\n    // + state check\n    // + update trigger with direction\n    if (trigger === 'popstate') {\n      self =\n        this.history.current &&\n        this.url.getPath(this.history.current.url) === this.url.getPath(href);\n    } else {\n      self = this.prevent.run('sameUrl', null, null, href);\n    }\n\n    if (self && !this.transitions.hasSelf) {\n      return;\n    }\n\n    trigger = this.history.change(href, trigger, e);\n\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    return this.page(href, trigger, self);\n  }\n\n  /**\n   * ### Start an \"once\" transition.\n   *\n   * If some registered \"once\" transition,\n   * get the \"resolved\" transition from the store and start it.\n   */\n  public async once(readyData: ITransitionData): Promise<void> {\n    await this.hooks.do('beforeEnter', readyData);\n\n    // Check if once transition\n    if (this.transitions.hasOnce) {\n      const transition = this.transitions.get(readyData, {\n        once: true,\n      }) as ITransitionOnce;\n\n      await this.transitions.doOnce({ transition, data: readyData });\n    }\n\n    await this.hooks.do('afterEnter', readyData);\n  }\n\n  /**\n   * ### Start a \"page\" transition.\n   *\n   * 1. If no running transition, updates data with full URL properties and trigger.\n   * 2. Get page from cache or init request.\n   * 3. Wait if some transitions need \"next\" data (`sync: true`, `to: …`).\n   * 4. Manage the history, depending on trigger.\n   * 5. Get \"data\" and trigger \"go\" hook.\n   * 6. Get the \"resolved\" transition from the store and start it.\n   * 7. Update title and reset data (current, next = undefined).\n   *\n   * > If \"self\", use the \"self\" transition\n   */\n  public async page(\n    href: string,\n    trigger: Trigger,\n    self: boolean\n  ): Promise<void> {\n    this.data.next.url = {\n      href,\n      ...this.url.parse(href),\n    };\n    this.data.trigger = trigger;\n\n    const page = this.cache.has(href)\n      ? this.cache.update(href, { action: 'click' }).request\n      : this.cache.set(\n          href,\n          this.request(\n            href,\n            this.timeout,\n            this.onRequestError.bind(this, trigger)\n          ),\n          'click'\n        ).request;\n\n    // Need to wait before getting the right transition\n    if (this.transitions.shouldWait) {\n      await helpers.update(page, this.data);\n    }\n\n    const data = this.data;\n\n    // Hook: between trigger and transition\n    // Can be used to resolve \"route\"…\n    await this.hooks.do('page', data);\n\n    try {\n      const transition = this.transitions.get(data, {\n        once: false,\n        self,\n      }) as ITransitionPage;\n\n      await this.transitions.doPage({\n        data,\n        page,\n        transition,\n        wrapper: this._wrapper,\n      });\n\n      this._resetData();\n    } catch (error) {\n      // Something went wrong (rejected promise, error, 404, 505, other…)\n      // TODO: manage / use cases for cancellation\n      // this.logger.debug('Transition cancelled');\n\n      // If transition error and no debug mode, force reload page.\n      /* istanbul ignore else */\n      if (Logger.getLevel() === 0) {\n        this.force(data.current.url.href);\n      }\n    }\n  }\n\n  /**\n   * When a request error occurs.\n   *\n   * Allow the user to manage request error. (E.g: 404)\n   */\n  public onRequestError(trigger: Trigger, ...args: any): boolean {\n    // Cancel transition status\n    this.transitions.isRunning = false;\n\n    const [href, response]: [string, RequestErrorOrResponse] = args;\n    const action = this.cache.getAction(href);\n    this.cache.delete(href);\n\n    // Custom requestError returning false will return here.\n    if (\n      this._requestCustomError &&\n      this._requestCustomError(trigger, action, href, response) === false\n    ) {\n      return false;\n    }\n\n    // Force page change\n    if (action === 'click') {\n      this.force(href);\n    }\n    return false;\n  }\n\n  /**\n   * Programmatically prefetch\n   */\n  public prefetch(href: string) {\n    // Already in cache\n    /* istanbul ignore next */\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, 'barba')\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'prefetch'\n    );\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _bind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.addEventListener('mouseover', this._onLinkEnter);\n      document.addEventListener('touchstart', this._onLinkEnter);\n    }\n    document.addEventListener('click', this._onLinkClick);\n    window.addEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _unbind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.removeEventListener('mouseover', this._onLinkEnter);\n      document.removeEventListener('touchstart', this._onLinkEnter);\n    }\n    document.removeEventListener('click', this._onLinkClick);\n    window.removeEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * When a element is entered.\n   *\n   * Get valid link element.\n   * Cache URL if needed.\n   */\n  private _onLinkEnter(e: LinkEvent): void {\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    const href = this.dom.getHref(link);\n\n    if (this.prevent.checkHref(href)) {\n      return;\n    }\n\n    // Already in cache\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, link)\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'enter'\n    );\n  }\n\n  /**\n   * When an element is clicked.\n   *\n   * Get valid link element.\n   * Prevent same URL.\n   * Go for a Barba transition.\n   */\n  private _onLinkClick(e: LinkEvent): void {\n    // This use `prevent.checkLink` under the hood to get eligible link.\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    if (this.transitions.isRunning && this.preventRunning) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      return;\n    }\n\n    this.go(this.dom.getHref(link), link, e);\n  }\n\n  /**\n   * When History state changes.\n   *\n   * Get \"href\" from URL\n   * Go for a Barba transition.\n   */\n  private _onStateChange(e: PopStateEvent): void {\n    this.go(this.url.getHref(), 'popstate', e);\n  }\n\n  /**\n   * Get a valid link ancestor.\n   *\n   * Check for a \"href\" attribute.\n   * Then check if eligible for Barba.\n   */\n  private _getLinkElement(e: LinkEvent): Link {\n    let el = e.target as Link;\n\n    while (el && !this.dom.getHref(el)) {\n      el = (el as HTMLElement).parentNode as Link;\n    }\n\n    // Check prevent\n    if (!el || this.prevent.checkLink(el, e, this.dom.getHref(el))) {\n      return;\n    }\n\n    return el;\n  }\n\n  /**\n   * Reset pages data.\n   *\n   * Set \"current\" and unset \"next\".\n   */\n  private _resetData() {\n    const href = this.url.getHref();\n    const current = {\n      container: this.dom.getContainer(),\n      html: this.dom.getHtml(),\n      namespace: this.dom.getNamespace(),\n      url: {\n        href,\n        ...this.url.parse(href),\n      },\n    };\n\n    this._data = {\n      current,\n      next: { ...this.schemaPage },\n      trigger: undefined,\n    };\n\n    this.hooks.do('reset', this.data);\n  }\n}\n\nconst core = new Core();\n\nexport default core;\n","import { gsap } from 'gsap';\nimport $ from \"jquery\";\n\nimport ScreenLoader from '../views/ScreenLoader.js';\nwindow.loadingScreen = new ScreenLoader(.25, .25);\n\n\nwindow.barbaDefaultTransition = {\n  name: 'loadingScreen',\n  sync: false,\n  before: function (data) {\n    var done = this.async();\n    window.menuNav.hide().then(function (res) {\n\n      window.loadingScreen.show().then(function (res) {\n        done();\n        window.appEvent.trigger('app:barba:beforeDone');\n        window.appEvent.trigger('app:barba:beforeEnter');\n\n\n      });\n    });\n\n  },\n  beforeLeave: function (data) {\n    //var  done = this.async();\n\n  },\n  afterLeave: function (data) {\n  },\n  beforeEnter: function (data) {\n    var done = this.async();\n    window.imageLoader.load(data.next.container, function () {\n      done();\n    });\n  },\n  enter: function (data) {\n    appEvent.trigger('app:launcEnterAnimation');\n\n    gsap.set(data.next.container, { autoAlpha: 1 });\n    window.appEvent.trigger('app:transition:isEnter');\n    window.appEvent.trigger('app:transition:after');\n\n\n\n  },\n  after: function (data) {\n    var done = this.async();\n    window.appEvent.trigger('app:transition:after');\n    window.loadingScreen.hide().then(function () {\n      done()\n    });\n\n  }\n\n};\n","import { gsap } from 'gsap';\nexport default function ScreenLoader(timingIn, timingOut) {\n  gsap.set($('*[data-barba-loadingscreen]'), { autoAlpha: 0 });\n  this.show = function () {\n    return new Promise(function (resolve) {\n      let tl = gsap.timeline({\n        repeat: 0,\n        paused: true,\n        onComplete: function () {\n          resolve(true)\n\n\n        }\n      });\n      $('*[data-barba-loadingscreen]').addClass('active')\n      tl.fromTo('*[data-barba-loadingscreen]',\n        {\n          autoAlpha: 0,\n\n          duration: timingIn,\n          ease: \"power2.in\",\n\n        },\n        {\n          autoAlpha: 1,\n\n          duration: timingIn,\n          ease: \"power2.in\",\n\n        });\n\n\n      tl.play();\n    }, 'hide');\n  }\n  this.hide = function () {\n    return new Promise(function (resolve) {\n\n      let tl = gsap.timeline({\n        repeat: 0,\n        paused: true,\n        onStart: function () {\n          appEvent.trigger('app:threejsAnimation:start');\n\n\n\n        },\n        onComplete: function () {\n          resolve(true);\n\n\n\n          $('*[data-barba-loadingscreen]').removeClass('active')\n        }\n      });\n      tl.fromTo('*[data-barba-loadingscreen]',\n        {\n          autoAlpha: 1,\n\n          duration: timingOut,\n          ease: \"power2.in\",\n\n        },\n        {\n          autoAlpha: 0,\n\n          duration: timingOut,\n          ease: \"power2.in\",\n\n        });\n      tl.play();\n      appEvent.trigger('app:threejsAnimation:start');\n      return;\n\n\n\n\n    }, 'show');\n\n  }\n}\n","import FetchContent from '../fetch.js';\n\nexport default function Router(instance,router){\n  window.views= [];\n  window.routes = [];\n\n  this.instance = instance\n  this.router = router;\n  let ajaxifyRoutes = data.ajaxify.routes;\n    ajaxifyRoutes.forEach(function(elements){\n        let route = new Object;\n        route.path = elements[0];\n        route.name = elements[1] + elements[2].charAt(0).toUpperCase() + elements[2].slice(1);\n        window.routes.push(route)\n\n        window.views.push({\n            namespace: route.name,\n            beforeEnter(data) {\n                var  done = this.async();\n                FetchContent(elements[1]).then(function(res){\n                    if (window[elements[1]]){\n                        window[elements[1]][elements[2]]();\n                        window.controller = elements[1];\n                    }\n                    done();\n\n                });\n            }\n        });\n    })\n\n}\n","\nexport default function FetchContent(res) {\n\n  return new Promise(function (resolve) {\n\n    const cssPromise = new Promise((resolve) => {\n      import(/*webpackMode:\"lazy\"*/ /* webpackChunkName: \"[request]\" */ `../scss/modules/${res}.scss`).then(() => {\n        console.log(\"Loaded CSS\", res);\n        resolve(true)\n      }, (err) => {\n        console.log(\"Error\", err)\n        resolve(true)\n\n      })\n\n    })\n    const jsPromise = new Promise((resolve) => {\n      import(/*webpackMode:\"lazy\"*/ /* webpackChunkName: \"[request]\" */ `./controllers/${res}`).then(() => {\n        console.log(\"Loaded JS\", res);\n        resolve(true)\n      }, (err) => {\n        console.log(\"Error\", err)\n        resolve(true)\n\n      })\n\n    })\n    Promise.all([cssPromise, jsPromise]).then(() => {\n      resolve(true);\n    })\n\n  })\n\n}\n","import $ from \"jquery\";\n\nexport default class AppEventComponent {\n    constructor() {\n        // handlers\n        this.handlers = {};\n        this.resizeHandlers = {};\n\n        // init\n        this._init();\n    }\n\n    reset() {\n\n    }\n\n    add(handler, handlers = false) {\n        if (!handlers) handlers = this.handlers;\n        let handlerStr = handler.toString();\n        if (handlerStr in handlers) {\n            return handlers[handlerStr];\n        }\n        else {\n            handlers[handlerStr] = handler;\n            return handler;\n        }\n    }\n\n    remove(handler) {\n        let handlerStr = handler.toString();\n        if (handlerStr in this.handlers) {\n            delete this.handlers.handlerStr;\n        }\n    }\n\n    listen(command, handler, newGlobal = null) {\n        handler = this.add(handler);\n        $(document).off(command, handler).on(command, handler);\n\n        return this;\n    }\n\n    resize(handler, newGlobal = null) {\n        this.add(handler, this.resizeHandlers);\n        return this;\n    }\n\n    trigger(events, args = null) {\n        if (events == 'resize') {\n            //this._resizeHandler();\n        }\n        else if (events.indexOf(':') !== -1) {\n            args = args || [];\n            $(document).trigger(events, args);\n        }\n        return this;\n    }\n\n    _resizeHandler() {\n        // load all scripts\n        let i;\n        for (i in this.resizeHandlers) {\n            this.resizeHandlers[i]();\n        }\n    }\n\n    _init() {\n\n        // resize\n        let cachedWidth = window.innerWidth;\n        let cachedHeight = window.innerHeight;\n        $(window).on('resize orientationchange', () => {\n            let newWidth = window.innerWidth;\n            let newHeight = window.innerHeight;\n            if (newWidth !== cachedWidth || newHeight !== cachedHeight) {\n                // new width\n                cachedWidth = newWidth;\n                cachedHeight = newHeight;\n\n                this._resizeHandler();\n            }\n        });\n    }\n\n    _isFunction(functionToCheck) {\n        return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n    }\n}\n","import $ from \"jquery\";\nexport default class FormComponent {\n    constructor() {\n        this.recaptchaRenders = {};\n        this.timout = false;\n        this.loaded = false;\n        this.recaptchaIsRenders = false;\n\n    }\n    initGlobal() {\n        this._ajaxForm();\n        this._ajaxFormMessage();\n        this._goForm()\n\n    }\n    initView() {\n        if ($().parsley) {\n            console.log('formcomponent initialize parsley');\n            $(\"[data-form],[data-form-message],[data-form-go]\").parsley({\n                //excluded: \"input[type=button], input[type=submit], input[type=reset], input[type=hidden], [disabled], :hidden\",\n                errorsContainer: function (pEle) {\n\n                    if (pEle.$element.is('select') && pEle.$element.next('.select2').length > 0) {\n                        if (pEle.$element.next('select2errorsContainer').length == 0) {\n                            pEle.$element.next('.select2').after('<div class=\"select2errorsContainer\"></div>');\n                        }\n                        return pEle.$element.next().next();\n                    }\n\n                }\n            });\n        }\n\n        // générer les recaptcha\n        $('[data-form], [data-form-message]').find('[data-recaptcha]').each((i, element) => {\n            let $this = $(element);\n            if ($this.find('.grecaptcha-badge').length > 0) return true;\n            let $form = $this.parents('form[data-form-message], form[data-form]');\n\n            let command = $form.is('[data-form-message]') ? 'formMessage' : 'form';\n            $this.attr('id', 'recaptcha-' + command + '-' + this._createUID());\n            this._redendRecaptcha($form).then(() => {\n                this._render($this, command, $form, this.recaptchaRenders)\n            })\n        });\n\n    }\n    _render($el, command, $form) {\n\n        this.recaptchaRenders[$el.attr('id')] = grecaptcha.render($el.attr('id'), {\n            \"sitekey\": data.recaptchaKey,\n            \"badge\": \"inline\",\n            \"hl\": 'fr',\n            \"type\": \"image\",\n            \"size\": \"invisible\",\n            \"callback\": () => {\n                this._formSubmit(command, $form[0]);\n            }\n        });\n    }\n    _redendRecaptcha($form) {\n        return new Promise((resolve) => {\n\n            // remove focus to avoid js error:\n            if (this.recaptchaIsRenders == false) {\n                $form.find('input,select,textarea').one('focus',\n                    () => {\n                        this._initCaptcha(this.timout).then(() => {\n                            resolve(true);\n                            this.recaptchaIsRenders = true\n\n                        })\n                    })\n            } else {\n                resolve(true);\n            }\n\n        });\n\n\n\n\n\n    }\n    _initCaptcha(timout = false) {\n\n        return new Promise((resolve) => {\n            if ($('#lazyReacptcha').length == 0) {\n\n                let head = document.getElementsByTagName('head')[0]\n                let script = document.createElement('script')\n                script.id = 'lazyReacptcha';\n                script.type = 'text/javascript';\n                script.src = 'https://www.google.com/recaptcha/api.js?render=explicit';\n                head.appendChild(script);\n\n            }\n            let captchaScript = document.getElementById('lazyReacptcha')\n            captchaScript.onload = () => {\n                grecaptcha.ready(() => {\n                    if (typeof grecaptcha === 'undefined') {\n                        // window.__grecaptcha_cfg is a global variable that stores reCAPTCHA's\n                        // configuration. By default, any functions listed in its 'fns' property\n                        // are automatically executed when reCAPTCHA loads.\n                    } else {\n                        resolve(true)\n                    }\n                });\n            };\n        });\n\n    }\n    _goForm() {\n        $('body').on(\"submit\", \"form[data-form-go]\", (e) => {\n            e.preventDefault();\n            let $form = $(e.currentTarget);\n\n            window.barba.go($form.attr('action') + '?' + $form.serialize());\n        });\n    }\n\n\n    _ajaxForm() {\n        $('body').on(\"submit\", \"form[data-form]\", (e) => {\n            e.preventDefault();\n            let $form = $(e.currentTarget);\n            $form.addClass('is-processing')\n\n            if ($form.find('[data-recaptcha]').length > 0) {\n\n                grecaptcha.execute(this.recaptchaRenders[$form.find('[data-recaptcha]').attr('id')]);\n            }\n            else {\n                this._formSubmit('form', e.currentTarget)\n            }\n        });\n    };\n\n    _ajaxFormMessage() {\n        $('body').on(\"submit\", \"form[data-form-message]\", (e) => {\n            e.preventDefault();\n            let $form = $(e.currentTarget);\n            $form.addClass('is-processing')\n            if ($form.find('[data-recaptcha]').length > 0) {\n                console.log(this.recaptchaRenders, $form.find('[data-recaptcha]').attr('id'));\n                console.log(this.recaptchaRenders, $form.find('[data-recaptcha]').attr('id'));\n                grecaptcha.reset(this.recaptchaRenders, $form.find('[data-recaptcha]').attr('id'));\n                grecaptcha.execute(this.recaptchaRenders[$form.find('[data-recaptcha]').attr('id')]);\n            }\n            else {\n                this._formSubmit('formMessage', e.currentTarget)\n            }\n        });\n    }\n\n    _formSubmit(command, el) {\n        let $form = $(el);\n        let name = $form.data('form-message') ? $form.data('form-message') : $form.data('form');\n        let method = $form.attr('method');\n        let formData = new FormData(el);\n\n        if (method == 'get') {\n            formData = $form.serialize();\n        }\n\n\n        if ($form.find('[data-recaptcha]').length == 0 || true) {\n            if (name != '') {\n                window.appEvent.trigger(command + ':' + name + ':process', [$form]);\n            }\n            $form.addClass('is-processing')\n            window.appEvent.trigger(command + ':ajax:process', [$form]);\n        }\n        const lang = document.documentElement.lang;\n        let currentLanguage = 'fr'\n        switch (lang) {\n            case 'nl-BE':\n                currentLanguage = 'nl'\n                break;\n            case 'en-US':\n                currentLanguage = 'en'\n                break;\n            case 'en-GB':\n                currentLanguage = 'en'\n                break;\n        }\n\n        $.ajax({\n            url: $form.attr('action') ? $form.attr('action') : $form.attr('data-action'),\n            type: method,\n            data: formData,\n            success: (response) => {\n                if ($form.find('[data-recaptcha]').length > 0) {\n                    grecaptcha.reset(this.recaptchaRenders[$form.find('[data-recaptcha]').attr('id')]);\n                }\n                $form.removeClass('is-processing')\n\n                if (name != '') {\n                    window.appEvent.trigger(command + ':' + name + ':success', [\n                        response,\n                        $form\n                    ]);\n                }\n                window.appEvent.trigger(command + ':ajax:success', [\n                    response,\n                    $form\n                ]);\n                if ($form.attr('data-redirect')) {\n                    window.barba.instance.force($form.attr('data-redirect'))\n                }\n            },\n            error: (xhr, status) => {\n\n                $form.removeClass('is-processing')\n\n                if (name != '') {\n                    window.appEvent.trigger(command + ':' + name + ':error', [$form]);\n                }\n                window.appEvent.trigger(command + ':ajax:error', [$form]);\n\n            },\n            contentType: false,\n            processData: false\n        });\n    }\n\n    _createUID() {\n        var dt = new Date().getTime();\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    }\n}\n","export default function FormMessage (){\n    this.init = function(){\n      window.appEvent.listen('formMessage:ajax:process',function(data,el){\n        $(el).addClass('is-processing');\n        $(el).removeClass('form-error');\n        $(el).removeClass('form-success');\n        $(el).find('[data-form-message-success], [data-form-message-error]').attr('style', '');\n      });\n      window.appEvent.listen('formMessage:ajax:success',function(data,response,el){\n        $(el).removeClass('is-processing');\n        $(el).find('input:not([type=\"hidden\"]), textarea').val('');\n        $(el).find('input[type=\"checkbox\"]').prop('checked',false);\n  \n        if (response == true || response === 1 || response === '1' || response.success === true){\n          $(el).addClass('form-success');\n          $(el).removeClass('form-error');\n  \n          if($(el).find('[data-form-message-success]').length > 0)\n          {\n            $(el).find('[data-form-message-success]').slideDown(300,function(){\n              setTimeout(() => {\n                $(el).find('[data-form-message-success]').slideUp(300);\n              }, 3000);\n            })\n          }\n        }\n        else\n        {\n          $(el).removeClass('form-success');\n          $(el).addClass('form-error');\n  \n          if($(el).find('[data-form-message-error]').length > 0)\n          {\n            $(el).find('[data-form-message-error]').slideDown(300);\n          }\n        }\n      })\n      window.appEvent.listen('formMessage:ajax:error',function(data,el){\n        $(el).removeClass('is-processing');\n        $(el).addClass('form-error');\n        $(el).removeClass('form-success');\n      });\n    }\n  }","/*!\n* Parsley.js\n* Version 2.9.2 - built Tue, Dec 10th 2019, 6:18 pm\n* http://parsleyjs.org\n* Guillaume Potier - <guillaume@wisembly.com>\n* Marc-Andre Lafortune - <petroselinum@marc-andre.ca>\n* MIT Licensed\n*/\n\n// The source code below is generated by babel as\n// Parsley is written in ECMAScript 6\n//\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery')) :\n  typeof define === 'function' && define.amd ? define(['jquery'], factory) :\n  (global = global || self, global.parsley = factory(global.jQuery));\n}(this, (function ($) { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n      return;\n    }\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n\n  var globalID = 1;\n  var pastWarnings = {};\n  var Utils = {\n    // Parsley DOM-API\n    // returns object from dom attributes and values\n    attr: function attr(element, namespace, obj) {\n      var i;\n      var attribute;\n      var attributes;\n      var regex = new RegExp('^' + namespace, 'i');\n      if ('undefined' === typeof obj) obj = {};else {\n        // Clear all own properties. This won't affect prototype's values\n        for (i in obj) {\n          if (obj.hasOwnProperty(i)) delete obj[i];\n        }\n      }\n      if (!element) return obj;\n      attributes = element.attributes;\n\n      for (i = attributes.length; i--;) {\n        attribute = attributes[i];\n\n        if (attribute && attribute.specified && regex.test(attribute.name)) {\n          obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);\n        }\n      }\n\n      return obj;\n    },\n    checkAttr: function checkAttr(element, namespace, _checkAttr) {\n      return element.hasAttribute(namespace + _checkAttr);\n    },\n    setAttr: function setAttr(element, namespace, attr, value) {\n      element.setAttribute(this.dasherize(namespace + attr), String(value));\n    },\n    getType: function getType(element) {\n      return element.getAttribute('type') || 'text';\n    },\n    generateID: function generateID() {\n      return '' + globalID++;\n    },\n\n    /** Third party functions **/\n    deserializeValue: function deserializeValue(value) {\n      var num;\n\n      try {\n        return value ? value == \"true\" || (value == \"false\" ? false : value == \"null\" ? null : !isNaN(num = Number(value)) ? num : /^[\\[\\{]/.test(value) ? JSON.parse(value) : value) : value;\n      } catch (e) {\n        return value;\n      }\n    },\n    // Zepto camelize function\n    camelize: function camelize(str) {\n      return str.replace(/-+(.)?/g, function (match, chr) {\n        return chr ? chr.toUpperCase() : '';\n      });\n    },\n    // Zepto dasherize function\n    dasherize: function dasherize(str) {\n      return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();\n    },\n    warn: function warn() {\n      var _window$console;\n\n      if (window.console && 'function' === typeof window.console.warn) (_window$console = window.console).warn.apply(_window$console, arguments);\n    },\n    warnOnce: function warnOnce(msg) {\n      if (!pastWarnings[msg]) {\n        pastWarnings[msg] = true;\n        this.warn.apply(this, arguments);\n      }\n    },\n    _resetWarnings: function _resetWarnings() {\n      pastWarnings = {};\n    },\n    trimString: function trimString(string) {\n      return string.replace(/^\\s+|\\s+$/g, '');\n    },\n    parse: {\n      date: function date(string) {\n        var parsed = string.match(/^(\\d{4,})-(\\d\\d)-(\\d\\d)$/);\n        if (!parsed) return null;\n\n        var _parsed$map = parsed.map(function (x) {\n          return parseInt(x, 10);\n        }),\n            _parsed$map2 = _slicedToArray(_parsed$map, 4),\n            _ = _parsed$map2[0],\n            year = _parsed$map2[1],\n            month = _parsed$map2[2],\n            day = _parsed$map2[3];\n\n        var date = new Date(year, month - 1, day);\n        if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) return null;\n        return date;\n      },\n      string: function string(_string) {\n        return _string;\n      },\n      integer: function integer(string) {\n        if (isNaN(string)) return null;\n        return parseInt(string, 10);\n      },\n      number: function number(string) {\n        if (isNaN(string)) throw null;\n        return parseFloat(string);\n      },\n      'boolean': function _boolean(string) {\n        return !/^\\s*false\\s*$/i.test(string);\n      },\n      object: function object(string) {\n        return Utils.deserializeValue(string);\n      },\n      regexp: function regexp(_regexp) {\n        var flags = ''; // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n\n        if (/^\\/.*\\/(?:[gimy]*)$/.test(_regexp)) {\n          // Replace the regexp literal string with the first match group: ([gimy]*)\n          // If no flag is present, this will be a blank string\n          flags = _regexp.replace(/.*\\/([gimy]*)$/, '$1'); // Again, replace the regexp literal string with the first match group:\n          // everything excluding the opening and closing slashes and the flags\n\n          _regexp = _regexp.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n        } else {\n          // Anchor regexp:\n          _regexp = '^' + _regexp + '$';\n        }\n\n        return new RegExp(_regexp, flags);\n      }\n    },\n    parseRequirement: function parseRequirement(requirementType, string) {\n      var converter = this.parse[requirementType || 'string'];\n      if (!converter) throw 'Unknown requirement specification: \"' + requirementType + '\"';\n      var converted = converter(string);\n      if (converted === null) throw \"Requirement is not a \".concat(requirementType, \": \\\"\").concat(string, \"\\\"\");\n      return converted;\n    },\n    namespaceEvents: function namespaceEvents(events, namespace) {\n      events = this.trimString(events || '').split(/\\s+/);\n      if (!events[0]) return '';\n      return $.map(events, function (evt) {\n        return \"\".concat(evt, \".\").concat(namespace);\n      }).join(' ');\n    },\n    difference: function difference(array, remove) {\n      // This is O(N^2), should be optimized\n      var result = [];\n      $.each(array, function (_, elem) {\n        if (remove.indexOf(elem) == -1) result.push(elem);\n      });\n      return result;\n    },\n    // Alter-ego to native Promise.all, but for jQuery\n    all: function all(promises) {\n      // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements\n      return $.when.apply($, _toConsumableArray(promises).concat([42, 42]));\n    },\n    // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill\n    objectCreate: Object.create || function () {\n      var Object = function Object() {};\n\n      return function (prototype) {\n        if (arguments.length > 1) {\n          throw Error('Second argument not supported');\n        }\n\n        if (_typeof(prototype) != 'object') {\n          throw TypeError('Argument must be an object');\n        }\n\n        Object.prototype = prototype;\n        var result = new Object();\n        Object.prototype = null;\n        return result;\n      };\n    }(),\n    _SubmitSelector: 'input[type=\"submit\"], button:submit'\n  };\n\n  // All these options could be overriden and specified directly in DOM using\n  // `data-parsley-` default DOM-API\n  // eg: `inputs` can be set in DOM using `data-parsley-inputs=\"input, textarea\"`\n  // eg: `data-parsley-stop-on-first-failing-constraint=\"false\"`\n  var Defaults = {\n    // ### General\n    // Default data-namespace for DOM API\n    namespace: 'data-parsley-',\n    // Supported inputs by default\n    inputs: 'input, textarea, select',\n    // Excluded inputs by default\n    excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden]',\n    // Stop validating field on highest priority failing constraint\n    priorityEnabled: true,\n    // ### Field only\n    // identifier used to group together inputs (e.g. radio buttons...)\n    multiple: null,\n    // identifier (or array of identifiers) used to validate only a select group of inputs\n    group: null,\n    // ### UI\n    // Enable\\Disable error messages\n    uiEnabled: true,\n    // Key events threshold before validation\n    validationThreshold: 3,\n    // Focused field on form validation error. 'first'|'last'|'none'\n    focus: 'first',\n    // event(s) that will trigger validation before first failure. eg: `input`...\n    trigger: false,\n    // event(s) that will trigger validation after first failure.\n    triggerAfterFailure: 'input',\n    // Class that would be added on every failing validation Parsley field\n    errorClass: 'parsley-error',\n    // Same for success validation\n    successClass: 'parsley-success',\n    // Return the `$element` that will receive these above success or error classes\n    // Could also be (and given directly from DOM) a valid selector like `'#div'`\n    classHandler: function classHandler(Field) {},\n    // Return the `$element` where errors will be appended\n    // Could also be (and given directly from DOM) a valid selector like `'#div'`\n    errorsContainer: function errorsContainer(Field) {},\n    // ul elem that would receive errors' list\n    errorsWrapper: '<ul class=\"parsley-errors-list\"></ul>',\n    // li elem that would receive error message\n    errorTemplate: '<li></li>'\n  };\n\n  var Base = function Base() {\n    this.__id__ = Utils.generateID();\n  };\n\n  Base.prototype = {\n    asyncSupport: true,\n    // Deprecated\n    _pipeAccordingToValidationResult: function _pipeAccordingToValidationResult() {\n      var _this = this;\n\n      var pipe = function pipe() {\n        var r = $.Deferred();\n        if (true !== _this.validationResult) r.reject();\n        return r.resolve().promise();\n      };\n\n      return [pipe, pipe];\n    },\n    actualizeOptions: function actualizeOptions() {\n      Utils.attr(this.element, this.options.namespace, this.domOptions);\n      if (this.parent && this.parent.actualizeOptions) this.parent.actualizeOptions();\n      return this;\n    },\n    _resetOptions: function _resetOptions(initOptions) {\n      this.domOptions = Utils.objectCreate(this.parent.options);\n      this.options = Utils.objectCreate(this.domOptions); // Shallow copy of ownProperties of initOptions:\n\n      for (var i in initOptions) {\n        if (initOptions.hasOwnProperty(i)) this.options[i] = initOptions[i];\n      }\n\n      this.actualizeOptions();\n    },\n    _listeners: null,\n    // Register a callback for the given event name\n    // Callback is called with context as the first argument and the `this`\n    // The context is the current parsley instance, or window.Parsley if global\n    // A return value of `false` will interrupt the calls\n    on: function on(name, fn) {\n      this._listeners = this._listeners || {};\n      var queue = this._listeners[name] = this._listeners[name] || [];\n      queue.push(fn);\n      return this;\n    },\n    // Deprecated. Use `on` instead\n    subscribe: function subscribe(name, fn) {\n      $.listenTo(this, name.toLowerCase(), fn);\n    },\n    // Unregister a callback (or all if none is given) for the given event name\n    off: function off(name, fn) {\n      var queue = this._listeners && this._listeners[name];\n\n      if (queue) {\n        if (!fn) {\n          delete this._listeners[name];\n        } else {\n          for (var i = queue.length; i--;) {\n            if (queue[i] === fn) queue.splice(i, 1);\n          }\n        }\n      }\n\n      return this;\n    },\n    // Deprecated. Use `off`\n    unsubscribe: function unsubscribe(name, fn) {\n      $.unsubscribeTo(this, name.toLowerCase());\n    },\n    // Trigger an event of the given name\n    // A return value of `false` interrupts the callback chain\n    // Returns false if execution was interrupted\n    trigger: function trigger(name, target, extraArg) {\n      target = target || this;\n      var queue = this._listeners && this._listeners[name];\n      var result;\n\n      if (queue) {\n        for (var i = queue.length; i--;) {\n          result = queue[i].call(target, target, extraArg);\n          if (result === false) return result;\n        }\n      }\n\n      if (this.parent) {\n        return this.parent.trigger(name, target, extraArg);\n      }\n\n      return true;\n    },\n    asyncIsValid: function asyncIsValid(group, force) {\n      Utils.warnOnce(\"asyncIsValid is deprecated; please use whenValid instead\");\n      return this.whenValid({\n        group: group,\n        force: force\n      });\n    },\n    _findRelated: function _findRelated() {\n      return this.options.multiple ? $(this.parent.element.querySelectorAll(\"[\".concat(this.options.namespace, \"multiple=\\\"\").concat(this.options.multiple, \"\\\"]\"))) : this.$element;\n    }\n  };\n\n  var convertArrayRequirement = function convertArrayRequirement(string, length) {\n    var m = string.match(/^\\s*\\[(.*)\\]\\s*$/);\n    if (!m) throw 'Requirement is not an array: \"' + string + '\"';\n    var values = m[1].split(',').map(Utils.trimString);\n    if (values.length !== length) throw 'Requirement has ' + values.length + ' values when ' + length + ' are needed';\n    return values;\n  };\n\n  var convertExtraOptionRequirement = function convertExtraOptionRequirement(requirementSpec, string, extraOptionReader) {\n    var main = null;\n    var extra = {};\n\n    for (var key in requirementSpec) {\n      if (key) {\n        var value = extraOptionReader(key);\n        if ('string' === typeof value) value = Utils.parseRequirement(requirementSpec[key], value);\n        extra[key] = value;\n      } else {\n        main = Utils.parseRequirement(requirementSpec[key], string);\n      }\n    }\n\n    return [main, extra];\n  }; // A Validator needs to implement the methods `validate` and `parseRequirements`\n\n\n  var Validator = function Validator(spec) {\n    $.extend(true, this, spec);\n  };\n\n  Validator.prototype = {\n    // Returns `true` iff the given `value` is valid according the given requirements.\n    validate: function validate(value, requirementFirstArg) {\n      if (this.fn) {\n        // Legacy style validator\n        if (arguments.length > 3) // If more args then value, requirement, instance...\n          requirementFirstArg = [].slice.call(arguments, 1, -1); // Skip first arg (value) and last (instance), combining the rest\n\n        return this.fn(value, requirementFirstArg);\n      }\n\n      if (Array.isArray(value)) {\n        if (!this.validateMultiple) throw 'Validator `' + this.name + '` does not handle multiple values';\n        return this.validateMultiple.apply(this, arguments);\n      } else {\n        var instance = arguments[arguments.length - 1];\n\n        if (this.validateDate && instance._isDateInput()) {\n          arguments[0] = Utils.parse.date(arguments[0]);\n          if (arguments[0] === null) return false;\n          return this.validateDate.apply(this, arguments);\n        }\n\n        if (this.validateNumber) {\n          if (!value) // Builtin validators all accept empty strings, except `required` of course\n            return true;\n          if (isNaN(value)) return false;\n          arguments[0] = parseFloat(arguments[0]);\n          return this.validateNumber.apply(this, arguments);\n        }\n\n        if (this.validateString) {\n          return this.validateString.apply(this, arguments);\n        }\n\n        throw 'Validator `' + this.name + '` only handles multiple values';\n      }\n    },\n    // Parses `requirements` into an array of arguments,\n    // according to `this.requirementType`\n    parseRequirements: function parseRequirements(requirements, extraOptionReader) {\n      if ('string' !== typeof requirements) {\n        // Assume requirement already parsed\n        // but make sure we return an array\n        return Array.isArray(requirements) ? requirements : [requirements];\n      }\n\n      var type = this.requirementType;\n\n      if (Array.isArray(type)) {\n        var values = convertArrayRequirement(requirements, type.length);\n\n        for (var i = 0; i < values.length; i++) {\n          values[i] = Utils.parseRequirement(type[i], values[i]);\n        }\n\n        return values;\n      } else if ($.isPlainObject(type)) {\n        return convertExtraOptionRequirement(type, requirements, extraOptionReader);\n      } else {\n        return [Utils.parseRequirement(type, requirements)];\n      }\n    },\n    // Defaults:\n    requirementType: 'string',\n    priority: 2\n  };\n\n  var ValidatorRegistry = function ValidatorRegistry(validators, catalog) {\n    this.__class__ = 'ValidatorRegistry'; // Default Parsley locale is en\n\n    this.locale = 'en';\n    this.init(validators || {}, catalog || {});\n  };\n\n  var typeTesters = {\n    email: /^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))$/,\n    // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers\n    number: /^-?(\\d*\\.)?\\d+(e[-+]?\\d+)?$/i,\n    integer: /^-?\\d+$/,\n    digits: /^\\d+$/,\n    alphanum: /^\\w+$/i,\n    date: {\n      test: function test(value) {\n        return Utils.parse.date(value) !== null;\n      }\n    },\n    url: new RegExp(\"^\" + // protocol identifier\n    \"(?:(?:https?|ftp)://)?\" + // ** mod: make scheme optional\n    // user:pass authentication\n    \"(?:\\\\S+(?::\\\\S*)?@)?\" + \"(?:\" + // IP address exclusion\n    // private & local networks\n    // \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +   // ** mod: allow local networks\n    // \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n    // \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" + \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" + \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" + \"|\" + // host name\n    \"(?:(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)\" + // domain name\n    \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)*\" + // TLD identifier\n    \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff]{2,}))\" + \")\" + // port number\n    \"(?::\\\\d{2,5})?\" + // resource path\n    \"(?:/\\\\S*)?\" + \"$\")\n  };\n  typeTesters.range = typeTesters.number; // See http://stackoverflow.com/a/10454560/8279\n\n  var decimalPlaces = function decimalPlaces(num) {\n    var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n    if (!match) {\n      return 0;\n    }\n\n    return Math.max(0, // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) - ( // Adjust for scientific notation.\n    match[2] ? +match[2] : 0));\n  }; // parseArguments('number', ['1', '2']) => [1, 2]\n\n\n  var parseArguments = function parseArguments(type, args) {\n    return args.map(Utils.parse[type]);\n  }; // operatorToValidator returns a validating function for an operator function, applied to the given type\n\n\n  var operatorToValidator = function operatorToValidator(type, operator) {\n    return function (value) {\n      for (var _len = arguments.length, requirementsAndInput = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        requirementsAndInput[_key - 1] = arguments[_key];\n      }\n\n      requirementsAndInput.pop(); // Get rid of `input` argument\n\n      return operator.apply(void 0, [value].concat(_toConsumableArray(parseArguments(type, requirementsAndInput))));\n    };\n  };\n\n  var comparisonOperator = function comparisonOperator(operator) {\n    return {\n      validateDate: operatorToValidator('date', operator),\n      validateNumber: operatorToValidator('number', operator),\n      requirementType: operator.length <= 2 ? 'string' : ['string', 'string'],\n      // Support operators with a 1 or 2 requirement(s)\n      priority: 30\n    };\n  };\n\n  ValidatorRegistry.prototype = {\n    init: function init(validators, catalog) {\n      this.catalog = catalog; // Copy prototype's validators:\n\n      this.validators = _extends({}, this.validators);\n\n      for (var name in validators) {\n        this.addValidator(name, validators[name].fn, validators[name].priority);\n      }\n\n      window.Parsley.trigger('parsley:validator:init');\n    },\n    // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n\n    setLocale: function setLocale(locale) {\n      if ('undefined' === typeof this.catalog[locale]) throw new Error(locale + ' is not available in the catalog');\n      this.locale = locale;\n      return this;\n    },\n    // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`\n    addCatalog: function addCatalog(locale, messages, set) {\n      if ('object' === _typeof(messages)) this.catalog[locale] = messages;\n      if (true === set) return this.setLocale(locale);\n      return this;\n    },\n    // Add a specific message for a given constraint in a given locale\n    addMessage: function addMessage(locale, name, message) {\n      if ('undefined' === typeof this.catalog[locale]) this.catalog[locale] = {};\n      this.catalog[locale][name] = message;\n      return this;\n    },\n    // Add messages for a given locale\n    addMessages: function addMessages(locale, nameMessageObject) {\n      for (var name in nameMessageObject) {\n        this.addMessage(locale, name, nameMessageObject[name]);\n      }\n\n      return this;\n    },\n    // Add a new validator\n    //\n    //    addValidator('custom', {\n    //        requirementType: ['integer', 'integer'],\n    //        validateString: function(value, from, to) {},\n    //        priority: 22,\n    //        messages: {\n    //          en: \"Hey, that's no good\",\n    //          fr: \"Aye aye, pas bon du tout\",\n    //        }\n    //    })\n    //\n    // Old API was addValidator(name, function, priority)\n    //\n    addValidator: function addValidator(name, arg1, arg2) {\n      if (this.validators[name]) Utils.warn('Validator \"' + name + '\" is already defined.');else if (Defaults.hasOwnProperty(name)) {\n        Utils.warn('\"' + name + '\" is a restricted keyword and is not a valid validator name.');\n        return;\n      }\n      return this._setValidator.apply(this, arguments);\n    },\n    hasValidator: function hasValidator(name) {\n      return !!this.validators[name];\n    },\n    updateValidator: function updateValidator(name, arg1, arg2) {\n      if (!this.validators[name]) {\n        Utils.warn('Validator \"' + name + '\" is not already defined.');\n        return this.addValidator.apply(this, arguments);\n      }\n\n      return this._setValidator.apply(this, arguments);\n    },\n    removeValidator: function removeValidator(name) {\n      if (!this.validators[name]) Utils.warn('Validator \"' + name + '\" is not defined.');\n      delete this.validators[name];\n      return this;\n    },\n    _setValidator: function _setValidator(name, validator, priority) {\n      if ('object' !== _typeof(validator)) {\n        // Old style validator, with `fn` and `priority`\n        validator = {\n          fn: validator,\n          priority: priority\n        };\n      }\n\n      if (!validator.validate) {\n        validator = new Validator(validator);\n      }\n\n      this.validators[name] = validator;\n\n      for (var locale in validator.messages || {}) {\n        this.addMessage(locale, name, validator.messages[locale]);\n      }\n\n      return this;\n    },\n    getErrorMessage: function getErrorMessage(constraint) {\n      var message; // Type constraints are a bit different, we have to match their requirements too to find right error message\n\n      if ('type' === constraint.name) {\n        var typeMessages = this.catalog[this.locale][constraint.name] || {};\n        message = typeMessages[constraint.requirements];\n      } else message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);\n\n      return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;\n    },\n    // Kind of light `sprintf()` implementation\n    formatMessage: function formatMessage(string, parameters) {\n      if ('object' === _typeof(parameters)) {\n        for (var i in parameters) {\n          string = this.formatMessage(string, parameters[i]);\n        }\n\n        return string;\n      }\n\n      return 'string' === typeof string ? string.replace(/%s/i, parameters) : '';\n    },\n    // Here is the Parsley default validators list.\n    // A validator is an object with the following key values:\n    //  - priority: an integer\n    //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these\n    //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise\n    // Alternatively, a validator can be a function that returns such an object\n    //\n    validators: {\n      notblank: {\n        validateString: function validateString(value) {\n          return /\\S/.test(value);\n        },\n        priority: 2\n      },\n      required: {\n        validateMultiple: function validateMultiple(values) {\n          return values.length > 0;\n        },\n        validateString: function validateString(value) {\n          return /\\S/.test(value);\n        },\n        priority: 512\n      },\n      type: {\n        validateString: function validateString(value, type) {\n          var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n              _ref$step = _ref.step,\n              step = _ref$step === void 0 ? 'any' : _ref$step,\n              _ref$base = _ref.base,\n              base = _ref$base === void 0 ? 0 : _ref$base;\n\n          var tester = typeTesters[type];\n\n          if (!tester) {\n            throw new Error('validator type `' + type + '` is not supported');\n          }\n\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          if (!tester.test(value)) return false;\n\n          if ('number' === type) {\n            if (!/^any$/i.test(step || '')) {\n              var nb = Number(value);\n              var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));\n              if (decimalPlaces(nb) > decimals) // Value can't have too many decimals\n                return false; // Be careful of rounding errors by using integers.\n\n              var toInt = function toInt(f) {\n                return Math.round(f * Math.pow(10, decimals));\n              };\n\n              if ((toInt(nb) - toInt(base)) % toInt(step) != 0) return false;\n            }\n          }\n\n          return true;\n        },\n        requirementType: {\n          '': 'string',\n          step: 'string',\n          base: 'number'\n        },\n        priority: 256\n      },\n      pattern: {\n        validateString: function validateString(value, regexp) {\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          return regexp.test(value);\n        },\n        requirementType: 'regexp',\n        priority: 64\n      },\n      minlength: {\n        validateString: function validateString(value, requirement) {\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          return value.length >= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      maxlength: {\n        validateString: function validateString(value, requirement) {\n          return value.length <= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      length: {\n        validateString: function validateString(value, min, max) {\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          return value.length >= min && value.length <= max;\n        },\n        requirementType: ['integer', 'integer'],\n        priority: 30\n      },\n      mincheck: {\n        validateMultiple: function validateMultiple(values, requirement) {\n          return values.length >= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      maxcheck: {\n        validateMultiple: function validateMultiple(values, requirement) {\n          return values.length <= requirement;\n        },\n        requirementType: 'integer',\n        priority: 30\n      },\n      check: {\n        validateMultiple: function validateMultiple(values, min, max) {\n          return values.length >= min && values.length <= max;\n        },\n        requirementType: ['integer', 'integer'],\n        priority: 30\n      },\n      min: comparisonOperator(function (value, requirement) {\n        return value >= requirement;\n      }),\n      max: comparisonOperator(function (value, requirement) {\n        return value <= requirement;\n      }),\n      range: comparisonOperator(function (value, min, max) {\n        return value >= min && value <= max;\n      }),\n      equalto: {\n        validateString: function validateString(value, refOrValue) {\n          if (!value) return true; // Builtin validators all accept empty strings, except `required` of course\n\n          var $reference = $(refOrValue);\n          if ($reference.length) return value === $reference.val();else return value === refOrValue;\n        },\n        priority: 256\n      },\n      euvatin: {\n        validateString: function validateString(value, refOrValue) {\n          if (!value) {\n            return true; // Builtin validators all accept empty strings, except `required` of course\n          }\n\n          var re = /^[A-Z][A-Z][A-Za-z0-9 -]{2,}$/;\n          return re.test(value);\n        },\n        priority: 30\n      }\n    }\n  };\n\n  var UI = {};\n\n  var diffResults = function diffResults(newResult, oldResult, deep) {\n    var added = [];\n    var kept = [];\n\n    for (var i = 0; i < newResult.length; i++) {\n      var found = false;\n\n      for (var j = 0; j < oldResult.length; j++) {\n        if (newResult[i].assert.name === oldResult[j].assert.name) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found) kept.push(newResult[i]);else added.push(newResult[i]);\n    }\n\n    return {\n      kept: kept,\n      added: added,\n      removed: !deep ? diffResults(oldResult, newResult, true).added : []\n    };\n  };\n\n  UI.Form = {\n    _actualizeTriggers: function _actualizeTriggers() {\n      var _this = this;\n\n      this.$element.on('submit.Parsley', function (evt) {\n        _this.onSubmitValidate(evt);\n      });\n      this.$element.on('click.Parsley', Utils._SubmitSelector, function (evt) {\n        _this.onSubmitButton(evt);\n      }); // UI could be disabled\n\n      if (false === this.options.uiEnabled) return;\n      this.element.setAttribute('novalidate', '');\n    },\n    focus: function focus() {\n      this._focusedField = null;\n      if (true === this.validationResult || 'none' === this.options.focus) return null;\n\n      for (var i = 0; i < this.fields.length; i++) {\n        var field = this.fields[i];\n\n        if (true !== field.validationResult && field.validationResult.length > 0 && 'undefined' === typeof field.options.noFocus) {\n          this._focusedField = field.$element;\n          if ('first' === this.options.focus) break;\n        }\n      }\n\n      if (null === this._focusedField) return null;\n      return this._focusedField.focus();\n    },\n    _destroyUI: function _destroyUI() {\n      // Reset all event listeners\n      this.$element.off('.Parsley');\n    }\n  };\n  UI.Field = {\n    _reflowUI: function _reflowUI() {\n      this._buildUI(); // If this field doesn't have an active UI don't bother doing something\n\n\n      if (!this._ui) return; // Diff between two validation results\n\n      var diff = diffResults(this.validationResult, this._ui.lastValidationResult); // Then store current validation result for next reflow\n\n      this._ui.lastValidationResult = this.validationResult; // Handle valid / invalid / none field class\n\n      this._manageStatusClass(); // Add, remove, updated errors messages\n\n\n      this._manageErrorsMessages(diff); // Triggers impl\n\n\n      this._actualizeTriggers(); // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user\n\n\n      if ((diff.kept.length || diff.added.length) && !this._failedOnce) {\n        this._failedOnce = true;\n\n        this._actualizeTriggers();\n      }\n    },\n    // Returns an array of field's error message(s)\n    getErrorsMessages: function getErrorsMessages() {\n      // No error message, field is valid\n      if (true === this.validationResult) return [];\n      var messages = [];\n\n      for (var i = 0; i < this.validationResult.length; i++) {\n        messages.push(this.validationResult[i].errorMessage || this._getErrorMessage(this.validationResult[i].assert));\n      }\n\n      return messages;\n    },\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    addError: function addError(name) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          message = _ref.message,\n          assert = _ref.assert,\n          _ref$updateClass = _ref.updateClass,\n          updateClass = _ref$updateClass === void 0 ? true : _ref$updateClass;\n\n      this._buildUI();\n\n      this._addError(name, {\n        message: message,\n        assert: assert\n      });\n\n      if (updateClass) this._errorClass();\n    },\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    updateError: function updateError(name) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          message = _ref2.message,\n          assert = _ref2.assert,\n          _ref2$updateClass = _ref2.updateClass,\n          updateClass = _ref2$updateClass === void 0 ? true : _ref2$updateClass;\n\n      this._buildUI();\n\n      this._updateError(name, {\n        message: message,\n        assert: assert\n      });\n\n      if (updateClass) this._errorClass();\n    },\n    // It's a goal of Parsley that this method is no longer required [#1073]\n    removeError: function removeError(name) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref3$updateClass = _ref3.updateClass,\n          updateClass = _ref3$updateClass === void 0 ? true : _ref3$updateClass;\n\n      this._buildUI();\n\n      this._removeError(name); // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult\n      // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.\n\n\n      if (updateClass) this._manageStatusClass();\n    },\n    _manageStatusClass: function _manageStatusClass() {\n      if (this.hasConstraints() && this.needsValidation() && true === this.validationResult) this._successClass();else if (this.validationResult.length > 0) this._errorClass();else this._resetClass();\n    },\n    _manageErrorsMessages: function _manageErrorsMessages(diff) {\n      if ('undefined' !== typeof this.options.errorsMessagesDisabled) return; // Case where we have errorMessage option that configure an unique field error message, regardless failing validators\n\n      if ('undefined' !== typeof this.options.errorMessage) {\n        if (diff.added.length || diff.kept.length) {\n          this._insertErrorWrapper();\n\n          if (0 === this._ui.$errorsWrapper.find('.parsley-custom-error-message').length) this._ui.$errorsWrapper.append($(this.options.errorTemplate).addClass('parsley-custom-error-message'));\n\n          this._ui.$errorClassHandler.attr('aria-describedby', this._ui.errorsWrapperId);\n\n          return this._ui.$errorsWrapper.addClass('filled').attr('aria-hidden', 'false').find('.parsley-custom-error-message').html(this.options.errorMessage);\n        }\n\n        this._ui.$errorClassHandler.removeAttr('aria-describedby');\n\n        return this._ui.$errorsWrapper.removeClass('filled').attr('aria-hidden', 'true').find('.parsley-custom-error-message').remove();\n      } // Show, hide, update failing constraints messages\n\n\n      for (var i = 0; i < diff.removed.length; i++) {\n        this._removeError(diff.removed[i].assert.name);\n      }\n\n      for (i = 0; i < diff.added.length; i++) {\n        this._addError(diff.added[i].assert.name, {\n          message: diff.added[i].errorMessage,\n          assert: diff.added[i].assert\n        });\n      }\n\n      for (i = 0; i < diff.kept.length; i++) {\n        this._updateError(diff.kept[i].assert.name, {\n          message: diff.kept[i].errorMessage,\n          assert: diff.kept[i].assert\n        });\n      }\n    },\n    _addError: function _addError(name, _ref4) {\n      var message = _ref4.message,\n          assert = _ref4.assert;\n\n      this._insertErrorWrapper();\n\n      this._ui.$errorClassHandler.attr('aria-describedby', this._ui.errorsWrapperId);\n\n      this._ui.$errorsWrapper.addClass('filled').attr('aria-hidden', 'false').append($(this.options.errorTemplate).addClass('parsley-' + name).html(message || this._getErrorMessage(assert)));\n    },\n    _updateError: function _updateError(name, _ref5) {\n      var message = _ref5.message,\n          assert = _ref5.assert;\n\n      this._ui.$errorsWrapper.addClass('filled').find('.parsley-' + name).html(message || this._getErrorMessage(assert));\n    },\n    _removeError: function _removeError(name) {\n      this._ui.$errorClassHandler.removeAttr('aria-describedby');\n\n      this._ui.$errorsWrapper.removeClass('filled').attr('aria-hidden', 'true').find('.parsley-' + name).remove();\n    },\n    _getErrorMessage: function _getErrorMessage(constraint) {\n      var customConstraintErrorMessage = constraint.name + 'Message';\n      if ('undefined' !== typeof this.options[customConstraintErrorMessage]) return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);\n      return window.Parsley.getErrorMessage(constraint);\n    },\n    _buildUI: function _buildUI() {\n      // UI could be already built or disabled\n      if (this._ui || false === this.options.uiEnabled) return;\n      var _ui = {}; // Give field its Parsley id in DOM\n\n      this.element.setAttribute(this.options.namespace + 'id', this.__id__);\n      /** Generate important UI elements and store them in this **/\n      // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes\n\n      _ui.$errorClassHandler = this._manageClassHandler(); // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer\n\n      _ui.errorsWrapperId = 'parsley-id-' + (this.options.multiple ? 'multiple-' + this.options.multiple : this.__id__);\n      _ui.$errorsWrapper = $(this.options.errorsWrapper).attr('id', _ui.errorsWrapperId); // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly\n\n      _ui.lastValidationResult = [];\n      _ui.validationInformationVisible = false; // Store it in this for later\n\n      this._ui = _ui;\n    },\n    // Determine which element will have `parsley-error` and `parsley-success` classes\n    _manageClassHandler: function _manageClassHandler() {\n      // Class handled could also be determined by function given in Parsley options\n      if ('string' === typeof this.options.classHandler && $(this.options.classHandler).length) return $(this.options.classHandler); // Class handled could also be determined by function given in Parsley options\n\n      var $handlerFunction = this.options.classHandler; // It might also be the function name of a global function\n\n      if ('string' === typeof this.options.classHandler && 'function' === typeof window[this.options.classHandler]) $handlerFunction = window[this.options.classHandler];\n\n      if ('function' === typeof $handlerFunction) {\n        var $handler = $handlerFunction.call(this, this); // If this function returned a valid existing DOM element, go for it\n\n        if ('undefined' !== typeof $handler && $handler.length) return $handler;\n      } else if ('object' === _typeof($handlerFunction) && $handlerFunction instanceof jQuery && $handlerFunction.length) {\n        return $handlerFunction;\n      } else if ($handlerFunction) {\n        Utils.warn('The class handler `' + $handlerFunction + '` does not exist in DOM nor as a global JS function');\n      }\n\n      return this._inputHolder();\n    },\n    _inputHolder: function _inputHolder() {\n      // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container\n      if (!this.options.multiple || this.element.nodeName === 'SELECT') return this.$element; // But if multiple element (radio, checkbox), that would be their parent\n\n      return this.$element.parent();\n    },\n    _insertErrorWrapper: function _insertErrorWrapper() {\n      var $errorsContainer = this.options.errorsContainer; // Nothing to do if already inserted\n\n      if (0 !== this._ui.$errorsWrapper.parent().length) return this._ui.$errorsWrapper.parent();\n\n      if ('string' === typeof $errorsContainer) {\n        if ($($errorsContainer).length) return $($errorsContainer).append(this._ui.$errorsWrapper);else if ('function' === typeof window[$errorsContainer]) $errorsContainer = window[$errorsContainer];else Utils.warn('The errors container `' + $errorsContainer + '` does not exist in DOM nor as a global JS function');\n      }\n\n      if ('function' === typeof $errorsContainer) $errorsContainer = $errorsContainer.call(this, this);\n      if ('object' === _typeof($errorsContainer) && $errorsContainer.length) return $errorsContainer.append(this._ui.$errorsWrapper);\n      return this._inputHolder().after(this._ui.$errorsWrapper);\n    },\n    _actualizeTriggers: function _actualizeTriggers() {\n      var _this2 = this;\n\n      var $toBind = this._findRelated();\n\n      var trigger; // Remove Parsley events already bound on this field\n\n      $toBind.off('.Parsley');\n      if (this._failedOnce) $toBind.on(Utils.namespaceEvents(this.options.triggerAfterFailure, 'Parsley'), function () {\n        _this2._validateIfNeeded();\n      });else if (trigger = Utils.namespaceEvents(this.options.trigger, 'Parsley')) {\n        $toBind.on(trigger, function (event) {\n          _this2._validateIfNeeded(event);\n        });\n      }\n    },\n    _validateIfNeeded: function _validateIfNeeded(event) {\n      var _this3 = this;\n\n      // For keyup, keypress, keydown, input... events that could be a little bit obstrusive\n      // do not validate if val length < min threshold on first validation. Once field have been validated once and info\n      // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.\n      if (event && /key|input/.test(event.type)) if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold) return;\n\n      if (this.options.debounce) {\n        window.clearTimeout(this._debounced);\n        this._debounced = window.setTimeout(function () {\n          return _this3.validate();\n        }, this.options.debounce);\n      } else this.validate();\n    },\n    _resetUI: function _resetUI() {\n      // Reset all event listeners\n      this._failedOnce = false;\n\n      this._actualizeTriggers(); // Nothing to do if UI never initialized for this field\n\n\n      if ('undefined' === typeof this._ui) return; // Reset all errors' li\n\n      this._ui.$errorsWrapper.removeClass('filled').children().remove(); // Reset validation class\n\n\n      this._resetClass(); // Reset validation flags and last validation result\n\n\n      this._ui.lastValidationResult = [];\n      this._ui.validationInformationVisible = false;\n    },\n    _destroyUI: function _destroyUI() {\n      this._resetUI();\n\n      if ('undefined' !== typeof this._ui) this._ui.$errorsWrapper.remove();\n      delete this._ui;\n    },\n    _successClass: function _successClass() {\n      this._ui.validationInformationVisible = true;\n\n      this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);\n    },\n    _errorClass: function _errorClass() {\n      this._ui.validationInformationVisible = true;\n\n      this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);\n    },\n    _resetClass: function _resetClass() {\n      this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);\n    }\n  };\n\n  var Form = function Form(element, domOptions, options) {\n    this.__class__ = 'Form';\n    this.element = element;\n    this.$element = $(element);\n    this.domOptions = domOptions;\n    this.options = options;\n    this.parent = window.Parsley;\n    this.fields = [];\n    this.validationResult = null;\n  };\n\n  var statusMapping = {\n    pending: null,\n    resolved: true,\n    rejected: false\n  };\n  Form.prototype = {\n    onSubmitValidate: function onSubmitValidate(event) {\n      var _this = this;\n\n      // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior\n      if (true === event.parsley) return; // If we didn't come here through a submit button, use the first one in the form\n\n      var submitSource = this._submitSource || this.$element.find(Utils._SubmitSelector)[0];\n      this._submitSource = null;\n      this.$element.find('.parsley-synthetic-submit-button').prop('disabled', true);\n      if (submitSource && null !== submitSource.getAttribute('formnovalidate')) return;\n      window.Parsley._remoteCache = {};\n      var promise = this.whenValidate({\n        event: event\n      });\n\n      if ('resolved' === promise.state() && false !== this._trigger('submit')) ; else {\n        // Rejected or pending: cancel this submit\n        event.stopImmediatePropagation();\n        event.preventDefault();\n        if ('pending' === promise.state()) promise.done(function () {\n          _this._submit(submitSource);\n        });\n      }\n    },\n    onSubmitButton: function onSubmitButton(event) {\n      this._submitSource = event.currentTarget;\n    },\n    // internal\n    // _submit submits the form, this time without going through the validations.\n    // Care must be taken to \"fake\" the actual submit button being clicked.\n    _submit: function _submit(submitSource) {\n      if (false === this._trigger('submit')) return; // Add submit button's data\n\n      if (submitSource) {\n        var $synthetic = this.$element.find('.parsley-synthetic-submit-button').prop('disabled', false);\n        if (0 === $synthetic.length) $synthetic = $('<input class=\"parsley-synthetic-submit-button\" type=\"hidden\">').appendTo(this.$element);\n        $synthetic.attr({\n          name: submitSource.getAttribute('name'),\n          value: submitSource.getAttribute('value')\n        });\n      }\n\n      this.$element.trigger(_extends($.Event('submit'), {\n        parsley: true\n      }));\n    },\n    // Performs validation on fields while triggering events.\n    // @returns `true` if all validations succeeds, `false`\n    // if a failure is immediately detected, or `null`\n    // if dependant on a promise.\n    // Consider using `whenValidate` instead.\n    validate: function validate(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        Utils.warnOnce('Calling validate on a parsley form without passing arguments as an object is deprecated.');\n\n        var _arguments = Array.prototype.slice.call(arguments),\n            group = _arguments[0],\n            force = _arguments[1],\n            event = _arguments[2];\n\n        options = {\n          group: group,\n          force: force,\n          event: event\n        };\n      }\n\n      return statusMapping[this.whenValidate(options).state()];\n    },\n    whenValidate: function whenValidate() {\n      var _this2 = this,\n          _Utils$all$done$fail$;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          group = _ref.group,\n          force = _ref.force,\n          event = _ref.event;\n\n      this.submitEvent = event;\n\n      if (event) {\n        this.submitEvent = _extends({}, event, {\n          preventDefault: function preventDefault() {\n            Utils.warnOnce(\"Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`\");\n            _this2.validationResult = false;\n          }\n        });\n      }\n\n      this.validationResult = true; // fire validate event to eventually modify things before every validation\n\n      this._trigger('validate'); // Refresh form DOM options and form's fields that could have changed\n\n\n      this._refreshFields();\n\n      var promises = this._withoutReactualizingFormOptions(function () {\n        return $.map(_this2.fields, function (field) {\n          return field.whenValidate({\n            force: force,\n            group: group\n          });\n        });\n      });\n\n      return (_Utils$all$done$fail$ = Utils.all(promises).done(function () {\n        _this2._trigger('success');\n      }).fail(function () {\n        _this2.validationResult = false;\n\n        _this2.focus();\n\n        _this2._trigger('error');\n      }).always(function () {\n        _this2._trigger('validated');\n      })).pipe.apply(_Utils$all$done$fail$, _toConsumableArray(this._pipeAccordingToValidationResult()));\n    },\n    // Iterate over refreshed fields, and stop on first failure.\n    // Returns `true` if all fields are valid, `false` if a failure is detected\n    // or `null` if the result depends on an unresolved promise.\n    // Prefer using `whenValid` instead.\n    isValid: function isValid(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        Utils.warnOnce('Calling isValid on a parsley form without passing arguments as an object is deprecated.');\n\n        var _arguments2 = Array.prototype.slice.call(arguments),\n            group = _arguments2[0],\n            force = _arguments2[1];\n\n        options = {\n          group: group,\n          force: force\n        };\n      }\n\n      return statusMapping[this.whenValid(options).state()];\n    },\n    // Iterate over refreshed fields and validate them.\n    // Returns a promise.\n    // A validation that immediately fails will interrupt the validations.\n    whenValid: function whenValid() {\n      var _this3 = this;\n\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          group = _ref2.group,\n          force = _ref2.force;\n\n      this._refreshFields();\n\n      var promises = this._withoutReactualizingFormOptions(function () {\n        return $.map(_this3.fields, function (field) {\n          return field.whenValid({\n            group: group,\n            force: force\n          });\n        });\n      });\n\n      return Utils.all(promises);\n    },\n    refresh: function refresh() {\n      this._refreshFields();\n\n      return this;\n    },\n    // Reset UI\n    reset: function reset() {\n      // Form case: emit a reset event for each field\n      for (var i = 0; i < this.fields.length; i++) {\n        this.fields[i].reset();\n      }\n\n      this._trigger('reset');\n    },\n    // Destroy Parsley instance (+ UI)\n    destroy: function destroy() {\n      // Field case: emit destroy event to clean UI and then destroy stored instance\n      this._destroyUI(); // Form case: destroy all its fields and then destroy stored instance\n\n\n      for (var i = 0; i < this.fields.length; i++) {\n        this.fields[i].destroy();\n      }\n\n      this.$element.removeData('Parsley');\n\n      this._trigger('destroy');\n    },\n    _refreshFields: function _refreshFields() {\n      return this.actualizeOptions()._bindFields();\n    },\n    _bindFields: function _bindFields() {\n      var _this4 = this;\n\n      var oldFields = this.fields;\n      this.fields = [];\n      this.fieldsMappedById = {};\n\n      this._withoutReactualizingFormOptions(function () {\n        _this4.$element.find(_this4.options.inputs).not(_this4.options.excluded).not(\"[\".concat(_this4.options.namespace, \"excluded=true]\")).each(function (_, element) {\n          var fieldInstance = new window.Parsley.Factory(element, {}, _this4); // Only add valid and not excluded `Field` and `FieldMultiple` children\n\n          if ('Field' === fieldInstance.__class__ || 'FieldMultiple' === fieldInstance.__class__) {\n            var uniqueId = fieldInstance.__class__ + '-' + fieldInstance.__id__;\n\n            if ('undefined' === typeof _this4.fieldsMappedById[uniqueId]) {\n              _this4.fieldsMappedById[uniqueId] = fieldInstance;\n\n              _this4.fields.push(fieldInstance);\n            }\n          }\n        });\n\n        $.each(Utils.difference(oldFields, _this4.fields), function (_, field) {\n          field.reset();\n        });\n      });\n\n      return this;\n    },\n    // Internal only.\n    // Looping on a form's fields to do validation or similar\n    // will trigger reactualizing options on all of them, which\n    // in turn will reactualize the form's options.\n    // To avoid calling actualizeOptions so many times on the form\n    // for nothing, _withoutReactualizingFormOptions temporarily disables\n    // the method actualizeOptions on this form while `fn` is called.\n    _withoutReactualizingFormOptions: function _withoutReactualizingFormOptions(fn) {\n      var oldActualizeOptions = this.actualizeOptions;\n\n      this.actualizeOptions = function () {\n        return this;\n      };\n\n      var result = fn();\n      this.actualizeOptions = oldActualizeOptions;\n      return result;\n    },\n    // Internal only.\n    // Shortcut to trigger an event\n    // Returns true iff event is not interrupted and default not prevented.\n    _trigger: function _trigger(eventName) {\n      return this.trigger('form:' + eventName);\n    }\n  };\n\n  var Constraint = function Constraint(parsleyField, name, requirements, priority, isDomConstraint) {\n    var validatorSpec = window.Parsley._validatorRegistry.validators[name];\n    var validator = new Validator(validatorSpec);\n    priority = priority || parsleyField.options[name + 'Priority'] || validator.priority;\n    isDomConstraint = true === isDomConstraint;\n\n    _extends(this, {\n      validator: validator,\n      name: name,\n      requirements: requirements,\n      priority: priority,\n      isDomConstraint: isDomConstraint\n    });\n\n    this._parseRequirements(parsleyField.options);\n  };\n\n  var capitalize = function capitalize(str) {\n    var cap = str[0].toUpperCase();\n    return cap + str.slice(1);\n  };\n\n  Constraint.prototype = {\n    validate: function validate(value, instance) {\n      var _this$validator;\n\n      return (_this$validator = this.validator).validate.apply(_this$validator, [value].concat(_toConsumableArray(this.requirementList), [instance]));\n    },\n    _parseRequirements: function _parseRequirements(options) {\n      var _this = this;\n\n      this.requirementList = this.validator.parseRequirements(this.requirements, function (key) {\n        return options[_this.name + capitalize(key)];\n      });\n    }\n  };\n\n  var Field = function Field(field, domOptions, options, parsleyFormInstance) {\n    this.__class__ = 'Field';\n    this.element = field;\n    this.$element = $(field); // Set parent if we have one\n\n    if ('undefined' !== typeof parsleyFormInstance) {\n      this.parent = parsleyFormInstance;\n    }\n\n    this.options = options;\n    this.domOptions = domOptions; // Initialize some properties\n\n    this.constraints = [];\n    this.constraintsByName = {};\n    this.validationResult = true; // Bind constraints\n\n    this._bindConstraints();\n  };\n\n  var statusMapping$1 = {\n    pending: null,\n    resolved: true,\n    rejected: false\n  };\n  Field.prototype = {\n    // # Public API\n    // Validate field and trigger some events for mainly `UI`\n    // @returns `true`, an array of the validators that failed, or\n    // `null` if validation is not finished. Prefer using whenValidate\n    validate: function validate(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        Utils.warnOnce('Calling validate on a parsley field without passing arguments as an object is deprecated.');\n        options = {\n          options: options\n        };\n      }\n\n      var promise = this.whenValidate(options);\n      if (!promise) // If excluded with `group` option\n        return true;\n\n      switch (promise.state()) {\n        case 'pending':\n          return null;\n\n        case 'resolved':\n          return true;\n\n        case 'rejected':\n          return this.validationResult;\n      }\n    },\n    // Validate field and trigger some events for mainly `UI`\n    // @returns a promise that succeeds only when all validations do\n    // or `undefined` if field is not in the given `group`.\n    whenValidate: function whenValidate() {\n      var _this$whenValid$alway,\n          _this = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          force = _ref.force,\n          group = _ref.group;\n\n      // do not validate a field if not the same as given validation group\n      this.refresh();\n      if (group && !this._isInGroup(group)) return;\n      this.value = this.getValue(); // Field Validate event. `this.value` could be altered for custom needs\n\n      this._trigger('validate');\n\n      return (_this$whenValid$alway = this.whenValid({\n        force: force,\n        value: this.value,\n        _refreshed: true\n      }).always(function () {\n        _this._reflowUI();\n      }).done(function () {\n        _this._trigger('success');\n      }).fail(function () {\n        _this._trigger('error');\n      }).always(function () {\n        _this._trigger('validated');\n      })).pipe.apply(_this$whenValid$alway, _toConsumableArray(this._pipeAccordingToValidationResult()));\n    },\n    hasConstraints: function hasConstraints() {\n      return 0 !== this.constraints.length;\n    },\n    // An empty optional field does not need validation\n    needsValidation: function needsValidation(value) {\n      if ('undefined' === typeof value) value = this.getValue(); // If a field is empty and not required, it is valid\n      // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators\n\n      if (!value.length && !this._isRequired() && 'undefined' === typeof this.options.validateIfEmpty) return false;\n      return true;\n    },\n    _isInGroup: function _isInGroup(group) {\n      if (Array.isArray(this.options.group)) return -1 !== $.inArray(group, this.options.group);\n      return this.options.group === group;\n    },\n    // Just validate field. Do not trigger any event.\n    // Returns `true` iff all constraints pass, `false` if there are failures,\n    // or `null` if the result can not be determined yet (depends on a promise)\n    // See also `whenValid`.\n    isValid: function isValid(options) {\n      if (arguments.length >= 1 && !$.isPlainObject(options)) {\n        Utils.warnOnce('Calling isValid on a parsley field without passing arguments as an object is deprecated.');\n\n        var _arguments = Array.prototype.slice.call(arguments),\n            force = _arguments[0],\n            value = _arguments[1];\n\n        options = {\n          force: force,\n          value: value\n        };\n      }\n\n      var promise = this.whenValid(options);\n      if (!promise) // Excluded via `group`\n        return true;\n      return statusMapping$1[promise.state()];\n    },\n    // Just validate field. Do not trigger any event.\n    // @returns a promise that succeeds only when all validations do\n    // or `undefined` if the field is not in the given `group`.\n    // The argument `force` will force validation of empty fields.\n    // If a `value` is given, it will be validated instead of the value of the input.\n    whenValid: function whenValid() {\n      var _this2 = this;\n\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$force = _ref2.force,\n          force = _ref2$force === void 0 ? false : _ref2$force,\n          value = _ref2.value,\n          group = _ref2.group,\n          _refreshed = _ref2._refreshed;\n\n      // Recompute options and rebind constraints to have latest changes\n      if (!_refreshed) this.refresh(); // do not validate a field if not the same as given validation group\n\n      if (group && !this._isInGroup(group)) return;\n      this.validationResult = true; // A field without constraint is valid\n\n      if (!this.hasConstraints()) return $.when(); // Value could be passed as argument, needed to add more power to 'field:validate'\n\n      if ('undefined' === typeof value || null === value) value = this.getValue();\n      if (!this.needsValidation(value) && true !== force) return $.when();\n\n      var groupedConstraints = this._getGroupedConstraints();\n\n      var promises = [];\n      $.each(groupedConstraints, function (_, constraints) {\n        // Process one group of constraints at a time, we validate the constraints\n        // and combine the promises together.\n        var promise = Utils.all($.map(constraints, function (constraint) {\n          return _this2._validateConstraint(value, constraint);\n        }));\n        promises.push(promise);\n        if (promise.state() === 'rejected') return false; // Interrupt processing if a group has already failed\n      });\n      return Utils.all(promises);\n    },\n    // @returns a promise\n    _validateConstraint: function _validateConstraint(value, constraint) {\n      var _this3 = this;\n\n      var result = constraint.validate(value, this); // Map false to a failed promise\n\n      if (false === result) result = $.Deferred().reject(); // Make sure we return a promise and that we record failures\n\n      return Utils.all([result]).fail(function (errorMessage) {\n        if (!(_this3.validationResult instanceof Array)) _this3.validationResult = [];\n\n        _this3.validationResult.push({\n          assert: constraint,\n          errorMessage: 'string' === typeof errorMessage && errorMessage\n        });\n      });\n    },\n    // @returns Parsley field computed value that could be overrided or configured in DOM\n    getValue: function getValue() {\n      var value; // Value could be overriden in DOM or with explicit options\n\n      if ('function' === typeof this.options.value) value = this.options.value(this);else if ('undefined' !== typeof this.options.value) value = this.options.value;else value = this.$element.val(); // Handle wrong DOM or configurations\n\n      if ('undefined' === typeof value || null === value) return '';\n      return this._handleWhitespace(value);\n    },\n    // Reset UI\n    reset: function reset() {\n      this._resetUI();\n\n      return this._trigger('reset');\n    },\n    // Destroy Parsley instance (+ UI)\n    destroy: function destroy() {\n      // Field case: emit destroy event to clean UI and then destroy stored instance\n      this._destroyUI();\n\n      this.$element.removeData('Parsley');\n      this.$element.removeData('FieldMultiple');\n\n      this._trigger('destroy');\n    },\n    // Actualize options and rebind constraints\n    refresh: function refresh() {\n      this._refreshConstraints();\n\n      return this;\n    },\n    _refreshConstraints: function _refreshConstraints() {\n      return this.actualizeOptions()._bindConstraints();\n    },\n    refreshConstraints: function refreshConstraints() {\n      Utils.warnOnce(\"Parsley's refreshConstraints is deprecated. Please use refresh\");\n      return this.refresh();\n    },\n\n    /**\n    * Add a new constraint to a field\n    *\n    * @param {String}   name\n    * @param {Mixed}    requirements      optional\n    * @param {Number}   priority          optional\n    * @param {Boolean}  isDomConstraint   optional\n    */\n    addConstraint: function addConstraint(name, requirements, priority, isDomConstraint) {\n      if (window.Parsley._validatorRegistry.validators[name]) {\n        var constraint = new Constraint(this, name, requirements, priority, isDomConstraint); // if constraint already exist, delete it and push new version\n\n        if ('undefined' !== this.constraintsByName[constraint.name]) this.removeConstraint(constraint.name);\n        this.constraints.push(constraint);\n        this.constraintsByName[constraint.name] = constraint;\n      }\n\n      return this;\n    },\n    // Remove a constraint\n    removeConstraint: function removeConstraint(name) {\n      for (var i = 0; i < this.constraints.length; i++) {\n        if (name === this.constraints[i].name) {\n          this.constraints.splice(i, 1);\n          break;\n        }\n      }\n\n      delete this.constraintsByName[name];\n      return this;\n    },\n    // Update a constraint (Remove + re-add)\n    updateConstraint: function updateConstraint(name, parameters, priority) {\n      return this.removeConstraint(name).addConstraint(name, parameters, priority);\n    },\n    // # Internals\n    // Internal only.\n    // Bind constraints from config + options + DOM\n    _bindConstraints: function _bindConstraints() {\n      var constraints = [];\n      var constraintsByName = {}; // clean all existing DOM constraints to only keep javascript user constraints\n\n      for (var i = 0; i < this.constraints.length; i++) {\n        if (false === this.constraints[i].isDomConstraint) {\n          constraints.push(this.constraints[i]);\n          constraintsByName[this.constraints[i].name] = this.constraints[i];\n        }\n      }\n\n      this.constraints = constraints;\n      this.constraintsByName = constraintsByName; // then re-add Parsley DOM-API constraints\n\n      for (var name in this.options) {\n        this.addConstraint(name, this.options[name], undefined, true);\n      } // finally, bind special HTML5 constraints\n\n\n      return this._bindHtml5Constraints();\n    },\n    // Internal only.\n    // Bind specific HTML5 constraints to be HTML5 compliant\n    _bindHtml5Constraints: function _bindHtml5Constraints() {\n      // html5 required\n      if (null !== this.element.getAttribute('required')) this.addConstraint('required', true, undefined, true); // html5 pattern\n\n      if (null !== this.element.getAttribute('pattern')) this.addConstraint('pattern', this.element.getAttribute('pattern'), undefined, true); // range\n\n      var min = this.element.getAttribute('min');\n      var max = this.element.getAttribute('max');\n      if (null !== min && null !== max) this.addConstraint('range', [min, max], undefined, true); // HTML5 min\n      else if (null !== min) this.addConstraint('min', min, undefined, true); // HTML5 max\n        else if (null !== max) this.addConstraint('max', max, undefined, true); // length\n\n      if (null !== this.element.getAttribute('minlength') && null !== this.element.getAttribute('maxlength')) this.addConstraint('length', [this.element.getAttribute('minlength'), this.element.getAttribute('maxlength')], undefined, true); // HTML5 minlength\n      else if (null !== this.element.getAttribute('minlength')) this.addConstraint('minlength', this.element.getAttribute('minlength'), undefined, true); // HTML5 maxlength\n        else if (null !== this.element.getAttribute('maxlength')) this.addConstraint('maxlength', this.element.getAttribute('maxlength'), undefined, true); // html5 types\n\n      var type = Utils.getType(this.element); // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise\n\n      if ('number' === type) {\n        return this.addConstraint('type', ['number', {\n          step: this.element.getAttribute('step') || '1',\n          base: min || this.element.getAttribute('value')\n        }], undefined, true); // Regular other HTML5 supported types\n      } else if (/^(email|url|range|date)$/i.test(type)) {\n        return this.addConstraint('type', type, undefined, true);\n      }\n\n      return this;\n    },\n    // Internal only.\n    // Field is required if have required constraint without `false` value\n    _isRequired: function _isRequired() {\n      if ('undefined' === typeof this.constraintsByName.required) return false;\n      return false !== this.constraintsByName.required.requirements;\n    },\n    // Internal only.\n    // Shortcut to trigger an event\n    _trigger: function _trigger(eventName) {\n      return this.trigger('field:' + eventName);\n    },\n    // Internal only\n    // Handles whitespace in a value\n    // Use `data-parsley-whitespace=\"squish\"` to auto squish input value\n    // Use `data-parsley-whitespace=\"trim\"` to auto trim input value\n    _handleWhitespace: function _handleWhitespace(value) {\n      if (true === this.options.trimValue) Utils.warnOnce('data-parsley-trim-value=\"true\" is deprecated, please use data-parsley-whitespace=\"trim\"');\n      if ('squish' === this.options.whitespace) value = value.replace(/\\s{2,}/g, ' ');\n      if ('trim' === this.options.whitespace || 'squish' === this.options.whitespace || true === this.options.trimValue) value = Utils.trimString(value);\n      return value;\n    },\n    _isDateInput: function _isDateInput() {\n      var c = this.constraintsByName.type;\n      return c && c.requirements === 'date';\n    },\n    // Internal only.\n    // Returns the constraints, grouped by descending priority.\n    // The result is thus an array of arrays of constraints.\n    _getGroupedConstraints: function _getGroupedConstraints() {\n      if (false === this.options.priorityEnabled) return [this.constraints];\n      var groupedConstraints = [];\n      var index = {}; // Create array unique of priorities\n\n      for (var i = 0; i < this.constraints.length; i++) {\n        var p = this.constraints[i].priority;\n        if (!index[p]) groupedConstraints.push(index[p] = []);\n        index[p].push(this.constraints[i]);\n      } // Sort them by priority DESC\n\n\n      groupedConstraints.sort(function (a, b) {\n        return b[0].priority - a[0].priority;\n      });\n      return groupedConstraints;\n    }\n  };\n\n  var Multiple = function Multiple() {\n    this.__class__ = 'FieldMultiple';\n  };\n\n  Multiple.prototype = {\n    // Add new `$element` sibling for multiple field\n    addElement: function addElement($element) {\n      this.$elements.push($element);\n      return this;\n    },\n    // See `Field._refreshConstraints()`\n    _refreshConstraints: function _refreshConstraints() {\n      var fieldConstraints;\n      this.constraints = []; // Select multiple special treatment\n\n      if (this.element.nodeName === 'SELECT') {\n        this.actualizeOptions()._bindConstraints();\n\n        return this;\n      } // Gather all constraints for each input in the multiple group\n\n\n      for (var i = 0; i < this.$elements.length; i++) {\n        // Check if element have not been dynamically removed since last binding\n        if (!$('html').has(this.$elements[i]).length) {\n          this.$elements.splice(i, 1);\n          continue;\n        }\n\n        fieldConstraints = this.$elements[i].data('FieldMultiple')._refreshConstraints().constraints;\n\n        for (var j = 0; j < fieldConstraints.length; j++) {\n          this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);\n        }\n      }\n\n      return this;\n    },\n    // See `Field.getValue()`\n    getValue: function getValue() {\n      // Value could be overriden in DOM\n      if ('function' === typeof this.options.value) return this.options.value(this);else if ('undefined' !== typeof this.options.value) return this.options.value; // Radio input case\n\n      if (this.element.nodeName === 'INPUT') {\n        var type = Utils.getType(this.element);\n        if (type === 'radio') return this._findRelated().filter(':checked').val() || ''; // checkbox input case\n\n        if (type === 'checkbox') {\n          var values = [];\n\n          this._findRelated().filter(':checked').each(function () {\n            values.push($(this).val());\n          });\n\n          return values;\n        }\n      } // Select multiple case\n\n\n      if (this.element.nodeName === 'SELECT' && null === this.$element.val()) return []; // Default case that should never happen\n\n      return this.$element.val();\n    },\n    _init: function _init() {\n      this.$elements = [this.$element];\n      return this;\n    }\n  };\n\n  var Factory = function Factory(element, options, parsleyFormInstance) {\n    this.element = element;\n    this.$element = $(element); // If the element has already been bound, returns its saved Parsley instance\n\n    var savedparsleyFormInstance = this.$element.data('Parsley');\n\n    if (savedparsleyFormInstance) {\n      // If the saved instance has been bound without a Form parent and there is one given in this call, add it\n      if ('undefined' !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {\n        savedparsleyFormInstance.parent = parsleyFormInstance;\n\n        savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);\n      }\n\n      if ('object' === _typeof(options)) {\n        _extends(savedparsleyFormInstance.options, options);\n      }\n\n      return savedparsleyFormInstance;\n    } // Parsley must be instantiated with a DOM element or jQuery $element\n\n\n    if (!this.$element.length) throw new Error('You must bind Parsley on an existing element.');\n    if ('undefined' !== typeof parsleyFormInstance && 'Form' !== parsleyFormInstance.__class__) throw new Error('Parent instance must be a Form instance');\n    this.parent = parsleyFormInstance || window.Parsley;\n    return this.init(options);\n  };\n\n  Factory.prototype = {\n    init: function init(options) {\n      this.__class__ = 'Parsley';\n      this.__version__ = '2.9.2';\n      this.__id__ = Utils.generateID(); // Pre-compute options\n\n      this._resetOptions(options); // A Form instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute\n\n\n      if (this.element.nodeName === 'FORM' || Utils.checkAttr(this.element, this.options.namespace, 'validate') && !this.$element.is(this.options.inputs)) return this.bind('parsleyForm'); // Every other element is bound as a `Field` or `FieldMultiple`\n\n      return this.isMultiple() ? this.handleMultiple() : this.bind('parsleyField');\n    },\n    isMultiple: function isMultiple() {\n      var type = Utils.getType(this.element);\n      return type === 'radio' || type === 'checkbox' || this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple');\n    },\n    // Multiples fields are a real nightmare :(\n    // Maybe some refactoring would be appreciated here...\n    handleMultiple: function handleMultiple() {\n      var _this = this;\n\n      var name;\n      var parsleyMultipleInstance; // Handle multiple name\n\n      this.options.multiple = this.options.multiple || (name = this.element.getAttribute('name')) || this.element.getAttribute('id'); // Special select multiple input\n\n      if (this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple')) {\n        this.options.multiple = this.options.multiple || this.__id__;\n        return this.bind('parsleyFieldMultiple'); // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it\n      } else if (!this.options.multiple) {\n        Utils.warn('To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.', this.$element);\n        return this;\n      } // Remove special chars\n\n\n      this.options.multiple = this.options.multiple.replace(/(:|\\.|\\[|\\]|\\{|\\}|\\$)/g, ''); // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name\n\n      if (name) {\n        $('input[name=\"' + name + '\"]').each(function (i, input) {\n          var type = Utils.getType(input);\n          if (type === 'radio' || type === 'checkbox') input.setAttribute(_this.options.namespace + 'multiple', _this.options.multiple);\n        });\n      } // Check here if we don't already have a related multiple instance saved\n\n\n      var $previouslyRelated = this._findRelated();\n\n      for (var i = 0; i < $previouslyRelated.length; i++) {\n        parsleyMultipleInstance = $($previouslyRelated.get(i)).data('Parsley');\n\n        if ('undefined' !== typeof parsleyMultipleInstance) {\n          if (!this.$element.data('FieldMultiple')) {\n            parsleyMultipleInstance.addElement(this.$element);\n          }\n\n          break;\n        }\n      } // Create a secret Field instance for every multiple field. It will be stored in `data('FieldMultiple')`\n      // And will be useful later to access classic `Field` stuff while being in a `FieldMultiple` instance\n\n\n      this.bind('parsleyField', true);\n      return parsleyMultipleInstance || this.bind('parsleyFieldMultiple');\n    },\n    // Return proper `Form`, `Field` or `FieldMultiple`\n    bind: function bind(type, doNotStore) {\n      var parsleyInstance;\n\n      switch (type) {\n        case 'parsleyForm':\n          parsleyInstance = $.extend(new Form(this.element, this.domOptions, this.options), new Base(), window.ParsleyExtend)._bindFields();\n          break;\n\n        case 'parsleyField':\n          parsleyInstance = $.extend(new Field(this.element, this.domOptions, this.options, this.parent), new Base(), window.ParsleyExtend);\n          break;\n\n        case 'parsleyFieldMultiple':\n          parsleyInstance = $.extend(new Field(this.element, this.domOptions, this.options, this.parent), new Multiple(), new Base(), window.ParsleyExtend)._init();\n          break;\n\n        default:\n          throw new Error(type + 'is not a supported Parsley type');\n      }\n\n      if (this.options.multiple) Utils.setAttr(this.element, this.options.namespace, 'multiple', this.options.multiple);\n\n      if ('undefined' !== typeof doNotStore) {\n        this.$element.data('FieldMultiple', parsleyInstance);\n        return parsleyInstance;\n      } // Store the freshly bound instance in a DOM element for later access using jQuery `data()`\n\n\n      this.$element.data('Parsley', parsleyInstance); // Tell the world we have a new Form or Field instance!\n\n      parsleyInstance._actualizeTriggers();\n\n      parsleyInstance._trigger('init');\n\n      return parsleyInstance;\n    }\n  };\n\n  var vernums = $.fn.jquery.split('.');\n\n  if (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) {\n    throw \"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.\";\n  }\n\n  if (!vernums.forEach) {\n    Utils.warn('Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim');\n  } // Inherit `on`, `off` & `trigger` to Parsley:\n\n\n  var Parsley = _extends(new Base(), {\n    element: document,\n    $element: $(document),\n    actualizeOptions: null,\n    _resetOptions: null,\n    Factory: Factory,\n    version: '2.9.2'\n  }); // Supplement Field and Form with Base\n  // This way, the constructors will have access to those methods\n\n\n  _extends(Field.prototype, UI.Field, Base.prototype);\n\n  _extends(Form.prototype, UI.Form, Base.prototype); // Inherit actualizeOptions and _resetOptions:\n\n\n  _extends(Factory.prototype, Base.prototype); // ### jQuery API\n  // `$('.elem').parsley(options)` or `$('.elem').psly(options)`\n\n\n  $.fn.parsley = $.fn.psly = function (options) {\n    if (this.length > 1) {\n      var instances = [];\n      this.each(function () {\n        instances.push($(this).parsley(options));\n      });\n      return instances;\n    } // Return undefined if applied to non existing DOM element\n\n\n    if (this.length == 0) {\n      return;\n    }\n\n    return new Factory(this[0], options);\n  }; // ### Field and Form extension\n  // Ensure the extension is now defined if it wasn't previously\n\n\n  if ('undefined' === typeof window.ParsleyExtend) window.ParsleyExtend = {}; // ### Parsley config\n  // Inherit from ParsleyDefault, and copy over any existing values\n\n  Parsley.options = _extends(Utils.objectCreate(Defaults), window.ParsleyConfig);\n  window.ParsleyConfig = Parsley.options; // Old way of accessing global options\n  // ### Globals\n\n  window.Parsley = window.psly = Parsley;\n  Parsley.Utils = Utils;\n  window.ParsleyUtils = {};\n  $.each(Utils, function (key, value) {\n    if ('function' === typeof value) {\n      window.ParsleyUtils[key] = function () {\n        Utils.warnOnce('Accessing `window.ParsleyUtils` is deprecated. Use `window.Parsley.Utils` instead.');\n        return Utils[key].apply(Utils, arguments);\n      };\n    }\n  }); // ### Define methods that forward to the registry, and deprecate all access except through window.Parsley\n\n  var registry = window.Parsley._validatorRegistry = new ValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);\n  window.ParsleyValidator = {};\n  $.each('setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator hasValidator'.split(' '), function (i, method) {\n    window.Parsley[method] = function () {\n      return registry[method].apply(registry, arguments);\n    };\n\n    window.ParsleyValidator[method] = function () {\n      var _window$Parsley;\n\n      Utils.warnOnce(\"Accessing the method '\".concat(method, \"' through Validator is deprecated. Simply call 'window.Parsley.\").concat(method, \"(...)'\"));\n      return (_window$Parsley = window.Parsley)[method].apply(_window$Parsley, arguments);\n    };\n  }); // ### UI\n  // Deprecated global object\n\n  window.Parsley.UI = UI;\n  window.ParsleyUI = {\n    removeError: function removeError(instance, name, doNotUpdateClass) {\n      var updateClass = true !== doNotUpdateClass;\n      Utils.warnOnce(\"Accessing UI is deprecated. Call 'removeError' on the instance directly. Please comment in issue 1073 as to your need to call this method.\");\n      return instance.removeError(name, {\n        updateClass: updateClass\n      });\n    },\n    getErrorsMessages: function getErrorsMessages(instance) {\n      Utils.warnOnce(\"Accessing UI is deprecated. Call 'getErrorsMessages' on the instance directly.\");\n      return instance.getErrorsMessages();\n    }\n  };\n  $.each('addError updateError'.split(' '), function (i, method) {\n    window.ParsleyUI[method] = function (instance, name, message, assert, doNotUpdateClass) {\n      var updateClass = true !== doNotUpdateClass;\n      Utils.warnOnce(\"Accessing UI is deprecated. Call '\".concat(method, \"' on the instance directly. Please comment in issue 1073 as to your need to call this method.\"));\n      return instance[method](name, {\n        message: message,\n        assert: assert,\n        updateClass: updateClass\n      });\n    };\n  }); // ### PARSLEY auto-binding\n  // Prevent it by setting `ParsleyConfig.autoBind` to `false`\n\n  if (false !== window.ParsleyConfig.autoBind) {\n    $(function () {\n      // Works only on `data-parsley-validate`.\n      if ($('[data-parsley-validate]').length) $('[data-parsley-validate]').parsley();\n    });\n  }\n\n  var o = $({});\n\n  var deprecated = function deprecated() {\n    Utils.warnOnce(\"Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley\");\n  }; // Returns an event handler that calls `fn` with the arguments it expects\n\n\n  function adapt(fn, context) {\n    // Store to allow unbinding\n    if (!fn.parsleyAdaptedCallback) {\n      fn.parsleyAdaptedCallback = function () {\n        var args = Array.prototype.slice.call(arguments, 0);\n        args.unshift(this);\n        fn.apply(context || o, args);\n      };\n    }\n\n    return fn.parsleyAdaptedCallback;\n  }\n\n  var eventPrefix = 'parsley:'; // Converts 'parsley:form:validate' into 'form:validate'\n\n  function eventName(name) {\n    if (name.lastIndexOf(eventPrefix, 0) === 0) return name.substr(eventPrefix.length);\n    return name;\n  } // $.listen is deprecated. Use Parsley.on instead.\n\n\n  $.listen = function (name, callback) {\n    var context;\n    deprecated();\n\n    if ('object' === _typeof(arguments[1]) && 'function' === typeof arguments[2]) {\n      context = arguments[1];\n      callback = arguments[2];\n    }\n\n    if ('function' !== typeof callback) throw new Error('Wrong parameters');\n    window.Parsley.on(eventName(name), adapt(callback, context));\n  };\n\n  $.listenTo = function (instance, name, fn) {\n    deprecated();\n    if (!(instance instanceof Field) && !(instance instanceof Form)) throw new Error('Must give Parsley instance');\n    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong parameters');\n    instance.on(eventName(name), adapt(fn));\n  };\n\n  $.unsubscribe = function (name, fn) {\n    deprecated();\n    if ('string' !== typeof name || 'function' !== typeof fn) throw new Error('Wrong arguments');\n    window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);\n  };\n\n  $.unsubscribeTo = function (instance, name) {\n    deprecated();\n    if (!(instance instanceof Field) && !(instance instanceof Form)) throw new Error('Must give Parsley instance');\n    instance.off(eventName(name));\n  };\n\n  $.unsubscribeAll = function (name) {\n    deprecated();\n    window.Parsley.off(eventName(name));\n    $('form,input,textarea,select').each(function () {\n      var instance = $(this).data('Parsley');\n\n      if (instance) {\n        instance.off(eventName(name));\n      }\n    });\n  }; // $.emit is deprecated. Use jQuery events instead.\n\n\n  $.emit = function (name, instance) {\n    var _instance;\n\n    deprecated();\n    var instanceGiven = instance instanceof Field || instance instanceof Form;\n    var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);\n    args.unshift(eventName(name));\n\n    if (!instanceGiven) {\n      instance = window.Parsley;\n    }\n\n    (_instance = instance).trigger.apply(_instance, _toConsumableArray(args));\n  };\n\n  $.extend(true, Parsley, {\n    asyncValidators: {\n      'default': {\n        fn: function fn(xhr) {\n          // By default, only status 2xx are deemed successful.\n          // Note: we use status instead of state() because responses with status 200\n          // but invalid messages (e.g. an empty body for content type set to JSON) will\n          // result in state() === 'rejected'.\n          return xhr.status >= 200 && xhr.status < 300;\n        },\n        url: false\n      },\n      reverse: {\n        fn: function fn(xhr) {\n          // If reverse option is set, a failing ajax request is considered successful\n          return xhr.status < 200 || xhr.status >= 300;\n        },\n        url: false\n      }\n    },\n    addAsyncValidator: function addAsyncValidator(name, fn, url, options) {\n      Parsley.asyncValidators[name] = {\n        fn: fn,\n        url: url || false,\n        options: options || {}\n      };\n      return this;\n    }\n  });\n  Parsley.addValidator('remote', {\n    requirementType: {\n      '': 'string',\n      'validator': 'string',\n      'reverse': 'boolean',\n      'options': 'object'\n    },\n    validateString: function validateString(value, url, options, instance) {\n      var data = {};\n      var ajaxOptions;\n      var csr;\n      var validator = options.validator || (true === options.reverse ? 'reverse' : 'default');\n      if ('undefined' === typeof Parsley.asyncValidators[validator]) throw new Error('Calling an undefined async validator: `' + validator + '`');\n      url = Parsley.asyncValidators[validator].url || url; // Fill current value\n\n      if (url.indexOf('{value}') > -1) {\n        url = url.replace('{value}', encodeURIComponent(value));\n      } else {\n        data[instance.element.getAttribute('name') || instance.element.getAttribute('id')] = value;\n      } // Merge options passed in from the function with the ones in the attribute\n\n\n      var remoteOptions = $.extend(true, options.options || {}, Parsley.asyncValidators[validator].options); // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`\n\n      ajaxOptions = $.extend(true, {}, {\n        url: url,\n        data: data,\n        type: 'GET'\n      }, remoteOptions); // Generate store key based on ajax options\n\n      instance.trigger('field:ajaxoptions', instance, ajaxOptions);\n      csr = $.param(ajaxOptions); // Initialise querry cache\n\n      if ('undefined' === typeof Parsley._remoteCache) Parsley._remoteCache = {}; // Try to retrieve stored xhr\n\n      var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);\n\n      var handleXhr = function handleXhr() {\n        var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);\n        if (!result) // Map falsy results to rejected promise\n          result = $.Deferred().reject();\n        return $.when(result);\n      };\n\n      return xhr.then(handleXhr, handleXhr);\n    },\n    priority: -1\n  });\n  Parsley.on('form:submit', function () {\n    Parsley._remoteCache = {};\n  });\n\n  Base.prototype.addAsyncValidator = function () {\n    Utils.warnOnce('Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`');\n    return Parsley.addAsyncValidator.apply(Parsley, arguments);\n  };\n\n  // This is included with the Parsley library itself,\n  Parsley.addMessages('en', {\n    defaultMessage: \"This value seems to be invalid.\",\n    type: {\n      email: \"This value should be a valid email.\",\n      url: \"This value should be a valid url.\",\n      number: \"This value should be a valid number.\",\n      integer: \"This value should be a valid integer.\",\n      digits: \"This value should be digits.\",\n      alphanum: \"This value should be alphanumeric.\"\n    },\n    notblank: \"This value should not be blank.\",\n    required: \"This value is required.\",\n    pattern: \"This value seems to be invalid.\",\n    min: \"This value should be greater than or equal to %s.\",\n    max: \"This value should be lower than or equal to %s.\",\n    range: \"This value should be between %s and %s.\",\n    minlength: \"This value is too short. It should have %s characters or more.\",\n    maxlength: \"This value is too long. It should have %s characters or fewer.\",\n    length: \"This value length is invalid. It should be between %s and %s characters long.\",\n    mincheck: \"You must select at least %s choices.\",\n    maxcheck: \"You must select %s choices or fewer.\",\n    check: \"You must select between %s and %s choices.\",\n    equalto: \"This value should be the same.\",\n    euvatin: \"It's not a valid VAT Identification Number.\"\n  });\n  Parsley.setLocale('en');\n\n  function InputEvent() {\n    var _this = this;\n\n    var globals = window || global; // Slightly odd way construct our object. This way methods are force bound.\n    // Used to test for duplicate library.\n\n    _extends(this, {\n      // For browsers that do not support isTrusted, assumes event is native.\n      isNativeEvent: function isNativeEvent(evt) {\n        return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n      },\n      fakeInputEvent: function fakeInputEvent(evt) {\n        if (_this.isNativeEvent(evt)) {\n          $(evt.target).trigger('input');\n        }\n      },\n      misbehaves: function misbehaves(evt) {\n        if (_this.isNativeEvent(evt)) {\n          _this.behavesOk(evt);\n\n          $(document).on('change.inputevent', evt.data.selector, _this.fakeInputEvent);\n\n          _this.fakeInputEvent(evt);\n        }\n      },\n      behavesOk: function behavesOk(evt) {\n        if (_this.isNativeEvent(evt)) {\n          $(document) // Simply unbinds the testing handler\n          .off('input.inputevent', evt.data.selector, _this.behavesOk).off('change.inputevent', evt.data.selector, _this.misbehaves);\n        }\n      },\n      // Bind the testing handlers\n      install: function install() {\n        if (globals.inputEventPatched) {\n          return;\n        }\n\n        globals.inputEventPatched = '0.0.3';\n\n        for (var _i = 0, _arr = ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]']; _i < _arr.length; _i++) {\n          var selector = _arr[_i];\n          $(document).on('input.inputevent', selector, {\n            selector: selector\n          }, _this.behavesOk).on('change.inputevent', selector, {\n            selector: selector\n          }, _this.misbehaves);\n        }\n      },\n      uninstall: function uninstall() {\n        delete globals.inputEventPatched;\n        $(document).off('.inputevent');\n      }\n    });\n  }\n  var inputevent = new InputEvent();\n\n  inputevent.install();\n\n  return Parsley;\n\n})));\n//# sourceMappingURL=parsley.js.map\n","import $ from 'jquery';\n\nvar globalID = 1;\nvar pastWarnings = {};\n\nvar Utils = {\n  // Parsley DOM-API\n  // returns object from dom attributes and values\n  attr: function (element, namespace, obj) {\n    var i;\n    var attribute;\n    var attributes;\n    var regex = new RegExp('^' + namespace, 'i');\n\n    if ('undefined' === typeof obj)\n      obj = {};\n    else {\n      // Clear all own properties. This won't affect prototype's values\n      for (i in obj) {\n        if (obj.hasOwnProperty(i))\n          delete obj[i];\n      }\n    }\n\n    if (!element)\n      return obj;\n\n    attributes = element.attributes;\n    for (i = attributes.length; i--; ) {\n      attribute = attributes[i];\n\n      if (attribute && attribute.specified && regex.test(attribute.name)) {\n        obj[this.camelize(attribute.name.slice(namespace.length))] = this.deserializeValue(attribute.value);\n      }\n    }\n\n    return obj;\n  },\n\n  checkAttr: function (element, namespace, checkAttr) {\n    return element.hasAttribute(namespace + checkAttr);\n  },\n\n  setAttr: function (element, namespace, attr, value) {\n    element.setAttribute(this.dasherize(namespace + attr), String(value));\n  },\n\n  getType: function(element) {\n    return element.getAttribute('type') || 'text';\n  },\n\n  generateID: function () {\n    return '' + globalID++;\n  },\n\n  /** Third party functions **/\n  deserializeValue: function (value) {\n    var num;\n\n    try {\n      return value ?\n        value == \"true\" ||\n        (value == \"false\" ? false :\n        value == \"null\" ? null :\n        !isNaN(num = Number(value)) ? num :\n        /^[\\[\\{]/.test(value) ? JSON.parse(value) :\n        value)\n        : value;\n    } catch (e) { return value; }\n  },\n\n  // Zepto camelize function\n  camelize: function (str) {\n    return str.replace(/-+(.)?/g, function (match, chr) {\n      return chr ? chr.toUpperCase() : '';\n    });\n  },\n\n  // Zepto dasherize function\n  dasherize: function (str) {\n    return str.replace(/::/g, '/')\n      .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n      .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n      .replace(/_/g, '-')\n      .toLowerCase();\n  },\n\n  warn: function () {\n    if (window.console && 'function' === typeof window.console.warn)\n      window.console.warn(...arguments);\n  },\n\n  warnOnce: function(msg) {\n    if (!pastWarnings[msg]) {\n      pastWarnings[msg] = true;\n      this.warn(...arguments);\n    }\n  },\n\n  _resetWarnings: function () {\n    pastWarnings = {};\n  },\n\n  trimString: function(string) {\n    return string.replace(/^\\s+|\\s+$/g, '');\n  },\n\n  parse: {\n    date: function(string) {\n      let parsed = string.match(/^(\\d{4,})-(\\d\\d)-(\\d\\d)$/);\n      if (!parsed)\n        return null;\n      let [_, year, month, day] = parsed.map(x => parseInt(x, 10));\n      let date = new Date(year, month - 1, day);\n      if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day)\n        return null;\n      return date;\n    },\n    string: function(string) {\n      return string;\n    },\n    integer: function(string) {\n      if (isNaN(string))\n        return null;\n      return parseInt(string, 10);\n    },\n    number: function(string) {\n      if (isNaN(string))\n        throw null;\n      return parseFloat(string);\n    },\n    'boolean': function _boolean(string) {\n      return !(/^\\s*false\\s*$/i.test(string));\n    },\n    object: function(string) {\n      return Utils.deserializeValue(string);\n    },\n    regexp: function(regexp) {\n      var flags = '';\n\n      // Test if RegExp is literal, if not, nothing to be done, otherwise, we need to isolate flags and pattern\n      if (/^\\/.*\\/(?:[gimy]*)$/.test(regexp)) {\n        // Replace the regexp literal string with the first match group: ([gimy]*)\n        // If no flag is present, this will be a blank string\n        flags = regexp.replace(/.*\\/([gimy]*)$/, '$1');\n        // Again, replace the regexp literal string with the first match group:\n        // everything excluding the opening and closing slashes and the flags\n        regexp = regexp.replace(new RegExp('^/(.*?)/' + flags + '$'), '$1');\n      } else {\n        // Anchor regexp:\n        regexp = '^' + regexp + '$';\n      }\n      return new RegExp(regexp, flags);\n    }\n  },\n\n  parseRequirement: function(requirementType, string) {\n    var converter = this.parse[requirementType || 'string'];\n    if (!converter)\n      throw 'Unknown requirement specification: \"' + requirementType + '\"';\n    let converted = converter(string);\n    if (converted === null)\n      throw `Requirement is not a ${requirementType}: \"${string}\"`;\n    return converted;\n  },\n\n  namespaceEvents: function(events, namespace) {\n    events = this.trimString(events || '').split(/\\s+/);\n    if (!events[0])\n      return '';\n    return $.map(events, evt => `${evt}.${namespace}`).join(' ');\n  },\n\n  difference: function(array, remove) {\n    // This is O(N^2), should be optimized\n    let result = [];\n    $.each(array, (_, elem) => {\n      if (remove.indexOf(elem) == -1)\n        result.push(elem);\n    });\n    return result;\n  },\n\n  // Alter-ego to native Promise.all, but for jQuery\n  all: function(promises) {\n    // jQuery treats $.when() and $.when(singlePromise) differently; let's avoid that and add spurious elements\n    return $.when(...promises, 42, 42);\n  },\n\n  // Object.create polyfill, see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create#Polyfill\n  objectCreate: Object.create || (function () {\n    var Object = function () {};\n    return function (prototype) {\n      if (arguments.length > 1) {\n        throw Error('Second argument not supported');\n      }\n      if (typeof prototype != 'object') {\n        throw TypeError('Argument must be an object');\n      }\n      Object.prototype = prototype;\n      var result = new Object();\n      Object.prototype = null;\n      return result;\n    };\n  })(),\n\n  _SubmitSelector: 'input[type=\"submit\"], button:submit'\n};\n\nexport default Utils;\n","// All these options could be overriden and specified directly in DOM using\n// `data-parsley-` default DOM-API\n// eg: `inputs` can be set in DOM using `data-parsley-inputs=\"input, textarea\"`\n// eg: `data-parsley-stop-on-first-failing-constraint=\"false\"`\n\nvar Defaults = {\n  // ### General\n\n  // Default data-namespace for DOM API\n  namespace: 'data-parsley-',\n\n  // Supported inputs by default\n  inputs: 'input, textarea, select',\n\n  // Excluded inputs by default\n  excluded: 'input[type=button], input[type=submit], input[type=reset], input[type=hidden]',\n\n  // Stop validating field on highest priority failing constraint\n  priorityEnabled: true,\n\n  // ### Field only\n\n  // identifier used to group together inputs (e.g. radio buttons...)\n  multiple: null,\n\n  // identifier (or array of identifiers) used to validate only a select group of inputs\n  group: null,\n\n  // ### UI\n  // Enable\\Disable error messages\n  uiEnabled: true,\n\n  // Key events threshold before validation\n  validationThreshold: 3,\n\n  // Focused field on form validation error. 'first'|'last'|'none'\n  focus: 'first',\n\n  // event(s) that will trigger validation before first failure. eg: `input`...\n  trigger: false,\n\n  // event(s) that will trigger validation after first failure.\n  triggerAfterFailure: 'input',\n\n  // Class that would be added on every failing validation Parsley field\n  errorClass: 'parsley-error',\n\n  // Same for success validation\n  successClass: 'parsley-success',\n\n  // Return the `$element` that will receive these above success or error classes\n  // Could also be (and given directly from DOM) a valid selector like `'#div'`\n  classHandler: function (Field) {},\n\n  // Return the `$element` where errors will be appended\n  // Could also be (and given directly from DOM) a valid selector like `'#div'`\n  errorsContainer: function (Field) {},\n\n  // ul elem that would receive errors' list\n  errorsWrapper: '<ul class=\"parsley-errors-list\"></ul>',\n\n  // li elem that would receive error message\n  errorTemplate: '<li></li>'\n};\n\nexport default Defaults;\n","import $ from 'jquery';\nimport Utils from './utils';\n\nvar Base = function () {\n  this.__id__ = Utils.generateID();\n};\n\nBase.prototype = {\n  asyncSupport: true, // Deprecated\n\n  _pipeAccordingToValidationResult: function () {\n    var pipe = () => {\n      var r = $.Deferred();\n      if (true !== this.validationResult)\n        r.reject();\n      return r.resolve().promise();\n    };\n    return [pipe, pipe];\n  },\n\n  actualizeOptions: function () {\n    Utils.attr(this.element, this.options.namespace, this.domOptions);\n    if (this.parent && this.parent.actualizeOptions)\n      this.parent.actualizeOptions();\n    return this;\n  },\n\n  _resetOptions: function (initOptions) {\n    this.domOptions = Utils.objectCreate(this.parent.options);\n    this.options = Utils.objectCreate(this.domOptions);\n    // Shallow copy of ownProperties of initOptions:\n    for (var i in initOptions) {\n      if (initOptions.hasOwnProperty(i))\n        this.options[i] = initOptions[i];\n    }\n    this.actualizeOptions();\n  },\n\n  _listeners: null,\n\n  // Register a callback for the given event name\n  // Callback is called with context as the first argument and the `this`\n  // The context is the current parsley instance, or window.Parsley if global\n  // A return value of `false` will interrupt the calls\n  on: function (name, fn) {\n    this._listeners = this._listeners || {};\n    var queue = this._listeners[name] = this._listeners[name] || [];\n    queue.push(fn);\n\n    return this;\n  },\n\n  // Deprecated. Use `on` instead\n  subscribe: function(name, fn) {\n    $.listenTo(this, name.toLowerCase(), fn);\n  },\n\n  // Unregister a callback (or all if none is given) for the given event name\n  off: function (name, fn) {\n    var queue = this._listeners && this._listeners[name];\n    if (queue) {\n      if (!fn) {\n        delete this._listeners[name];\n      } else {\n        for (var i = queue.length; i--; )\n          if (queue[i] === fn)\n            queue.splice(i, 1);\n      }\n    }\n    return this;\n  },\n\n  // Deprecated. Use `off`\n  unsubscribe: function(name, fn) {\n    $.unsubscribeTo(this, name.toLowerCase());\n  },\n\n  // Trigger an event of the given name\n  // A return value of `false` interrupts the callback chain\n  // Returns false if execution was interrupted\n  trigger: function (name, target, extraArg) {\n    target = target || this;\n    var queue = this._listeners && this._listeners[name];\n    var result;\n    var parentResult;\n    if (queue) {\n      for (var i = queue.length; i--; ) {\n        result = queue[i].call(target, target, extraArg);\n        if (result === false) return result;\n      }\n    }\n    if (this.parent) {\n      return this.parent.trigger(name, target, extraArg);\n    }\n    return true;\n  },\n\n  asyncIsValid: function (group, force) {\n    Utils.warnOnce(\"asyncIsValid is deprecated; please use whenValid instead\");\n    return this.whenValid({group, force});\n  },\n\n  _findRelated: function () {\n    return this.options.multiple ?\n      $(this.parent.element.querySelectorAll(`[${this.options.namespace}multiple=\"${this.options.multiple}\"]`))\n    : this.$element;\n  }\n};\n\nexport default Base;\n","import $ from 'jquery';\nimport Utils from './utils';\n\nvar convertArrayRequirement = function(string, length) {\n  var m = string.match(/^\\s*\\[(.*)\\]\\s*$/);\n  if (!m)\n    throw 'Requirement is not an array: \"' + string + '\"';\n  var values = m[1].split(',').map(Utils.trimString);\n  if (values.length !== length)\n    throw 'Requirement has ' + values.length + ' values when ' + length + ' are needed';\n  return values;\n};\n\nvar convertExtraOptionRequirement = function(requirementSpec, string, extraOptionReader) {\n  var main = null;\n  var extra = {};\n  for (var key in requirementSpec) {\n    if (key) {\n      var value = extraOptionReader(key);\n      if ('string' === typeof value)\n        value = Utils.parseRequirement(requirementSpec[key], value);\n      extra[key] = value;\n    } else {\n      main = Utils.parseRequirement(requirementSpec[key], string);\n    }\n  }\n  return [main, extra];\n};\n\n// A Validator needs to implement the methods `validate` and `parseRequirements`\n\nvar Validator = function(spec) {\n  $.extend(true, this, spec);\n};\n\nValidator.prototype = {\n  // Returns `true` iff the given `value` is valid according the given requirements.\n  validate: function(value, requirementFirstArg) {\n    if (this.fn) { // Legacy style validator\n\n      if (arguments.length > 3)  // If more args then value, requirement, instance...\n        requirementFirstArg = [].slice.call(arguments, 1, -1);  // Skip first arg (value) and last (instance), combining the rest\n      return this.fn(value, requirementFirstArg);\n    }\n\n    if (Array.isArray(value)) {\n      if (!this.validateMultiple)\n        throw 'Validator `' + this.name + '` does not handle multiple values';\n      return this.validateMultiple(...arguments);\n    } else {\n      let instance = arguments[arguments.length - 1];\n      if (this.validateDate && instance._isDateInput()) {\n        arguments[0] = Utils.parse.date(arguments[0]);\n        if (arguments[0] === null)\n          return false;\n        return this.validateDate(...arguments);\n      }\n      if (this.validateNumber) {\n        if (!value) // Builtin validators all accept empty strings, except `required` of course\n          return true;\n        if (isNaN(value))\n          return false;\n        arguments[0] = parseFloat(arguments[0]);\n        return this.validateNumber(...arguments);\n      }\n      if (this.validateString) {\n        return this.validateString(...arguments);\n      }\n      throw 'Validator `' + this.name + '` only handles multiple values';\n    }\n  },\n\n  // Parses `requirements` into an array of arguments,\n  // according to `this.requirementType`\n  parseRequirements: function(requirements, extraOptionReader) {\n    if ('string' !== typeof requirements) {\n      // Assume requirement already parsed\n      // but make sure we return an array\n      return Array.isArray(requirements) ? requirements : [requirements];\n    }\n    var type = this.requirementType;\n    if (Array.isArray(type)) {\n      var values = convertArrayRequirement(requirements, type.length);\n      for (var i = 0; i < values.length; i++)\n        values[i] = Utils.parseRequirement(type[i], values[i]);\n      return values;\n    } else if ($.isPlainObject(type)) {\n      return convertExtraOptionRequirement(type, requirements, extraOptionReader);\n    } else {\n      return [Utils.parseRequirement(type, requirements)];\n    }\n  },\n  // Defaults:\n  requirementType: 'string',\n\n  priority: 2\n\n};\n\nexport default Validator;\n","import $ from 'jquery';\nimport Utils from './utils';\nimport Defaults from './defaults';\nimport Validator from './validator';\n\nvar ValidatorRegistry = function (validators, catalog) {\n  this.__class__ = 'ValidatorRegistry';\n\n  // Default Parsley locale is en\n  this.locale = 'en';\n\n  this.init(validators || {}, catalog || {});\n};\n\nvar typeTesters =  {\n  email: /^((([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-zA-Z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))$/,\n\n  // Follow https://www.w3.org/TR/html5/infrastructure.html#floating-point-numbers\n  number: /^-?(\\d*\\.)?\\d+(e[-+]?\\d+)?$/i,\n\n  integer: /^-?\\d+$/,\n\n  digits: /^\\d+$/,\n\n  alphanum: /^\\w+$/i,\n\n  date: {\n    test: value => Utils.parse.date(value) !== null\n  },\n\n  url: new RegExp(\n      \"^\" +\n        // protocol identifier\n        \"(?:(?:https?|ftp)://)?\" + // ** mod: make scheme optional\n        // user:pass authentication\n        \"(?:\\\\S+(?::\\\\S*)?@)?\" +\n        \"(?:\" +\n          // IP address exclusion\n          // private & local networks\n          // \"(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})\" +   // ** mod: allow local networks\n          // \"(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n          // \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +  // ** mod: allow local networks\n          // IP address dotted notation octets\n          // excludes loopback network 0.0.0.0\n          // excludes reserved space >= 224.0.0.0\n          // excludes network & broacast addresses\n          // (first & last IP address of each class)\n          \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\n          \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\n          \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\n        \"|\" +\n          // host name\n          \"(?:(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)\" +\n          // domain name\n          \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff0-9]-*)*[a-zA-Z\\\\u00a1-\\\\uffff0-9]+)*\" +\n          // TLD identifier\n          \"(?:\\\\.(?:[a-zA-Z\\\\u00a1-\\\\uffff]{2,}))\" +\n        \")\" +\n        // port number\n        \"(?::\\\\d{2,5})?\" +\n        // resource path\n        \"(?:/\\\\S*)?\" +\n      \"$\"\n    )\n};\ntypeTesters.range = typeTesters.number;\n\n// See http://stackoverflow.com/a/10454560/8279\nvar decimalPlaces = num => {\n  var match = ('' + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n  if (!match) { return 0; }\n  return Math.max(\n       0,\n       // Number of digits right of decimal point.\n       (match[1] ? match[1].length : 0) -\n       // Adjust for scientific notation.\n       (match[2] ? +match[2] : 0));\n};\n\n// parseArguments('number', ['1', '2']) => [1, 2]\nlet parseArguments = (type, args) => args.map(Utils.parse[type]);\n// operatorToValidator returns a validating function for an operator function, applied to the given type\nlet operatorToValidator = (type, operator) => {\n  return (value, ...requirementsAndInput) => {\n    requirementsAndInput.pop(); // Get rid of `input` argument\n    return operator(value, ...parseArguments(type, requirementsAndInput));\n  };\n};\n\nlet comparisonOperator = operator => ({\n  validateDate: operatorToValidator('date', operator),\n  validateNumber: operatorToValidator('number', operator),\n  requirementType: operator.length <= 2 ? 'string' : ['string', 'string'], // Support operators with a 1 or 2 requirement(s)\n  priority: 30\n});\n\nValidatorRegistry.prototype = {\n  init: function (validators, catalog) {\n    this.catalog = catalog;\n    // Copy prototype's validators:\n    this.validators = Object.assign({}, this.validators);\n\n    for (var name in validators)\n      this.addValidator(name, validators[name].fn, validators[name].priority);\n\n    window.Parsley.trigger('parsley:validator:init');\n  },\n\n  // Set new messages locale if we have dictionary loaded in ParsleyConfig.i18n\n  setLocale: function (locale) {\n    if ('undefined' === typeof this.catalog[locale])\n      throw new Error(locale + ' is not available in the catalog');\n\n    this.locale = locale;\n\n    return this;\n  },\n\n  // Add a new messages catalog for a given locale. Set locale for this catalog if set === `true`\n  addCatalog: function (locale, messages, set) {\n    if ('object' === typeof messages)\n      this.catalog[locale] = messages;\n\n    if (true === set)\n      return this.setLocale(locale);\n\n    return this;\n  },\n\n  // Add a specific message for a given constraint in a given locale\n  addMessage: function (locale, name, message) {\n    if ('undefined' === typeof this.catalog[locale])\n      this.catalog[locale] = {};\n\n    this.catalog[locale][name] = message;\n\n    return this;\n  },\n\n  // Add messages for a given locale\n  addMessages: function (locale, nameMessageObject) {\n    for (var name in nameMessageObject)\n      this.addMessage(locale, name, nameMessageObject[name]);\n\n    return this;\n  },\n\n  // Add a new validator\n  //\n  //    addValidator('custom', {\n  //        requirementType: ['integer', 'integer'],\n  //        validateString: function(value, from, to) {},\n  //        priority: 22,\n  //        messages: {\n  //          en: \"Hey, that's no good\",\n  //          fr: \"Aye aye, pas bon du tout\",\n  //        }\n  //    })\n  //\n  // Old API was addValidator(name, function, priority)\n  //\n  addValidator: function (name, arg1, arg2) {\n    if (this.validators[name])\n      Utils.warn('Validator \"' + name + '\" is already defined.');\n    else if (Defaults.hasOwnProperty(name)) {\n      Utils.warn('\"' + name + '\" is a restricted keyword and is not a valid validator name.');\n      return;\n    }\n    return this._setValidator(...arguments);\n  },\n\n  hasValidator: function (name) {\n    return !!this.validators[name];\n  },\n\n  updateValidator: function (name, arg1, arg2) {\n    if (!this.validators[name]) {\n      Utils.warn('Validator \"' + name + '\" is not already defined.');\n      return this.addValidator(...arguments);\n    }\n    return this._setValidator(...arguments);\n  },\n\n  removeValidator: function (name) {\n    if (!this.validators[name])\n      Utils.warn('Validator \"' + name + '\" is not defined.');\n\n    delete this.validators[name];\n\n    return this;\n  },\n\n  _setValidator: function (name, validator, priority) {\n    if ('object' !== typeof validator) {\n      // Old style validator, with `fn` and `priority`\n      validator = {\n        fn: validator,\n        priority: priority\n      };\n    }\n    if (!validator.validate) {\n      validator = new Validator(validator);\n    }\n    this.validators[name] = validator;\n\n    for (var locale in validator.messages || {})\n      this.addMessage(locale, name, validator.messages[locale]);\n\n    return this;\n  },\n\n  getErrorMessage: function (constraint) {\n    var message;\n\n    // Type constraints are a bit different, we have to match their requirements too to find right error message\n    if ('type' === constraint.name) {\n      var typeMessages = this.catalog[this.locale][constraint.name] || {};\n      message = typeMessages[constraint.requirements];\n    } else\n      message = this.formatMessage(this.catalog[this.locale][constraint.name], constraint.requirements);\n\n    return message || this.catalog[this.locale].defaultMessage || this.catalog.en.defaultMessage;\n  },\n\n  // Kind of light `sprintf()` implementation\n  formatMessage: function (string, parameters) {\n    if ('object' === typeof parameters) {\n      for (var i in parameters)\n        string = this.formatMessage(string, parameters[i]);\n\n      return string;\n    }\n\n    return 'string' === typeof string ? string.replace(/%s/i, parameters) : '';\n  },\n\n  // Here is the Parsley default validators list.\n  // A validator is an object with the following key values:\n  //  - priority: an integer\n  //  - requirement: 'string' (default), 'integer', 'number', 'regexp' or an Array of these\n  //  - validateString, validateMultiple, validateNumber: functions returning `true`, `false` or a promise\n  // Alternatively, a validator can be a function that returns such an object\n  //\n  validators: {\n    notblank: {\n      validateString: function(value) {\n        return /\\S/.test(value);\n      },\n      priority: 2\n    },\n    required: {\n      validateMultiple: function(values) {\n        return values.length > 0;\n      },\n      validateString: function(value) {\n        return /\\S/.test(value);\n      },\n      priority: 512\n    },\n    type: {\n      validateString: function(value, type, {step = 'any', base = 0} = {}) {\n        var tester = typeTesters[type];\n        if (!tester) {\n          throw new Error('validator type `' + type + '` is not supported');\n        }\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        if (!tester.test(value))\n          return false;\n        if ('number' === type) {\n          if (!/^any$/i.test(step || '')) {\n            var nb = Number(value);\n            var decimals = Math.max(decimalPlaces(step), decimalPlaces(base));\n            if (decimalPlaces(nb) > decimals) // Value can't have too many decimals\n              return false;\n            // Be careful of rounding errors by using integers.\n            var toInt = f => Math.round(f * Math.pow(10, decimals));\n            if ((toInt(nb) - toInt(base)) % toInt(step) != 0)\n              return false;\n          }\n        }\n        return true;\n      },\n      requirementType: {\n        '': 'string',\n        step: 'string',\n        base: 'number'\n      },\n      priority: 256\n    },\n    pattern: {\n      validateString: function(value, regexp) {\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        return regexp.test(value);\n      },\n      requirementType: 'regexp',\n      priority: 64\n    },\n    minlength: {\n      validateString: function (value, requirement) {\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        return value.length >= requirement;\n      },\n      requirementType: 'integer',\n      priority: 30\n    },\n    maxlength: {\n      validateString: function (value, requirement) {\n        return value.length <= requirement;\n      },\n      requirementType: 'integer',\n      priority: 30\n    },\n    length: {\n      validateString: function (value, min, max) {\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        return value.length >= min && value.length <= max;\n      },\n      requirementType: ['integer', 'integer'],\n      priority: 30\n    },\n    mincheck: {\n      validateMultiple: function (values, requirement) {\n        return values.length >= requirement;\n      },\n      requirementType: 'integer',\n      priority: 30\n    },\n    maxcheck: {\n      validateMultiple: function (values, requirement) {\n        return values.length <= requirement;\n      },\n      requirementType: 'integer',\n      priority: 30\n    },\n    check: {\n      validateMultiple: function (values, min, max) {\n        return values.length >= min && values.length <= max;\n      },\n      requirementType: ['integer', 'integer'],\n      priority: 30\n    },\n    min: comparisonOperator((value, requirement) => value >= requirement),\n    max: comparisonOperator((value, requirement) => value <= requirement),\n    range: comparisonOperator((value, min, max) => value >= min && value <= max),\n    equalto: {\n      validateString: function (value, refOrValue) {\n        if (!value)\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        var $reference = $(refOrValue);\n        if ($reference.length)\n          return value === $reference.val();\n        else\n          return value === refOrValue;\n      },\n      priority: 256\n    },\n    euvatin: {\n      validateString: function (value, refOrValue) {\n        if (!value) {\n          return true;  // Builtin validators all accept empty strings, except `required` of course\n        }\n\n        var re = /^[A-Z][A-Z][A-Za-z0-9 -]{2,}$/;\n        return re.test(value);\n      },\n      priority: 30,\n    },\n  }\n};\n\nexport default ValidatorRegistry;\n","import $ from 'jquery';\nimport Utils from './utils';\n\nvar UI = {};\n\nvar diffResults = function (newResult, oldResult, deep) {\n  var added = [];\n  var kept = [];\n\n  for (var i = 0; i < newResult.length; i++) {\n    var found = false;\n\n    for (var j = 0; j < oldResult.length; j++)\n      if (newResult[i].assert.name === oldResult[j].assert.name) {\n        found = true;\n        break;\n      }\n\n    if (found)\n      kept.push(newResult[i]);\n    else\n      added.push(newResult[i]);\n  }\n\n  return {\n    kept: kept,\n    added: added,\n    removed: !deep ? diffResults(oldResult, newResult, true).added : []\n  };\n};\n\nUI.Form = {\n\n  _actualizeTriggers: function () {\n    this.$element.on('submit.Parsley', evt => { this.onSubmitValidate(evt); });\n    this.$element.on('click.Parsley', Utils._SubmitSelector, evt => { this.onSubmitButton(evt); });\n\n    // UI could be disabled\n    if (false === this.options.uiEnabled)\n      return;\n\n    this.element.setAttribute('novalidate', '');\n  },\n\n  focus: function () {\n    this._focusedField = null;\n\n    if (true === this.validationResult || 'none' === this.options.focus)\n      return null;\n\n    for (var i = 0; i < this.fields.length; i++) {\n      var field = this.fields[i];\n      if (true !== field.validationResult && field.validationResult.length > 0 && 'undefined' === typeof field.options.noFocus) {\n        this._focusedField = field.$element;\n        if ('first' === this.options.focus)\n          break;\n      }\n    }\n\n    if (null === this._focusedField)\n      return null;\n\n    return this._focusedField.focus();\n  },\n\n  _destroyUI: function () {\n    // Reset all event listeners\n    this.$element.off('.Parsley');\n  }\n\n};\n\nUI.Field = {\n\n  _reflowUI: function () {\n    this._buildUI();\n\n    // If this field doesn't have an active UI don't bother doing something\n    if (!this._ui)\n      return;\n\n    // Diff between two validation results\n    var diff = diffResults(this.validationResult, this._ui.lastValidationResult);\n\n    // Then store current validation result for next reflow\n    this._ui.lastValidationResult = this.validationResult;\n\n    // Handle valid / invalid / none field class\n    this._manageStatusClass();\n\n    // Add, remove, updated errors messages\n    this._manageErrorsMessages(diff);\n\n    // Triggers impl\n    this._actualizeTriggers();\n\n    // If field is not valid for the first time, bind keyup trigger to ease UX and quickly inform user\n    if ((diff.kept.length || diff.added.length) && !this._failedOnce) {\n      this._failedOnce = true;\n      this._actualizeTriggers();\n    }\n  },\n\n  // Returns an array of field's error message(s)\n  getErrorsMessages: function () {\n    // No error message, field is valid\n    if (true === this.validationResult)\n      return [];\n\n    var messages = [];\n\n    for (var i = 0; i < this.validationResult.length; i++)\n      messages.push(this.validationResult[i].errorMessage ||\n       this._getErrorMessage(this.validationResult[i].assert));\n\n    return messages;\n  },\n\n  // It's a goal of Parsley that this method is no longer required [#1073]\n  addError: function (name, {message, assert, updateClass = true} = {}) {\n    this._buildUI();\n    this._addError(name, {message, assert});\n\n    if (updateClass)\n      this._errorClass();\n  },\n\n  // It's a goal of Parsley that this method is no longer required [#1073]\n  updateError: function (name, {message, assert, updateClass = true} = {}) {\n    this._buildUI();\n    this._updateError(name, {message, assert});\n\n    if (updateClass)\n      this._errorClass();\n  },\n\n  // It's a goal of Parsley that this method is no longer required [#1073]\n  removeError: function (name, {updateClass = true} = {}) {\n    this._buildUI();\n    this._removeError(name);\n\n    // edge case possible here: remove a standard Parsley error that is still failing in this.validationResult\n    // but highly improbable cuz' manually removing a well Parsley handled error makes no sense.\n    if (updateClass)\n      this._manageStatusClass();\n  },\n\n  _manageStatusClass: function () {\n    if (this.hasConstraints() && this.needsValidation() && true === this.validationResult)\n      this._successClass();\n    else if (this.validationResult.length > 0)\n      this._errorClass();\n    else\n      this._resetClass();\n  },\n\n  _manageErrorsMessages: function (diff) {\n    if ('undefined' !== typeof this.options.errorsMessagesDisabled)\n      return;\n\n    // Case where we have errorMessage option that configure an unique field error message, regardless failing validators\n    if ('undefined' !== typeof this.options.errorMessage) {\n      if ((diff.added.length || diff.kept.length)) {\n        this._insertErrorWrapper();\n\n        if (0 === this._ui.$errorsWrapper.find('.parsley-custom-error-message').length)\n          this._ui.$errorsWrapper\n            .append(\n              $(this.options.errorTemplate)\n              .addClass('parsley-custom-error-message')\n            );\n\n        this._ui.$errorClassHandler.attr('aria-describedby', this._ui.errorsWrapperId);\n\n        return this._ui.$errorsWrapper\n          .addClass('filled')\n          .attr('aria-hidden', 'false')\n          .find('.parsley-custom-error-message')\n          .html(this.options.errorMessage);\n      }\n\n      this._ui.$errorClassHandler.removeAttr('aria-describedby');\n\n      return this._ui.$errorsWrapper\n        .removeClass('filled')\n        .attr('aria-hidden', 'true')\n        .find('.parsley-custom-error-message')\n        .remove();\n    }\n\n    // Show, hide, update failing constraints messages\n    for (var i = 0; i < diff.removed.length; i++)\n      this._removeError(diff.removed[i].assert.name);\n\n    for (i = 0; i < diff.added.length; i++)\n      this._addError(diff.added[i].assert.name, {message: diff.added[i].errorMessage, assert: diff.added[i].assert});\n\n    for (i = 0; i < diff.kept.length; i++)\n      this._updateError(diff.kept[i].assert.name, {message: diff.kept[i].errorMessage, assert: diff.kept[i].assert});\n  },\n\n\n  _addError: function (name, {message, assert}) {\n    this._insertErrorWrapper();\n    this._ui.$errorClassHandler\n      .attr('aria-describedby', this._ui.errorsWrapperId);\n    this._ui.$errorsWrapper\n      .addClass('filled')\n      .attr('aria-hidden', 'false')\n      .append(\n        $(this.options.errorTemplate)\n        .addClass('parsley-' + name)\n        .html(message || this._getErrorMessage(assert))\n      );\n  },\n\n  _updateError: function (name, {message, assert}) {\n    this._ui.$errorsWrapper\n      .addClass('filled')\n      .find('.parsley-' + name)\n      .html(message || this._getErrorMessage(assert));\n  },\n\n  _removeError: function (name) {\n    this._ui.$errorClassHandler\n      .removeAttr('aria-describedby');\n    this._ui.$errorsWrapper\n      .removeClass('filled')\n      .attr('aria-hidden', 'true')\n      .find('.parsley-' + name)\n      .remove();\n  },\n\n  _getErrorMessage: function (constraint) {\n    var customConstraintErrorMessage = constraint.name + 'Message';\n\n    if ('undefined' !== typeof this.options[customConstraintErrorMessage])\n      return window.Parsley.formatMessage(this.options[customConstraintErrorMessage], constraint.requirements);\n\n    return window.Parsley.getErrorMessage(constraint);\n  },\n\n  _buildUI: function () {\n    // UI could be already built or disabled\n    if (this._ui || false === this.options.uiEnabled)\n      return;\n\n    var _ui = {};\n\n    // Give field its Parsley id in DOM\n    this.element.setAttribute(this.options.namespace + 'id', this.__id__);\n\n    /** Generate important UI elements and store them in this **/\n    // $errorClassHandler is the $element that woul have parsley-error and parsley-success classes\n    _ui.$errorClassHandler = this._manageClassHandler();\n\n    // $errorsWrapper is a div that would contain the various field errors, it will be appended into $errorsContainer\n    _ui.errorsWrapperId = 'parsley-id-' + (this.options.multiple ? 'multiple-' + this.options.multiple : this.__id__);\n    _ui.$errorsWrapper = $(this.options.errorsWrapper).attr('id', _ui.errorsWrapperId);\n\n    // ValidationResult UI storage to detect what have changed bwt two validations, and update DOM accordingly\n    _ui.lastValidationResult = [];\n    _ui.validationInformationVisible = false;\n\n    // Store it in this for later\n    this._ui = _ui;\n  },\n\n  // Determine which element will have `parsley-error` and `parsley-success` classes\n  _manageClassHandler: function () {\n    // Class handled could also be determined by function given in Parsley options\n    if ('string' === typeof this.options.classHandler && $(this.options.classHandler).length)\n      return $(this.options.classHandler);\n\n    // Class handled could also be determined by function given in Parsley options\n    var $handlerFunction = this.options.classHandler;\n\n    // It might also be the function name of a global function\n    if ('string' === typeof this.options.classHandler && 'function' === typeof window[this.options.classHandler])\n      $handlerFunction = window[this.options.classHandler];\n\n    if ('function' === typeof $handlerFunction) {\n      var $handler = $handlerFunction.call(this, this);\n\n      // If this function returned a valid existing DOM element, go for it\n      if ('undefined' !== typeof $handler && $handler.length)\n        return $handler;\n    } else if ('object' === typeof $handlerFunction && $handlerFunction instanceof jQuery && $handlerFunction.length) {\n      return $handlerFunction;\n    } else if ($handlerFunction) {\n      Utils.warn('The class handler `' + $handlerFunction + '` does not exist in DOM nor as a global JS function');\n    }\n\n    return this._inputHolder();\n  },\n\n  _inputHolder: function() {\n    // if simple element (input, texatrea, select...) it will perfectly host the classes and precede the error container\n    if (!this.options.multiple || this.element.nodeName === 'SELECT')\n      return this.$element;\n\n    // But if multiple element (radio, checkbox), that would be their parent\n    return this.$element.parent();\n  },\n\n  _insertErrorWrapper: function () {\n    var $errorsContainer = this.options.errorsContainer;\n\n    // Nothing to do if already inserted\n    if (0 !== this._ui.$errorsWrapper.parent().length)\n      return this._ui.$errorsWrapper.parent();\n\n    if ('string' === typeof $errorsContainer) {\n      if ($($errorsContainer).length)\n        return $($errorsContainer).append(this._ui.$errorsWrapper);\n      else if ('function' === typeof window[$errorsContainer])\n        $errorsContainer = window[$errorsContainer];\n      else\n        Utils.warn('The errors container `' + $errorsContainer + '` does not exist in DOM nor as a global JS function');\n    }\n\n    if ('function' === typeof $errorsContainer)\n      $errorsContainer = $errorsContainer.call(this, this);\n\n    if ('object' === typeof $errorsContainer && $errorsContainer.length)\n      return $errorsContainer.append(this._ui.$errorsWrapper);\n\n    return this._inputHolder().after(this._ui.$errorsWrapper);\n  },\n\n  _actualizeTriggers: function () {\n    var $toBind = this._findRelated();\n    var trigger;\n\n    // Remove Parsley events already bound on this field\n    $toBind.off('.Parsley');\n    if (this._failedOnce)\n      $toBind.on(Utils.namespaceEvents(this.options.triggerAfterFailure, 'Parsley'), () => {\n        this._validateIfNeeded();\n      });\n    else if (trigger = Utils.namespaceEvents(this.options.trigger, 'Parsley')) {\n      $toBind.on(trigger, event => {\n        this._validateIfNeeded(event);\n      });\n    }\n  },\n\n  _validateIfNeeded: function (event) {\n    // For keyup, keypress, keydown, input... events that could be a little bit obstrusive\n    // do not validate if val length < min threshold on first validation. Once field have been validated once and info\n    // about success or failure have been displayed, always validate with this trigger to reflect every yalidation change.\n    if (event && /key|input/.test(event.type))\n      if (!(this._ui && this._ui.validationInformationVisible) && this.getValue().length <= this.options.validationThreshold)\n        return;\n\n    if (this.options.debounce) {\n      window.clearTimeout(this._debounced);\n      this._debounced = window.setTimeout(() => this.validate(), this.options.debounce);\n    } else\n      this.validate();\n  },\n\n  _resetUI: function () {\n    // Reset all event listeners\n    this._failedOnce = false;\n    this._actualizeTriggers();\n\n    // Nothing to do if UI never initialized for this field\n    if ('undefined' === typeof this._ui)\n      return;\n\n    // Reset all errors' li\n    this._ui.$errorsWrapper\n      .removeClass('filled')\n      .children()\n      .remove();\n\n    // Reset validation class\n    this._resetClass();\n\n    // Reset validation flags and last validation result\n    this._ui.lastValidationResult = [];\n    this._ui.validationInformationVisible = false;\n  },\n\n  _destroyUI: function () {\n    this._resetUI();\n\n    if ('undefined' !== typeof this._ui)\n      this._ui.$errorsWrapper.remove();\n\n    delete this._ui;\n  },\n\n  _successClass: function () {\n    this._ui.validationInformationVisible = true;\n    this._ui.$errorClassHandler.removeClass(this.options.errorClass).addClass(this.options.successClass);\n  },\n  _errorClass: function () {\n    this._ui.validationInformationVisible = true;\n    this._ui.$errorClassHandler.removeClass(this.options.successClass).addClass(this.options.errorClass);\n  },\n  _resetClass: function () {\n    this._ui.$errorClassHandler.removeClass(this.options.successClass).removeClass(this.options.errorClass);\n  }\n};\n\nexport default UI;\n","import $ from 'jquery';\nimport Base from './base';\nimport Utils from './utils';\n\nvar Form = function (element, domOptions, options) {\n  this.__class__ = 'Form';\n\n  this.element = element;\n  this.$element = $(element);\n  this.domOptions = domOptions;\n  this.options = options;\n  this.parent = window.Parsley;\n\n  this.fields = [];\n  this.validationResult = null;\n};\n\nvar statusMapping = {pending: null, resolved: true, rejected: false};\n\nForm.prototype = {\n  onSubmitValidate: function (event) {\n    // This is a Parsley generated submit event, do not validate, do not prevent, simply exit and keep normal behavior\n    if (true === event.parsley)\n      return;\n\n    // If we didn't come here through a submit button, use the first one in the form\n    var submitSource = this._submitSource || this.$element.find(Utils._SubmitSelector)[0];\n    this._submitSource = null;\n    this.$element.find('.parsley-synthetic-submit-button').prop('disabled', true);\n    if (submitSource && null !== submitSource.getAttribute('formnovalidate'))\n      return;\n\n    window.Parsley._remoteCache = {};\n\n    var promise = this.whenValidate({event});\n\n    if ('resolved' === promise.state() && false !== this._trigger('submit')) {\n      // All good, let event go through. We make this distinction because browsers\n      // differ in their handling of `submit` being called from inside a submit event [#1047]\n    } else {\n      // Rejected or pending: cancel this submit\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      if ('pending' === promise.state())\n        promise.done(() => { this._submit(submitSource); });\n    }\n  },\n\n  onSubmitButton: function(event) {\n    this._submitSource = event.currentTarget;\n  },\n  // internal\n  // _submit submits the form, this time without going through the validations.\n  // Care must be taken to \"fake\" the actual submit button being clicked.\n  _submit: function (submitSource) {\n    if (false === this._trigger('submit'))\n      return;\n    // Add submit button's data\n    if (submitSource) {\n      var $synthetic = this.$element.find('.parsley-synthetic-submit-button').prop('disabled', false);\n      if (0 === $synthetic.length)\n        $synthetic = $('<input class=\"parsley-synthetic-submit-button\" type=\"hidden\">').appendTo(this.$element);\n      $synthetic.attr({\n        name: submitSource.getAttribute('name'),\n        value: submitSource.getAttribute('value')\n      });\n    }\n\n    this.$element.trigger(Object.assign($.Event('submit'), {parsley: true}));\n  },\n\n  // Performs validation on fields while triggering events.\n  // @returns `true` if all validations succeeds, `false`\n  // if a failure is immediately detected, or `null`\n  // if dependant on a promise.\n  // Consider using `whenValidate` instead.\n  validate: function (options) {\n    if (arguments.length >= 1 && !$.isPlainObject(options)) {\n      Utils.warnOnce('Calling validate on a parsley form without passing arguments as an object is deprecated.');\n      var [group, force, event] = arguments;\n      options = {group, force, event};\n    }\n    return statusMapping[ this.whenValidate(options).state() ];\n  },\n\n  whenValidate: function ({group, force, event} = {}) {\n    this.submitEvent = event;\n    if (event) {\n      this.submitEvent = Object.assign({}, event, {preventDefault: () => {\n        Utils.warnOnce(\"Using `this.submitEvent.preventDefault()` is deprecated; instead, call `this.validationResult = false`\");\n        this.validationResult = false;\n      }});\n    }\n    this.validationResult = true;\n\n    // fire validate event to eventually modify things before every validation\n    this._trigger('validate');\n\n    // Refresh form DOM options and form's fields that could have changed\n    this._refreshFields();\n\n    var promises = this._withoutReactualizingFormOptions(() => {\n      return $.map(this.fields, field => field.whenValidate({force, group}));\n    });\n\n    return Utils.all(promises)\n      .done(  () => { this._trigger('success'); })\n      .fail(  () => {\n        this.validationResult = false;\n        this.focus();\n        this._trigger('error');\n      })\n      .always(() => { this._trigger('validated'); })\n      .pipe(...this._pipeAccordingToValidationResult());\n  },\n\n  // Iterate over refreshed fields, and stop on first failure.\n  // Returns `true` if all fields are valid, `false` if a failure is detected\n  // or `null` if the result depends on an unresolved promise.\n  // Prefer using `whenValid` instead.\n  isValid: function (options) {\n    if (arguments.length >= 1 && !$.isPlainObject(options)) {\n      Utils.warnOnce('Calling isValid on a parsley form without passing arguments as an object is deprecated.');\n      var [group, force] = arguments;\n      options = {group, force};\n    }\n    return statusMapping[ this.whenValid(options).state() ];\n  },\n\n  // Iterate over refreshed fields and validate them.\n  // Returns a promise.\n  // A validation that immediately fails will interrupt the validations.\n  whenValid: function ({group, force} = {}) {\n    this._refreshFields();\n\n    var promises = this._withoutReactualizingFormOptions(() => {\n      return $.map(this.fields, field => field.whenValid({group, force}));\n    });\n    return Utils.all(promises);\n  },\n\n  refresh: function() {\n    this._refreshFields();\n    return this;\n  },\n\n  // Reset UI\n  reset: function () {\n    // Form case: emit a reset event for each field\n    for (var i = 0; i < this.fields.length; i++)\n      this.fields[i].reset();\n\n    this._trigger('reset');\n  },\n\n  // Destroy Parsley instance (+ UI)\n  destroy: function () {\n    // Field case: emit destroy event to clean UI and then destroy stored instance\n    this._destroyUI();\n\n    // Form case: destroy all its fields and then destroy stored instance\n    for (var i = 0; i < this.fields.length; i++)\n      this.fields[i].destroy();\n\n    this.$element.removeData('Parsley');\n    this._trigger('destroy');\n  },\n\n  _refreshFields: function () {\n    return this.actualizeOptions()._bindFields();\n  },\n\n  _bindFields: function () {\n    var oldFields = this.fields;\n\n    this.fields = [];\n    this.fieldsMappedById = {};\n\n    this._withoutReactualizingFormOptions(() => {\n      this.$element\n      .find(this.options.inputs)\n      .not(this.options.excluded)\n      .not(`[${this.options.namespace}excluded=true]`)\n      .each((_, element) => {\n        var fieldInstance = new window.Parsley.Factory(element, {}, this);\n\n        // Only add valid and not excluded `Field` and `FieldMultiple` children\n        if ('Field' === fieldInstance.__class__ || 'FieldMultiple' === fieldInstance.__class__) {\n          let uniqueId = fieldInstance.__class__ + '-' + fieldInstance.__id__;\n          if ('undefined' === typeof this.fieldsMappedById[uniqueId]) {\n            this.fieldsMappedById[uniqueId] = fieldInstance;\n            this.fields.push(fieldInstance);\n          }\n        }\n      });\n\n      $.each(Utils.difference(oldFields, this.fields), (_, field) => {\n        field.reset();\n      });\n    });\n    return this;\n  },\n\n  // Internal only.\n  // Looping on a form's fields to do validation or similar\n  // will trigger reactualizing options on all of them, which\n  // in turn will reactualize the form's options.\n  // To avoid calling actualizeOptions so many times on the form\n  // for nothing, _withoutReactualizingFormOptions temporarily disables\n  // the method actualizeOptions on this form while `fn` is called.\n  _withoutReactualizingFormOptions: function (fn) {\n    var oldActualizeOptions = this.actualizeOptions;\n    this.actualizeOptions = function () { return this; };\n    var result = fn();\n    this.actualizeOptions = oldActualizeOptions;\n    return result;\n  },\n\n  // Internal only.\n  // Shortcut to trigger an event\n  // Returns true iff event is not interrupted and default not prevented.\n  _trigger: function (eventName) {\n    return this.trigger('form:' + eventName);\n  }\n\n};\n\nexport default Form;\n","import Utils from './utils';\nimport Validator from './validator';\n\nconst Constraint = function(parsleyField, name, requirements, priority, isDomConstraint) {\n  const validatorSpec = window.Parsley._validatorRegistry.validators[name];\n  const validator = new Validator(validatorSpec);\n  priority = priority || parsleyField.options[name + 'Priority'] || validator.priority;\n  isDomConstraint = (true === isDomConstraint);\n\n  Object.assign(this, {\n    validator,\n    name,\n    requirements,\n    priority,\n    isDomConstraint\n  });\n  this._parseRequirements(parsleyField.options);\n};\n\nconst capitalize = function(str) {\n  const cap = str[0].toUpperCase();\n  return cap + str.slice(1);\n};\n\nConstraint.prototype = {\n  validate: function(value, instance) {\n    return this.validator.validate(value, ...this.requirementList, instance);\n  },\n\n  _parseRequirements: function(options) {\n    this.requirementList = this.validator.parseRequirements(this.requirements,\n      key => options[this.name + capitalize(key)]\n    );\n  }\n};\n\nexport default Constraint;\n","import $ from 'jquery';\nimport Constraint from './constraint';\nimport UI from './ui';\nimport Utils from './utils';\n\nvar Field = function (field, domOptions, options, parsleyFormInstance) {\n  this.__class__ = 'Field';\n\n  this.element = field;\n  this.$element = $(field);\n\n  // Set parent if we have one\n  if ('undefined' !== typeof parsleyFormInstance) {\n    this.parent = parsleyFormInstance;\n  }\n\n  this.options = options;\n  this.domOptions = domOptions;\n\n  // Initialize some properties\n  this.constraints = [];\n  this.constraintsByName = {};\n  this.validationResult = true;\n\n  // Bind constraints\n  this._bindConstraints();\n};\n\nvar statusMapping = {pending: null, resolved: true, rejected: false};\n\nField.prototype = {\n  // # Public API\n  // Validate field and trigger some events for mainly `UI`\n  // @returns `true`, an array of the validators that failed, or\n  // `null` if validation is not finished. Prefer using whenValidate\n  validate: function (options) {\n    if (arguments.length >= 1 && !$.isPlainObject(options)) {\n      Utils.warnOnce('Calling validate on a parsley field without passing arguments as an object is deprecated.');\n      options = {options};\n    }\n    var promise = this.whenValidate(options);\n    if (!promise)  // If excluded with `group` option\n      return true;\n    switch (promise.state()) {\n      case 'pending': return null;\n      case 'resolved': return true;\n      case 'rejected': return this.validationResult;\n    }\n  },\n\n  // Validate field and trigger some events for mainly `UI`\n  // @returns a promise that succeeds only when all validations do\n  // or `undefined` if field is not in the given `group`.\n  whenValidate: function ({force, group} =  {}) {\n    // do not validate a field if not the same as given validation group\n    this.refresh();\n    if (group && !this._isInGroup(group))\n      return;\n\n    this.value = this.getValue();\n\n    // Field Validate event. `this.value` could be altered for custom needs\n    this._trigger('validate');\n\n    return this.whenValid({force, value: this.value, _refreshed: true})\n      .always(() => { this._reflowUI(); })\n      .done(() =>   { this._trigger('success'); })\n      .fail(() =>   { this._trigger('error'); })\n      .always(() => { this._trigger('validated'); })\n      .pipe(...this._pipeAccordingToValidationResult());\n  },\n\n  hasConstraints: function () {\n    return 0 !== this.constraints.length;\n  },\n\n  // An empty optional field does not need validation\n  needsValidation: function (value) {\n    if ('undefined' === typeof value)\n      value = this.getValue();\n\n    // If a field is empty and not required, it is valid\n    // Except if `data-parsley-validate-if-empty` explicitely added, useful for some custom validators\n    if (!value.length && !this._isRequired() && 'undefined' === typeof this.options.validateIfEmpty)\n      return false;\n\n    return true;\n  },\n\n  _isInGroup: function (group) {\n    if (Array.isArray(this.options.group))\n      return -1 !== $.inArray(group, this.options.group);\n    return this.options.group === group;\n  },\n\n  // Just validate field. Do not trigger any event.\n  // Returns `true` iff all constraints pass, `false` if there are failures,\n  // or `null` if the result can not be determined yet (depends on a promise)\n  // See also `whenValid`.\n  isValid: function (options) {\n    if (arguments.length >= 1 && !$.isPlainObject(options)) {\n      Utils.warnOnce('Calling isValid on a parsley field without passing arguments as an object is deprecated.');\n      var [force, value] = arguments;\n      options = {force, value};\n    }\n    var promise = this.whenValid(options);\n    if (!promise) // Excluded via `group`\n      return true;\n    return statusMapping[promise.state()];\n  },\n\n  // Just validate field. Do not trigger any event.\n  // @returns a promise that succeeds only when all validations do\n  // or `undefined` if the field is not in the given `group`.\n  // The argument `force` will force validation of empty fields.\n  // If a `value` is given, it will be validated instead of the value of the input.\n  whenValid: function ({force = false, value, group, _refreshed} = {}) {\n    // Recompute options and rebind constraints to have latest changes\n    if (!_refreshed)\n      this.refresh();\n    // do not validate a field if not the same as given validation group\n    if (group && !this._isInGroup(group))\n      return;\n\n    this.validationResult = true;\n\n    // A field without constraint is valid\n    if (!this.hasConstraints())\n      return $.when();\n\n    // Value could be passed as argument, needed to add more power to 'field:validate'\n    if ('undefined' === typeof value || null === value)\n      value = this.getValue();\n\n    if (!this.needsValidation(value) && true !== force)\n      return $.when();\n\n    var groupedConstraints = this._getGroupedConstraints();\n    var promises = [];\n    $.each(groupedConstraints, (_, constraints) => {\n      // Process one group of constraints at a time, we validate the constraints\n      // and combine the promises together.\n      var promise = Utils.all(\n        $.map(constraints, constraint => this._validateConstraint(value, constraint))\n      );\n      promises.push(promise);\n      if (promise.state() === 'rejected')\n        return false; // Interrupt processing if a group has already failed\n    });\n    return Utils.all(promises);\n  },\n\n  // @returns a promise\n  _validateConstraint: function(value, constraint) {\n    var result = constraint.validate(value, this);\n    // Map false to a failed promise\n    if (false === result)\n      result = $.Deferred().reject();\n    // Make sure we return a promise and that we record failures\n    return Utils.all([result]).fail(errorMessage => {\n      if (!(this.validationResult instanceof Array))\n        this.validationResult = [];\n      this.validationResult.push({\n        assert: constraint,\n        errorMessage: 'string' === typeof errorMessage && errorMessage\n      });\n    });\n  },\n\n  // @returns Parsley field computed value that could be overrided or configured in DOM\n  getValue: function () {\n    var value;\n\n    // Value could be overriden in DOM or with explicit options\n    if ('function' === typeof this.options.value)\n      value = this.options.value(this);\n    else if ('undefined' !== typeof this.options.value)\n      value = this.options.value;\n    else\n      value = this.$element.val();\n\n    // Handle wrong DOM or configurations\n    if ('undefined' === typeof value || null === value)\n      return '';\n\n    return this._handleWhitespace(value);\n  },\n\n  // Reset UI\n  reset: function () {\n    this._resetUI();\n    return this._trigger('reset');\n  },\n\n  // Destroy Parsley instance (+ UI)\n  destroy: function () {\n    // Field case: emit destroy event to clean UI and then destroy stored instance\n    this._destroyUI();\n    this.$element.removeData('Parsley');\n    this.$element.removeData('FieldMultiple');\n    this._trigger('destroy');\n  },\n\n  // Actualize options and rebind constraints\n  refresh: function () {\n    this._refreshConstraints();\n    return this;\n  },\n\n  _refreshConstraints: function () {\n    return this.actualizeOptions()._bindConstraints();\n  },\n\n  refreshConstraints: function() {\n    Utils.warnOnce(\"Parsley's refreshConstraints is deprecated. Please use refresh\");\n    return this.refresh();\n  },\n\n  /**\n  * Add a new constraint to a field\n  *\n  * @param {String}   name\n  * @param {Mixed}    requirements      optional\n  * @param {Number}   priority          optional\n  * @param {Boolean}  isDomConstraint   optional\n  */\n  addConstraint: function (name, requirements, priority, isDomConstraint) {\n\n    if (window.Parsley._validatorRegistry.validators[name]) {\n      var constraint = new Constraint(this, name, requirements, priority, isDomConstraint);\n\n      // if constraint already exist, delete it and push new version\n      if ('undefined' !== this.constraintsByName[constraint.name])\n        this.removeConstraint(constraint.name);\n\n      this.constraints.push(constraint);\n      this.constraintsByName[constraint.name] = constraint;\n    }\n\n    return this;\n  },\n\n  // Remove a constraint\n  removeConstraint: function (name) {\n    for (var i = 0; i < this.constraints.length; i++)\n      if (name === this.constraints[i].name) {\n        this.constraints.splice(i, 1);\n        break;\n      }\n    delete this.constraintsByName[name];\n    return this;\n  },\n\n  // Update a constraint (Remove + re-add)\n  updateConstraint: function (name, parameters, priority) {\n    return this.removeConstraint(name)\n      .addConstraint(name, parameters, priority);\n  },\n\n  // # Internals\n\n  // Internal only.\n  // Bind constraints from config + options + DOM\n  _bindConstraints: function () {\n    var constraints = [];\n    var constraintsByName = {};\n\n    // clean all existing DOM constraints to only keep javascript user constraints\n    for (var i = 0; i < this.constraints.length; i++)\n      if (false === this.constraints[i].isDomConstraint) {\n        constraints.push(this.constraints[i]);\n        constraintsByName[this.constraints[i].name] = this.constraints[i];\n      }\n\n    this.constraints = constraints;\n    this.constraintsByName = constraintsByName;\n\n    // then re-add Parsley DOM-API constraints\n    for (var name in this.options)\n      this.addConstraint(name, this.options[name], undefined, true);\n\n    // finally, bind special HTML5 constraints\n    return this._bindHtml5Constraints();\n  },\n\n  // Internal only.\n  // Bind specific HTML5 constraints to be HTML5 compliant\n  _bindHtml5Constraints: function () {\n    // html5 required\n    if (null !== this.element.getAttribute('required'))\n      this.addConstraint('required', true, undefined, true);\n\n    // html5 pattern\n    if (null !== this.element.getAttribute('pattern'))\n      this.addConstraint('pattern', this.element.getAttribute('pattern'), undefined, true);\n\n    // range\n    let min = this.element.getAttribute('min');\n    let max = this.element.getAttribute('max');\n    if (null !== min && null !== max)\n      this.addConstraint('range', [min, max], undefined, true);\n\n    // HTML5 min\n    else if (null !== min)\n      this.addConstraint('min', min, undefined, true);\n\n    // HTML5 max\n    else if (null !== max)\n      this.addConstraint('max', max, undefined, true);\n\n\n    // length\n    if (null !== this.element.getAttribute('minlength') && null !== this.element.getAttribute('maxlength'))\n      this.addConstraint('length', [this.element.getAttribute('minlength'), this.element.getAttribute('maxlength')], undefined, true);\n\n    // HTML5 minlength\n    else if (null !== this.element.getAttribute('minlength'))\n      this.addConstraint('minlength', this.element.getAttribute('minlength'), undefined, true);\n\n    // HTML5 maxlength\n    else if (null !== this.element.getAttribute('maxlength'))\n      this.addConstraint('maxlength', this.element.getAttribute('maxlength'), undefined, true);\n\n\n    // html5 types\n    var type = Utils.getType(this.element);\n\n    // Small special case here for HTML5 number: integer validator if step attribute is undefined or an integer value, number otherwise\n    if ('number' === type) {\n      return this.addConstraint('type', ['number', {\n        step: this.element.getAttribute('step') || '1',\n        base: min || this.element.getAttribute('value')\n      }], undefined, true);\n    // Regular other HTML5 supported types\n    } else if (/^(email|url|range|date)$/i.test(type)) {\n      return this.addConstraint('type', type, undefined, true);\n    }\n    return this;\n  },\n\n  // Internal only.\n  // Field is required if have required constraint without `false` value\n  _isRequired: function () {\n    if ('undefined' === typeof this.constraintsByName.required)\n      return false;\n\n    return false !== this.constraintsByName.required.requirements;\n  },\n\n  // Internal only.\n  // Shortcut to trigger an event\n  _trigger: function (eventName) {\n    return this.trigger('field:' + eventName);\n  },\n\n  // Internal only\n  // Handles whitespace in a value\n  // Use `data-parsley-whitespace=\"squish\"` to auto squish input value\n  // Use `data-parsley-whitespace=\"trim\"` to auto trim input value\n  _handleWhitespace: function (value) {\n    if (true === this.options.trimValue)\n      Utils.warnOnce('data-parsley-trim-value=\"true\" is deprecated, please use data-parsley-whitespace=\"trim\"');\n\n    if ('squish' === this.options.whitespace)\n      value = value.replace(/\\s{2,}/g, ' ');\n\n    if (('trim' === this.options.whitespace) || ('squish' === this.options.whitespace) || (true === this.options.trimValue))\n      value = Utils.trimString(value);\n\n    return value;\n  },\n\n  _isDateInput: function() {\n    var c = this.constraintsByName.type;\n    return c && c.requirements === 'date';\n  },\n\n  // Internal only.\n  // Returns the constraints, grouped by descending priority.\n  // The result is thus an array of arrays of constraints.\n  _getGroupedConstraints: function () {\n    if (false === this.options.priorityEnabled)\n      return [this.constraints];\n\n    var groupedConstraints = [];\n    var index = {};\n\n    // Create array unique of priorities\n    for (var i = 0; i < this.constraints.length; i++) {\n      var p = this.constraints[i].priority;\n      if (!index[p])\n        groupedConstraints.push(index[p] = []);\n      index[p].push(this.constraints[i]);\n    }\n    // Sort them by priority DESC\n    groupedConstraints.sort(function (a, b) { return b[0].priority - a[0].priority; });\n\n    return groupedConstraints;\n  }\n\n};\n\nexport default Field;\n","import $ from 'jquery';\nimport Utils from './utils';\n\nvar Multiple = function () {\n  this.__class__ = 'FieldMultiple';\n};\n\nMultiple.prototype = {\n  // Add new `$element` sibling for multiple field\n  addElement: function ($element) {\n    this.$elements.push($element);\n\n    return this;\n  },\n\n  // See `Field._refreshConstraints()`\n  _refreshConstraints: function () {\n    var fieldConstraints;\n\n    this.constraints = [];\n\n    // Select multiple special treatment\n    if (this.element.nodeName === 'SELECT') {\n      this.actualizeOptions()._bindConstraints();\n\n      return this;\n    }\n\n    // Gather all constraints for each input in the multiple group\n    for (var i = 0; i < this.$elements.length; i++) {\n\n      // Check if element have not been dynamically removed since last binding\n      if (!$('html').has(this.$elements[i]).length) {\n        this.$elements.splice(i, 1);\n        continue;\n      }\n\n      fieldConstraints = this.$elements[i].data('FieldMultiple')._refreshConstraints().constraints;\n\n      for (var j = 0; j < fieldConstraints.length; j++)\n        this.addConstraint(fieldConstraints[j].name, fieldConstraints[j].requirements, fieldConstraints[j].priority, fieldConstraints[j].isDomConstraint);\n    }\n\n    return this;\n  },\n\n  // See `Field.getValue()`\n  getValue: function () {\n    // Value could be overriden in DOM\n    if ('function' === typeof this.options.value)\n      return this.options.value(this);\n    else if ('undefined' !== typeof this.options.value)\n      return this.options.value;\n\n    // Radio input case\n    if (this.element.nodeName === 'INPUT') {\n      var type = Utils.getType(this.element);\n      if (type === 'radio')\n        return this._findRelated().filter(':checked').val() || '';\n\n      // checkbox input case\n      if (type === 'checkbox') {\n        var values = [];\n\n        this._findRelated().filter(':checked').each(function () {\n          values.push($(this).val());\n        });\n\n        return values;\n      }\n    }\n\n    // Select multiple case\n    if (this.element.nodeName === 'SELECT' && null === this.$element.val())\n      return [];\n\n    // Default case that should never happen\n    return this.$element.val();\n  },\n\n  _init: function () {\n    this.$elements = [this.$element];\n\n    return this;\n  }\n};\n\nexport default Multiple;\n","import $ from 'jquery';\nimport Utils from './utils';\nimport Base from './base';\nimport Form from './form';\nimport Field from './field';\nimport Multiple from './multiple';\n\nvar Factory = function (element, options, parsleyFormInstance) {\n  this.element = element;\n  this.$element = $(element);\n\n  // If the element has already been bound, returns its saved Parsley instance\n  var savedparsleyFormInstance = this.$element.data('Parsley');\n  if (savedparsleyFormInstance) {\n\n    // If the saved instance has been bound without a Form parent and there is one given in this call, add it\n    if ('undefined' !== typeof parsleyFormInstance && savedparsleyFormInstance.parent === window.Parsley) {\n      savedparsleyFormInstance.parent = parsleyFormInstance;\n      savedparsleyFormInstance._resetOptions(savedparsleyFormInstance.options);\n    }\n\n    if ('object' === typeof options) {\n      Object.assign(savedparsleyFormInstance.options, options);\n    }\n\n    return savedparsleyFormInstance;\n  }\n\n  // Parsley must be instantiated with a DOM element or jQuery $element\n  if (!this.$element.length)\n    throw new Error('You must bind Parsley on an existing element.');\n\n  if ('undefined' !== typeof parsleyFormInstance && 'Form' !== parsleyFormInstance.__class__)\n    throw new Error('Parent instance must be a Form instance');\n\n  this.parent = parsleyFormInstance || window.Parsley;\n  return this.init(options);\n};\n\nFactory.prototype = {\n  init: function (options) {\n    this.__class__ = 'Parsley';\n    this.__version__ = 'VERSION';\n    this.__id__ = Utils.generateID();\n\n    // Pre-compute options\n    this._resetOptions(options);\n\n    // A Form instance is obviously a `<form>` element but also every node that is not an input and has the `data-parsley-validate` attribute\n    if (this.element.nodeName === 'FORM' || (Utils.checkAttr(this.element, this.options.namespace, 'validate') && !this.$element.is(this.options.inputs)))\n      return this.bind('parsleyForm');\n\n    // Every other element is bound as a `Field` or `FieldMultiple`\n    return this.isMultiple() ? this.handleMultiple() : this.bind('parsleyField');\n  },\n\n  isMultiple: function () {\n    var type = Utils.getType(this.element);\n    return ((type === 'radio' || type === 'checkbox') ||\n      (this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple')));\n  },\n\n  // Multiples fields are a real nightmare :(\n  // Maybe some refactoring would be appreciated here...\n  handleMultiple: function () {\n    var name;\n    var multiple;\n    var parsleyMultipleInstance;\n\n    // Handle multiple name\n    this.options.multiple = this.options.multiple ||\n      (name = this.element.getAttribute('name')) ||\n      this.element.getAttribute('id');\n\n    // Special select multiple input\n    if (this.element.nodeName === 'SELECT' && null !== this.element.getAttribute('multiple')) {\n      this.options.multiple = this.options.multiple || this.__id__;\n      return this.bind('parsleyFieldMultiple');\n\n    // Else for radio / checkboxes, we need a `name` or `data-parsley-multiple` to properly bind it\n    } else if (!this.options.multiple) {\n      Utils.warn('To be bound by Parsley, a radio, a checkbox and a multiple select input must have either a name or a multiple option.', this.$element);\n      return this;\n    }\n\n    // Remove special chars\n    this.options.multiple = this.options.multiple.replace(/(:|\\.|\\[|\\]|\\{|\\}|\\$)/g, '');\n\n    // Add proper `data-parsley-multiple` to siblings if we have a valid multiple name\n    if (name) {\n      $('input[name=\"' + name + '\"]').each((i, input) => {\n        var type = Utils.getType(input);\n        if ((type === 'radio' || type === 'checkbox'))\n          input.setAttribute(this.options.namespace + 'multiple', this.options.multiple);\n      });\n    }\n\n    // Check here if we don't already have a related multiple instance saved\n    var $previouslyRelated = this._findRelated();\n    for (var i = 0; i < $previouslyRelated.length; i++) {\n      parsleyMultipleInstance = $($previouslyRelated.get(i)).data('Parsley');\n      if ('undefined' !== typeof parsleyMultipleInstance) {\n\n        if (!this.$element.data('FieldMultiple')) {\n          parsleyMultipleInstance.addElement(this.$element);\n        }\n\n        break;\n      }\n    }\n\n    // Create a secret Field instance for every multiple field. It will be stored in `data('FieldMultiple')`\n    // And will be useful later to access classic `Field` stuff while being in a `FieldMultiple` instance\n    this.bind('parsleyField', true);\n\n    return parsleyMultipleInstance || this.bind('parsleyFieldMultiple');\n  },\n\n  // Return proper `Form`, `Field` or `FieldMultiple`\n  bind: function (type, doNotStore) {\n    var parsleyInstance;\n\n    switch (type) {\n      case 'parsleyForm':\n        parsleyInstance = $.extend(\n          new Form(this.element, this.domOptions, this.options),\n          new Base(),\n          window.ParsleyExtend\n        )._bindFields();\n        break;\n      case 'parsleyField':\n        parsleyInstance = $.extend(\n          new Field(this.element, this.domOptions, this.options, this.parent),\n          new Base(),\n          window.ParsleyExtend\n        );\n        break;\n      case 'parsleyFieldMultiple':\n        parsleyInstance = $.extend(\n          new Field(this.element, this.domOptions, this.options, this.parent),\n          new Multiple(),\n          new Base(),\n          window.ParsleyExtend\n        )._init();\n        break;\n      default:\n        throw new Error(type + 'is not a supported Parsley type');\n    }\n\n    if (this.options.multiple)\n      Utils.setAttr(this.element, this.options.namespace, 'multiple', this.options.multiple);\n\n    if ('undefined' !== typeof doNotStore) {\n      this.$element.data('FieldMultiple', parsleyInstance);\n\n      return parsleyInstance;\n    }\n\n    // Store the freshly bound instance in a DOM element for later access using jQuery `data()`\n    this.$element.data('Parsley', parsleyInstance);\n\n    // Tell the world we have a new Form or Field instance!\n    parsleyInstance._actualizeTriggers();\n    parsleyInstance._trigger('init');\n\n    return parsleyInstance;\n  }\n};\n\nexport default Factory;\n","import $ from 'jquery';\nimport Utils from './utils';\nimport Defaults from './defaults';\nimport Base from './base';\nimport ValidatorRegistry from './validator_registry';\nimport UI from './ui';\nimport Form from './form';\nimport Field from './field';\nimport Multiple from './multiple';\nimport Factory from './factory';\n\nvar vernums = $.fn.jquery.split('.');\nif (parseInt(vernums[0]) <= 1 && parseInt(vernums[1]) < 8) {\n  throw \"The loaded version of jQuery is too old. Please upgrade to 1.8.x or better.\";\n}\nif (!vernums.forEach) {\n  Utils.warn('Parsley requires ES5 to run properly. Please include https://github.com/es-shims/es5-shim');\n}\n// Inherit `on`, `off` & `trigger` to Parsley:\nvar Parsley = Object.assign(new Base(), {\n    element: document,\n    $element: $(document),\n    actualizeOptions: null,\n    _resetOptions: null,\n    Factory: Factory,\n    version: 'VERSION'\n  });\n\n// Supplement Field and Form with Base\n// This way, the constructors will have access to those methods\nObject.assign(Field.prototype, UI.Field, Base.prototype);\nObject.assign(Form.prototype, UI.Form, Base.prototype);\n// Inherit actualizeOptions and _resetOptions:\nObject.assign(Factory.prototype, Base.prototype);\n\n// ### jQuery API\n// `$('.elem').parsley(options)` or `$('.elem').psly(options)`\n$.fn.parsley = $.fn.psly = function (options) {\n  if (this.length > 1) {\n    var instances = [];\n\n    this.each(function () {\n      instances.push($(this).parsley(options));\n    });\n\n    return instances;\n  }\n\n  // Return undefined if applied to non existing DOM element\n  if (this.length == 0) {\n    return;\n  }\n\n  return new Factory(this[0], options);\n};\n\n// ### Field and Form extension\n// Ensure the extension is now defined if it wasn't previously\nif ('undefined' === typeof window.ParsleyExtend)\n  window.ParsleyExtend = {};\n\n// ### Parsley config\n// Inherit from ParsleyDefault, and copy over any existing values\nParsley.options = Object.assign(Utils.objectCreate(Defaults), window.ParsleyConfig);\nwindow.ParsleyConfig = Parsley.options; // Old way of accessing global options\n\n// ### Globals\nwindow.Parsley = window.psly = Parsley;\nParsley.Utils = Utils;\nwindow.ParsleyUtils = {};\n$.each(Utils, (key, value) => {\n  if ('function' === typeof value) {\n    window.ParsleyUtils[key] = (...args) => {\n      Utils.warnOnce('Accessing `window.ParsleyUtils` is deprecated. Use `window.Parsley.Utils` instead.');\n      return Utils[key](...args);\n    };\n  }\n});\n\n// ### Define methods that forward to the registry, and deprecate all access except through window.Parsley\nvar registry = window.Parsley._validatorRegistry = new ValidatorRegistry(window.ParsleyConfig.validators, window.ParsleyConfig.i18n);\nwindow.ParsleyValidator = {};\n$.each('setLocale addCatalog addMessage addMessages getErrorMessage formatMessage addValidator updateValidator removeValidator hasValidator'.split(' '), function (i, method) {\n  window.Parsley[method] = (...args) => registry[method](...args);\n  window.ParsleyValidator[method] = function () {\n    Utils.warnOnce(`Accessing the method '${method}' through Validator is deprecated. Simply call 'window.Parsley.${method}(...)'`);\n    return window.Parsley[method](...arguments);\n  };\n});\n\n// ### UI\n// Deprecated global object\nwindow.Parsley.UI = UI;\nwindow.ParsleyUI = {\n  removeError: function (instance, name, doNotUpdateClass) {\n    var updateClass = true !== doNotUpdateClass;\n    Utils.warnOnce(`Accessing UI is deprecated. Call 'removeError' on the instance directly. Please comment in issue 1073 as to your need to call this method.`);\n    return instance.removeError(name, {updateClass});\n  },\n  getErrorsMessages: function (instance) {\n    Utils.warnOnce(`Accessing UI is deprecated. Call 'getErrorsMessages' on the instance directly.`);\n    return instance.getErrorsMessages();\n  }\n};\n$.each('addError updateError'.split(' '), function (i, method) {\n  window.ParsleyUI[method] = function (instance, name, message, assert, doNotUpdateClass) {\n    var updateClass = true !== doNotUpdateClass;\n    Utils.warnOnce(`Accessing UI is deprecated. Call '${method}' on the instance directly. Please comment in issue 1073 as to your need to call this method.`);\n    return instance[method](name, {message, assert, updateClass});\n  };\n});\n\n// ### PARSLEY auto-binding\n// Prevent it by setting `ParsleyConfig.autoBind` to `false`\nif (false !== window.ParsleyConfig.autoBind) {\n  $(function () {\n    // Works only on `data-parsley-validate`.\n    if ($('[data-parsley-validate]').length)\n      $('[data-parsley-validate]').parsley();\n  });\n}\n\nexport default Parsley;\n","import $ from 'jquery';\nimport Field from './field';\nimport Form from './form';\nimport Utils from './utils';\n\nvar o = $({});\nvar deprecated = function () {\n  Utils.warnOnce(\"Parsley's pubsub module is deprecated; use the 'on' and 'off' methods on parsley instances or window.Parsley\");\n};\n\n// Returns an event handler that calls `fn` with the arguments it expects\nfunction adapt(fn, context) {\n  // Store to allow unbinding\n  if (!fn.parsleyAdaptedCallback) {\n    fn.parsleyAdaptedCallback = function () {\n      var args = Array.prototype.slice.call(arguments, 0);\n      args.unshift(this);\n      fn.apply(context || o, args);\n    };\n  }\n  return fn.parsleyAdaptedCallback;\n}\n\nvar eventPrefix = 'parsley:';\n// Converts 'parsley:form:validate' into 'form:validate'\nfunction eventName(name) {\n  if (name.lastIndexOf(eventPrefix, 0) === 0)\n    return name.substr(eventPrefix.length);\n  return name;\n}\n\n// $.listen is deprecated. Use Parsley.on instead.\n$.listen = function (name, callback) {\n  var context;\n  deprecated();\n  if ('object' === typeof arguments[1] && 'function' === typeof arguments[2]) {\n    context = arguments[1];\n    callback = arguments[2];\n  }\n\n  if ('function' !== typeof callback)\n    throw new Error('Wrong parameters');\n\n  window.Parsley.on(eventName(name), adapt(callback, context));\n};\n\n$.listenTo = function (instance, name, fn) {\n  deprecated();\n  if (!(instance instanceof Field) && !(instance instanceof Form))\n    throw new Error('Must give Parsley instance');\n\n  if ('string' !== typeof name || 'function' !== typeof fn)\n    throw new Error('Wrong parameters');\n\n  instance.on(eventName(name), adapt(fn));\n};\n\n$.unsubscribe = function (name, fn) {\n  deprecated();\n  if ('string' !== typeof name || 'function' !== typeof fn)\n    throw new Error('Wrong arguments');\n  window.Parsley.off(eventName(name), fn.parsleyAdaptedCallback);\n};\n\n$.unsubscribeTo = function (instance, name) {\n  deprecated();\n  if (!(instance instanceof Field) && !(instance instanceof Form))\n    throw new Error('Must give Parsley instance');\n  instance.off(eventName(name));\n};\n\n$.unsubscribeAll = function (name) {\n  deprecated();\n  window.Parsley.off(eventName(name));\n  $('form,input,textarea,select').each(function () {\n    var instance = $(this).data('Parsley');\n    if (instance) {\n      instance.off(eventName(name));\n    }\n  });\n};\n\n// $.emit is deprecated. Use jQuery events instead.\n$.emit = function (name, instance) {\n  deprecated();\n  var instanceGiven = (instance instanceof Field) || (instance instanceof Form);\n  var args = Array.prototype.slice.call(arguments, instanceGiven ? 2 : 1);\n  args.unshift(eventName(name));\n  if (!instanceGiven) {\n    instance = window.Parsley;\n  }\n  instance.trigger(...args);\n};\n\nexport default {};\n","import $ from 'jquery';\nimport Utils from './utils';\nimport Base from './base';\n\nimport Parsley from './main';\n\n$.extend(true, Parsley, {\n  asyncValidators: {\n    'default': {\n      fn: function (xhr) {\n        // By default, only status 2xx are deemed successful.\n        // Note: we use status instead of state() because responses with status 200\n        // but invalid messages (e.g. an empty body for content type set to JSON) will\n        // result in state() === 'rejected'.\n        return xhr.status >= 200 && xhr.status < 300;\n      },\n      url: false\n    },\n    reverse: {\n      fn: function (xhr) {\n        // If reverse option is set, a failing ajax request is considered successful\n        return xhr.status < 200 || xhr.status >= 300;\n      },\n      url: false\n    }\n  },\n\n  addAsyncValidator: function (name, fn, url, options) {\n    Parsley.asyncValidators[name] = {\n      fn: fn,\n      url: url || false,\n      options: options || {}\n    };\n\n    return this;\n  }\n\n});\n\nParsley.addValidator('remote', {\n  requirementType: {\n    '': 'string',\n    'validator': 'string',\n    'reverse': 'boolean',\n    'options': 'object'\n  },\n\n  validateString: function (value, url, options, instance) {\n    var data = {};\n    var ajaxOptions;\n    var csr;\n    var validator = options.validator || (true === options.reverse ? 'reverse' : 'default');\n\n    if ('undefined' === typeof Parsley.asyncValidators[validator])\n      throw new Error('Calling an undefined async validator: `' + validator + '`');\n\n    url = Parsley.asyncValidators[validator].url || url;\n\n    // Fill current value\n    if (url.indexOf('{value}') > -1) {\n      url = url.replace('{value}', encodeURIComponent(value));\n    } else {\n      data[instance.element.getAttribute('name') || instance.element.getAttribute('id')] = value;\n    }\n\n    // Merge options passed in from the function with the ones in the attribute\n    var remoteOptions = $.extend(true, options.options || {} , Parsley.asyncValidators[validator].options);\n\n    // All `$.ajax(options)` could be overridden or extended directly from DOM in `data-parsley-remote-options`\n    ajaxOptions = $.extend(true, {}, {\n      url: url,\n      data: data,\n      type: 'GET'\n    }, remoteOptions);\n\n    // Generate store key based on ajax options\n    instance.trigger('field:ajaxoptions', instance, ajaxOptions);\n\n    csr = $.param(ajaxOptions);\n\n    // Initialise querry cache\n    if ('undefined' === typeof Parsley._remoteCache)\n      Parsley._remoteCache = {};\n\n    // Try to retrieve stored xhr\n    var xhr = Parsley._remoteCache[csr] = Parsley._remoteCache[csr] || $.ajax(ajaxOptions);\n\n    var handleXhr = function () {\n      var result = Parsley.asyncValidators[validator].fn.call(instance, xhr, url, options);\n      if (!result) // Map falsy results to rejected promise\n        result = $.Deferred().reject();\n      return $.when(result);\n    };\n\n    return xhr.then(handleXhr, handleXhr);\n  },\n\n  priority: -1\n});\n\nParsley.on('form:submit', function () {\n  Parsley._remoteCache = {};\n});\n\nBase.prototype.addAsyncValidator = function () {\n  Utils.warnOnce('Accessing the method `addAsyncValidator` through an instance is deprecated. Simply call `Parsley.addAsyncValidator(...)`');\n  return Parsley.addAsyncValidator(...arguments);\n};\n","// This is included with the Parsley library itself,\n// thus there is no use in adding it to your project.\nimport Parsley from '../parsley/main';\n\nParsley.addMessages('en', {\n  defaultMessage: \"This value seems to be invalid.\",\n  type: {\n    email:        \"This value should be a valid email.\",\n    url:          \"This value should be a valid url.\",\n    number:       \"This value should be a valid number.\",\n    integer:      \"This value should be a valid integer.\",\n    digits:       \"This value should be digits.\",\n    alphanum:     \"This value should be alphanumeric.\"\n  },\n  notblank:       \"This value should not be blank.\",\n  required:       \"This value is required.\",\n  pattern:        \"This value seems to be invalid.\",\n  min:            \"This value should be greater than or equal to %s.\",\n  max:            \"This value should be lower than or equal to %s.\",\n  range:          \"This value should be between %s and %s.\",\n  minlength:      \"This value is too short. It should have %s characters or more.\",\n  maxlength:      \"This value is too long. It should have %s characters or fewer.\",\n  length:         \"This value length is invalid. It should be between %s and %s characters long.\",\n  mincheck:       \"You must select at least %s choices.\",\n  maxcheck:       \"You must select %s choices or fewer.\",\n  check:          \"You must select between %s and %s choices.\",\n  equalto:        \"This value should be the same.\",\n  euvatin:        \"It's not a valid VAT Identification Number.\",\n});\n\nParsley.setLocale('en');\n","/**\n * inputevent - Alleviate browser bugs for input events\n * https://github.com/marcandre/inputevent\n * @version v0.0.3 - (built Thu, Apr 14th 2016, 5:58 pm)\n * @author Marc-Andre Lafortune <github@marc-andre.ca>\n * @license MIT\n */\n\nimport $ from 'jquery';\n\nfunction InputEvent() {\n  let globals = window || global;\n\n  // Slightly odd way construct our object. This way methods are force bound.\n  // Used to test for duplicate library.\n  Object.assign(this, {\n\n    // For browsers that do not support isTrusted, assumes event is native.\n    isNativeEvent: evt => {\n      return evt.originalEvent && evt.originalEvent.isTrusted !== false;\n    },\n\n    fakeInputEvent: evt => {\n      if (this.isNativeEvent(evt)) {\n        $(evt.target).trigger('input');\n      }\n    },\n\n    misbehaves: evt => {\n      if (this.isNativeEvent(evt)) {\n        this.behavesOk(evt);\n        $(document)\n          .on('change.inputevent', evt.data.selector, this.fakeInputEvent);\n        this.fakeInputEvent(evt);\n      }\n    },\n\n    behavesOk: evt => {\n      if (this.isNativeEvent(evt)) {\n        $(document) // Simply unbinds the testing handler\n          .off('input.inputevent', evt.data.selector, this.behavesOk)\n          .off('change.inputevent', evt.data.selector, this.misbehaves);\n      }\n    },\n\n    // Bind the testing handlers\n    install: () => {\n      if (globals.inputEventPatched) {\n        return;\n      }\n      globals.inputEventPatched = '0.0.3';\n      for (let selector of ['select', 'input[type=\"checkbox\"]', 'input[type=\"radio\"]', 'input[type=\"file\"]']) {\n        $(document)\n          .on('input.inputevent', selector, {selector}, this.behavesOk)\n          .on('change.inputevent', selector, {selector}, this.misbehaves);\n      }\n    },\n\n    uninstall: () => {\n      delete globals.inputEventPatched;\n      $(document).off('.inputevent');\n    }\n\n  });\n};\n\nexport default new InputEvent();\n","import $ from 'jquery';\nimport Parsley from './parsley/main';\nimport './parsley/pubsub';\nimport './parsley/remote';\nimport './i18n/en';\nimport inputevent from './vendor/inputevent';\n\ninputevent.install();\n\nexport default Parsley;\n","import {gsap} from 'gsap';\nimport imageReplace from \"../views/imageReplace.js\";\nexport default class ImageLoader {\n    constructor(){\n\n    }\n\n    load(html, callback){\n        let $images = $(html).find('img:not([data-lazy])');\n        let counter = $images.length;\n\n        if(counter == 0)\n        {\n            callback();\n        }\n        else\n        {\n            let loaded = 0;\n            $images.each(function (index) {\n                let src = (\"currentSrc\" in this) ? this.currentSrc : this.src;\n\n                let $img = $('<img />');\n\n                let onComplete = function(){\n                    loaded++;\n                    if(loaded >= counter)\n                    {\n                        callback();\n                    }\n                };\n\n                $img.attr('src', src).on('load', onComplete).on('error', onComplete);\n            });\n        }\n    }\n\n    lazy(el){\n        return new Promise(function(resolve){\n            $(el).find('[data-lazy-src]:not(.loaded)').each(function(){\n                let $this = $(this);\n                \n                if($this.parent('video').length > 0)\n                {\n                    $this.attr('src', $this.data('lazy-src')).addClass('loaded');\n                    $this.parent('video')[0].load();\n                    \n                    $this.parent('video')[0].addEventListener('canplay', () => {\n                          $this.parents().find('[data-lazy-placeholder]').addClass('loaded')\n                          $this.parent('video').addClass('loaded')\n                          window.appEvent.trigger('resize');\n\n                    }, false);\n\n                }else{\n                    gsap.set($this,{opacity: 0})\n                    if ($this.parent('.js-replace-image').length){\n                        gsap.set($this.parent('.js-replace-image'),{opacity: 0})\n                    }\n                    if ($this.attr('loading') == 'lazy'){\n                        $this.attr('loading',\"eager\")\n                    }\n                    $this.attr('src', $this.data('lazy-src')).addClass('loaded');\n                    $this[0].onload = function () {\n                        console.log($(this).attr('src') + ' loaded');\n                        gsap.to($this,.3,{\n                            opacity: 1,\n                            onComplete: function(){\n\n                            }\n                        })\n                        if ($this.parent('.js-replace-image').length){\n                            imageReplace($this.parent('.js-replace-image').parent());\n                            gsap.to($this.parent('.js-replace-image'),.3,{\n                                opacity: 1,\n                                onComplete:function(){\n\n                                }\n                            })\n                        }\n\n                        resolve(true);\n                    };\n\n                }\n\n            })\n\n        })\n\n\n    }\n}\n","export default function imageReplace($container){\n    let timeout = false;\n    $container = $container || $('body');\n    $container.find('.js-replace-image:not(.jsImageReplaced)').each(function(index){\n        let image = $(this).find('img')[0];\n        if (image != undefined){\n            let $this = $(this);\n            let src = \"currentSrc\" in image ? image.currentSrc : image.src;\n            if(src == undefined || src == '' || src == null)\n            {\n                if(timeout) window.clearTimeout(timeout);\n                timeout = window.setTimeout(function () {\n                    imageReplace($('[data-barba=\"container\"]:last-of-type'));\n                }, 100);\n            }\n            else\n            {\n                \n                $this.css('background-image', 'url(' + src + ')');\n                $this.addClass('jsImageReplaced');\n            }\n        }\n    });\n}\n","import { gsap } from 'gsap';\n\nexport default function LandingLoader(timing) {\n  let target = $('*[data-barba-introductionscreen]');\n\n  if (target) {\n    //gsap.set(target, {autoAlpha: 1});\n\n  }\n  this.init = function () {\n    if (window.dev) {\n      $(target).remove();\n      return;\n    }\n\n\n    if (target) {\n      let fade = gsap.timeline({\n        onStart: () => {\n          window.scrollAnimation.update()\n        },\n        onComplete: () => {\n          $(target).remove();\n          $('body').addClass('loaded')\n        },\n        onUpdate: function () {\n          //borderTimeline.progress(this.progress())\n        },\n        //repeat: -1,\n      });\n      fade.to('#circle-background', {\n        duration: 1.4,\n        strokeDashoffset: 0,\n        ease: 'none',\n      }, 'drawing')\n\n      fade.to('#logo-baseline *', {\n        duration: .25,\n        filter: 'blur(0)',\n        autoAlpha: 1,\n        ease: 'power2.inOut',\n        stagger: .1\n      }, 'drawing')\n\n      fade.to('#logo-letter-a,#logo-letter-n', {\n        duration: 1,\n        strokeDashoffset: 0,\n        stagger: .4,\n        ease: 'power1.inOut',\n      }, 'drawing')\n\n      /*fade.to('#circle-background', {\n        fill: '#ffffff',\n        ease: 'power1.inOut',\n        duration: .45\n      }, 'showColor')*/\n     \n\n      fade.to('#introduction-screen', {\n        backgroundColor: '#FFFFFF',\n        ease: 'power1.inOut',\n        duration: .45,\n        delay: .2,\n      }, 'invert')\n  \n      fade.to('#circle-background', {\n        fill: '#000000',\n        ease: ' power1.inOut',\n        duration: .45,\n        delay: .2,\n\n      }, 'invert')\n      fade.to('#logo-baseline *', {\n        fill: '#000000',\n        ease: 'power1.inOut',\n        duration: .45,\n        delay: .2,\n\n      }, 'invert')\n\n      fade.to('#logo-letter-a,#logo-letter-n', {\n        stroke: '#FFFFFF',\n        ease: 'power1.inOut',\n        duration: .6,\n        delay: .2,\n\n\n      }, 'invert')\n\n      fade.to('#introduction-screen', {\n        autoAlpha: 0,\n        duration: .8,\n        ease: \"power2.inOut\",\n        onStart: () => {\n          appEvent.trigger('app:threejsAnimation:start');\n\n\n\n\n\n        }\n      }, 'hideLoader')\n\n\n\n\n\n\n\n    }\n    else {\n      return false;\n    }\n  }\n  this.simpleInit = function () {\n    gsap.to('#introduction-screen', {\n      autoAlpha: 0,\n      duration: .6,\n      ease: \"power2.out\",\n      onStart: () => {\n\n        appEvent.trigger('app:threejsAnimation:start');\n        $('#scene').css('z-index', 2)\n\n      },\n      onComplete: () => {\n        $('#introduction-screen').remove()\n\n      }\n    }, 'hideLoader')\n  }\n\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","parcelRequire","parcelRegister","register","module","exports","$6PCW7","$bByEL","$ecPF5","$eAjAl","$lBUWF","$gKRTl","$7Wrxr","$eUKxC","$fZPIc","barbaInstance","barbaRouter","appRouter","appEvent","formComponent","formMessage","imageLoader","imageReplace","replace","target","landingLoader","Barba","constructor","transitions","instance","use","routes","addCustomIntro","introduction","setDefaultTransition","transitionObject","defaultTransition","barbaDefaultTransition","push","addTransition","init","$","initGlobal","history1","pushState","state","onpushstate","apply","arguments","history","onpopstate","trigger","hooks","beforeLeave","data","localStorage","setItem","pageYOffset","globalScroll","y","beforeEnter","inlineScripts","next","container","querySelectorAll","forEach","script","eval","innerHTML","initView","document","body","id","namespace","console","log","scrollRestoration","enter","after","scrollTo","getItem","parseInt","views","debug","cacheIgnore","prefetchIgnore","prevent","el","href","location","event","preventDefault","timeout","t","i","name","version","routeNames","routesByName","prototype","install","o","logger","Logger","info","barba","path","r","helpers","pathToRegexp","indexOf","warn","keys","regex","schemaPage","route","store","add","position","value","type","page","resolveRoutes","reset","resolveUrl","url","parse","params","u","f","exec","length","current","writable","key","assign","hasOwnProperty","call","create","__proto__","setPrototypeOf","getPrototypeOf","Reflect","construct","sham","Proxy","Date","toString","Function","bind","Map","TypeError","has","then","Symbol","iterator","asyncIterator","c","h","off","error","warning","l","getLevel","setLevel","Array","concat","d","O","m","E","p","g","w","x","b","T","P","RegExp","delimiter","whitelist","index","slice","prefix","optional","repeat","pattern","A","k","substr","decode","decodeURIComponent","split","map","R","encode","encodeURIComponent","validate","isArray","test","String","sensitive","strict","start","end","endsWith","join","source","match","regexpToFunction","compile","tokensToFunction","tokensToRegExp","S","wrapper","j","DOMParser","outerHTML","toDocument","parseFromString","toElement","createElement","getHtml","documentElement","getWrapper","querySelector","getContainer","removeContainer","contains","parentNode","removeChild","addContainer","appendChild","getNamespace","getAttribute","getHref","tagName","toLowerCase","baseVal","Error","getElementsByTagName","insertBefore","firstChild","nextSibling","M","ns","scroll","scrollX","scrollY","from","states","replaceState","change","size","update","remove","splice","pop","clear","hasAttribute","Math","abs","L","html","Promise","resolve","title","reject","_","nextTick","requestAnimationFrame","q","origin","B","U","port","substring","D","hash","query","reduce","F","H","getOrigin","getPort","getPath","parseQuery","clean","I","XMLHttpRequest","onreadystatechange","readyState","DONE","status","responseText","statusText","ontimeout","onerror","open","setRequestHeader","send","C","N","async","X","all","registered","Set","ctx","fn","do","catch","help","z","checkHref","some","G","action","request","getRequest","getAction","delete","Q","W","J","which","metaKey","ctrlKey","shiftKey","altKey","K","V","protocol","hostname","Y","Z","tt","nt","Boolean","closest","rt","et","suite","tests","run","checkLink","it","label","captureStackTrace","ReferenceError","ot","once","filter","find","reverse","to","sort","priority","leave","pow","ut","doOnce","transition","doPage","sync","message","ft","names","byNamespace","Element","matches","msMatchesSelector","webkitMatchesSelector","parentElement","nodeType","st","plugins","dom","schema","requestError","preventRunning","logLevel","setAttribute","cache","destroy","force","go","isRunning","hasSelf","stopPropagation","hasOnce","onRequestError","shouldWait","prefetch","addEventListener","removeEventListener","$hEfjX","$h037C","loadingScreen","before","done","menuNav","hide","res","show","afterLeave","load","gsap","autoAlpha","$c604dbad1c0ff087$export$2e2bcd8739ae039","timingIn","timingOut","tl","timeline","paused","onComplete","addClass","fromTo","duration","ease","play","onStart","removeClass","$a57a42a3068beeb7$export$2e2bcd8739ae039","$esUsT","router","ajaxifyRoutes","ajaxify","elements","charAt","toUpperCase","data1","controller","$a87f7af85305f497$export$2e2bcd8739ae039","err","$a9e39eb1d3c3087e$export$2e2bcd8739ae039","$4ldTB","handlers","resizeHandlers","_init","handler","handlerStr","listen","command","newGlobal","on","resize","events","args","_resizeHandler","cachedWidth","innerWidth","cachedHeight","innerHeight","newWidth","newHeight","_isFunction","functionToCheck","$fbb939cd074bff93$export$2e2bcd8739ae039","recaptchaRenders","timout","loaded","recaptchaIsRenders","_ajaxForm","_ajaxFormMessage","_goForm","parsley","errorsContainer","pEle","$element","is","each","element","$this","$form","parents","attr","_createUID","_redendRecaptcha","_render","$el","grecaptcha","render","recaptchaKey","_formSubmit","one","_initCaptcha","head","src","captchaScript","getElementById","onload","ready","currentTarget","serialize","execute","method","formData","FormData","lang","ajax","success","response","xhr","contentType","processData","dt","getTime","random","floor","$c32abf00c99d0a45$export$2e2bcd8739ae039","val","prop","slideDown","setTimeout","slideUp","global1","factory","_typeof","obj","_extends","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","arr2","iter","_arr","_n","_d","_e","undefined","_s","_i","globalID","pastWarnings","Utils","attribute","attributes","specified","camelize","deserializeValue","checkAttr","_checkAttr","setAttr","dasherize","getType","generateID","num","isNaN","Number","JSON","str","chr","_window$console","warnOnce","msg","_resetWarnings","trimString","string","date","parsed","_parsed$map2","year","month","day","getFullYear","getMonth","getDate","_string","integer","number","parseFloat","object","regexp","_regexp","flags","parseRequirement","requirementType","converter","converted","namespaceEvents","evt","difference","array","result","elem","promises","when","objectCreate","Object1","_SubmitSelector","Defaults","inputs","excluded","priorityEnabled","multiple","group","uiEnabled","validationThreshold","focus","triggerAfterFailure","errorClass","successClass","classHandler","Field","errorsWrapper","errorTemplate","Base","__id__","asyncSupport","_pipeAccordingToValidationResult","_this","pipe","Deferred","validationResult","promise","actualizeOptions","options","domOptions","parent","_resetOptions","initOptions","_listeners","queue","subscribe","listenTo","unsubscribe","unsubscribeTo","extraArg","asyncIsValid","whenValid","_findRelated","convertArrayRequirement","values","convertExtraOptionRequirement","requirementSpec","extraOptionReader","main","extra","Validator","spec","extend","requirementFirstArg","validateMultiple","validateDate","_isDateInput","validateNumber","validateString","parseRequirements","requirements","isPlainObject","ValidatorRegistry","validators","catalog","__class__","locale","typeTesters","email","digits","alphanum","range","decimalPlaces","max","parseArguments","operatorToValidator","operator","_len","requirementsAndInput","_key","comparisonOperator","addValidator","Parsley","setLocale","addCatalog","messages","addMessage","addMessages","nameMessageObject","arg1","arg2","_setValidator","hasValidator","updateValidator","removeValidator","validator","getErrorMessage","constraint","typeMessages","formatMessage","defaultMessage","en","parameters","notblank","required","_ref","_ref$step","step","_ref$base","base","tester","nb","decimals","toInt","round","minlength","requirement","maxlength","min","mincheck","maxcheck","check","equalto","refOrValue","$reference","euvatin","re","UI","diffResults","newResult","oldResult","deep","added","kept","found","assert","removed","Form","_actualizeTriggers","onSubmitValidate","onSubmitButton","_focusedField","fields","field","noFocus","_destroyUI","_reflowUI","_buildUI","_ui","diff","lastValidationResult","_manageStatusClass","_manageErrorsMessages","_failedOnce","getErrorsMessages","errorMessage","_getErrorMessage","addError","_ref$updateClass","updateClass","_addError","_errorClass","updateError","_ref2","_ref2$updateClass","_updateError","removeError","_ref3","_ref3$updateClass","_removeError","hasConstraints","needsValidation","_successClass","_resetClass","errorsMessagesDisabled","_insertErrorWrapper","$errorsWrapper","append","$errorClassHandler","errorsWrapperId","removeAttr","_ref4","_ref5","customConstraintErrorMessage","_manageClassHandler","validationInformationVisible","$handlerFunction","$handler","jQuery","_inputHolder","nodeName","$errorsContainer","_this2","$toBind","_validateIfNeeded","_this3","getValue","debounce","clearTimeout","_debounced","_resetUI","children","statusMapping","pending","resolved","rejected","submitSource","_submitSource","_remoteCache","whenValidate","_trigger","stopImmediatePropagation","_submit","$synthetic","appendTo","Event","_arguments","_Utils$all$done$fail$","submitEvent","_refreshFields","_withoutReactualizingFormOptions","fail","always","isValid","_arguments2","refresh","removeData","_bindFields","_this4","oldFields","fieldsMappedById","not","fieldInstance","Factory","uniqueId","oldActualizeOptions","eventName","Constraint","parsleyField","isDomConstraint","_validatorRegistry","_parseRequirements","capitalize","cap","_this$validator","requirementList","parsleyFormInstance","constraints","constraintsByName","_bindConstraints","statusMapping$1","_this$whenValid$alway","_isInGroup","_refreshed","_isRequired","validateIfEmpty","inArray","_ref2$force","groupedConstraints","_getGroupedConstraints","_validateConstraint","_handleWhitespace","_refreshConstraints","refreshConstraints","addConstraint","removeConstraint","updateConstraint","_bindHtml5Constraints","trimValue","whitespace","Multiple","addElement","$elements","fieldConstraints","savedparsleyFormInstance","__version__","isMultiple","handleMultiple","parsleyMultipleInstance","input","$previouslyRelated","doNotStore","parsleyInstance","ParsleyExtend","vernums","jquery","psly","instances","ParsleyConfig","ParsleyUtils","registry","i18n","ParsleyValidator","_window$Parsley","ParsleyUI","doNotUpdateClass","autoBind","deprecated","adapt","context","parsleyAdaptedCallback","unshift","eventPrefix","lastIndexOf","callback","unsubscribeAll","emit","_instance","instanceGiven","asyncValidators","addAsyncValidator","ajaxOptions","csr","remoteOptions","param","handleXhr","inputevent","globals","isNativeEvent","originalEvent","isTrusted","fakeInputEvent","misbehaves","behavesOk","selector","inputEventPatched","uninstall","$5c834fb69dc46bb2$export$2e2bcd8739ae039","$images","counter","currentSrc","$img","lazy","opacity","$ba54aa668a07f85a$export$2e2bcd8739ae039","$container","image","css","$adba65cb43c7c5ba$export$2e2bcd8739ae039","timing","dev","fade","scrollAnimation","onUpdate","strokeDashoffset","stagger","backgroundColor","delay","fill","stroke","simpleInit","this","output","_catch","recover","LogLevels","HookMethods","_level","_source","objects","_log","level","DEFAULT_DELIMITER","PATH_REGEXP","tokens","defaultDelimiter","pathEscaped","escaped","offset","prev","capture","modifier","escapeGroup","escapeString","pathname","token","segment","endToken","isEndDelimited","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","schemaAttribute","htmlString","_parser","div","doc","scope","_attr","existingContainer","_insertAfter","urls","numUrls","newNode","referenceNode","_session","_states","_pointer","item","_getDirection","_getAction","newStates","nextDocument","ptr","portString","hashIndex","queryIndex","acc","ttl","runAsync","func","answer","isPromise","hook","chain","Ignore","ignore","_ignoreAll","paths","_ignoreRegexes","Cache","_state","exists","newTab","blank","corsDomain","corsPort","download","preventSelf","preventAll","sameUrl","Prevent","BarbaError","Store","_rules","filters","matching","active","valid","rule","_check","activeMatch","transitionType","infos","_addPriority","direction","hasMatch","strRule","objRule","fnName","_calculatePriority","ruleName","ruleIndex","Transitions","_running","_doAsyncHook","_isTransitionError","leaveResult","Views","view","_createHook","plugin","installedPlugins","preventCustom","_requestCustomError","_wrapper","_resetData","_onLinkEnter","_onLinkClick","_onStateChange","_bind","onceData","_unbind","readyData","_this5","link","_getLinkElement","_this6","_data","_boolean","validatorSpec","InputEvent"],"version":3,"file":"barba.922145b6.js.map"}