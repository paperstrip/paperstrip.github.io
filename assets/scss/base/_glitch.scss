.client-container
{
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  position: relative;
  background-image: radial-gradient(ellipse farthest-corner at 45px 45px, #E5F9FF 0%, #E5F9FF 100%);

  &:after{
    content: "";
    width:100%;
    height: 100%;
    position: absolute;
    opacity: 0;

    transition: all .4s ease;
    transition-delay: 0;
    background-image: radial-gradient(ellipse farthest-corner at 45px 45px, #161131 0%, #121116 100%);

  }
  &:before{
    content: "";
    width:100%;
    height: 100%;
    position: absolute;
    opacity: 0;

    transition: all .4s ease;
    transition-delay: 0;
    background: #161131;
    z-index: 2;
  }
}
.client-container{
  position: relative;
  width: 100%;
  height: 100vh;
  //background: url('../img/_1500/background-client.jpg');
  background-size: 100%;

  &.is-active{
    &:after{
      opacity: 1;
      transition-delay: 1s;
    }
  &.is-pixel{
    @import url('https://fonts.googleapis.com/css?family=Press+Start+2P');

    &:before{
      opacity: 1;

    }
    .glitch{
      display: flex;
      align-items: center;
      justify-content: center;
      &:after{
        position: absolute;
        color: orange;
        content: attr(aria-label);
        font-family: 'Press Start 2P', cursive;
        z-index: -1;
        top: 5px;

      }
      &:before{
        position: absolute;
        color: cyan;
        content: attr(aria-label);
        font-family: 'Press Start 2P', cursive;
        z-index: -1;
        margin-left: -5px


      }
      span{
        color: yellow ;
        font-family: 'Press Start 2P', cursive;

      }
    }
    .home-container__cover{
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url('../img/_1500/pixel.png');
      background-size: cover;
      background-position: 0 0;
      opacity: 0;
      &:before{
        display: none

      }
      &:after{

        display: none;


      }
    }
  }

  }
  .letter-animation{
    color: white;
  }
  .home-container__cover{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: url('../img/_1500/glitch.png');
    background-size: cover;
    background-position: 0 0;
    opacity: 0;
    &:before{
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url('../img/_1500/glitch.png');
      opacity: 1;
      background-size: cover;
      background-position: 0 0;
      mix-blend-mode: normal;

    }
    &:after{
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: url('../img/_1500/light-glitch.png');
      opacity: 1;
      background-size: cover;
      animation: animateScale 2.5s   linear infinite;
      transform-origin: center;
      animation-play-state: running;
      z-index: -1;



    }
  }

  &.animate{
    .home-container__cover{
      &:before{
        opacity: .5;
        mix-blend-mode: hard-light;
        animation: animate .2s   linear forwards;
        animation-iteration-count: 4;

      }
      &:after{
        animation-play-state: paused;
      }
    }

  }
}

@keyframes animate
{
	0%
	{
    mix-blend-mode: hard-light;
    opacity: .5;

		background-position: 0 0;
		filter: hue-rotate(0deg);
	}
	10%
	{
		background-position: 5px 0;
	}
	20%
	{
		background-position: -5px 0;
	}
	30%
	{
		background-position: 15px 0;
	}
	40%
	{
		background-position: -5px 0;
    background-image: url('../img/_1500/glitch-2.png');

	}
	50%
	{
		background-position: -25px 0;
	}
	60%
	{
		background-position: -50px 0;
	}
	70%
	{
		background-position: 0 -20px;
    background-image: url('../img/_1500/glitch.png');

	}
	80%
	{
		background-position: -60px -20px;
	}
	81%
	{
		background-position: 0 0;
    mix-blend-mode: hard-light;
    opacity: .5;
	}
	100%
	{
		background-position: 0 0;
		filter: hue-rotate(360deg);
    mix-blend-mode: normal;
    opacity: 1;
	}
}

@keyframes animateScale{
  0%{
    transform: scale(1);
    opacity: 1;

  }
  50%{

    transform: scale(1.1);
    opacity: .9;

  }
  100%{

    transform: scale(1);
    opacity: 1;


  }
}
.client-container__content{
  padding: 0 7%;
  z-index: 4;
  text-align: center;
  width: 100%;
  ul {
    margin-top: 40px;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
  }
  @include mq('tablet'){
    padding: 0;
  }
}


@mixin glitchCopy {
		content: attr(aria-label);
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
}

.animate:not(.is-pixel) .glitch {
	position: relative;
	/* Animation provies a slight random skew. Check bottom of doc
	for more information on how to random skew. */
	animation: glitch-skew 1s infinite linear alternate-reverse;

	// Creates a copy before our text.
	&::before{
		// Duplicates our text with the mixin.
		@include glitchCopy;
		// Scoots text slightly to the left for the color offset.
		left: 2px;
		// Creates the color 'shadow' that happens on the glitch.
		text-shadow: -2px 0 #ff00c1;
		/* Creates an initial clip for our glitch. This works in
		a typical top,right,bottom,left fashion and creates a mask
		to only show a certain part of the glitch at a time. */
		clip: rect(44px, 450px, 56px, 0);
		/* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
		with an alternating animation to keep things fresh. */
    transition: color .4s ease;

		animation: glitch-anim 5s infinite linear alternate-reverse;
	}

	// Creates a copy after our text. Note comments from ::before.
	&::after {
		@include glitchCopy;
    transition: color .4s ease;
		left: -2px;
		text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
		animation: glitch-anim2 1s infinite linear alternate-reverse;
	}
}

/* Creates an animation with 20 steaps. For each step, it calculates
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
			transform: skew((random(100) / 100) + deg);
    }
  }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}
